directive @auth on FIELD_DEFINITION

type Zone {
  id: ID!
	game: String,
  zoneName: String!
  zoneAuthor: User
  zoneDescription: String
  zoneImage: String
  levels: [Level]
  teachingLang: String
  usingLang: String
  createdAt: Int
}

input ZoneUpdated {
  id: ID!
  zoneId: String
  zoneName: String
  zonedescription: String
  favorite: Boolean
}

input ZoneCreateInput {
  zoneId: String
	zoneImage: String
  zoneName: String!
  zoneDescription: String
	teachingLang: String
  usingLang: String
}

type PaginatedZones {
  zones: [Zone]
  cursor: String
}

extend type Query {
  getZone(zoneId: String!): Zone!
	getZoneLevels(zoneId: String!): Zone!
  getZones(
    cursor: String
    zoneName: String!
    ref: String!
    author: String!
    usingLang: String!
    teachingLang: String!
  ): PaginatedZones  
	getCreatedZones(
    cursor: String
    author: String!
	): PaginatedZones @auth
  getZoneCount: Int
}

extend type Mutation {
  zoneCreate(input: ZoneCreateInput!): Zone! @auth
	zoneDelete(id: String!): Boolean
  zoneUpdate(input: ZoneUpdated!): Zone!
  zoneRemove(id: ID!): Boolean
}
