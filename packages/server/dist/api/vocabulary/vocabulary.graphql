type  Vocabulary {
	audioUrl: String
	level: Int
	levelId: ID 
	_id: ID
	gender: String
	word: String
	translation: String
}

type VocabularyPayload {
	vocabulary: Vocabulary 
  errors: [Error]
}

input VocabularyUpdated {
		_id: ID
		word: String
		translation: String
		audioUrl: String
}

input VocabularyCreateInput {
		audioUrl: String
		gender: String
		level: Int 
		levelId: ID
		translation: String
		word: String
}

type PaginatedVocabulary {
  vocabulary: [Vocabulary]
}

extend type Query {
  getVocabulary(levelId: String!): Vocabulary!
  getVocabularies(
		levelId: ID 
  ): PaginatedVocabulary 
  getVocabularyCount: Int
}


extend type Mutation {
	vocabularyCreate(input: VocabularyCreateInput!): VocabularyPayload
	vocabularyDelete(levelId: ID, word: String, translation: String): VocabularyPayload 
  vocabularyUpdate(input: VocabularyUpdated!): Vocabulary!
}
