{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/synchronous-promise/index.js","webpack:///../node_modules/synchronous-promise/index.js"],"names":["makeArrayFrom","obj","Array","prototype","slice","apply","PENDING","SynchronousPromise","handler","this","status","_continuations","_parent","_paused","call","_continueWith","bind","_failWith","looksLikeAPromise","then","nextFn","catchFn","next","unresolved","_setParent","_isRejected","push","promise","catchResult","_error","_chainPromiseData","resolve","e","reject","_runResolutions","catch","_isResolved","_data","_runRejections","pause","resume","firstPaused","_findFirstPaused","_findAncestry","reduce","acc","cur","node","children","parent","Error","data","firstPending","_findFirstPending","_setResolved","_findFirstAncestor","test","_isPending","matching","result","error","firstRejected","_setRejected","_takeContinuations","splice","length","continuations","self","forEach","cont","_handleUserFunctionResult","message","_handleWhenResolvedDataIsPromise","_handleResolutionError","continuation","e2","nextSynchronousPromise","promiseData","newData","newError","newResult","all","args","arguments","isArray","allData","numResolved","rejected","arg","idx","thisResult","err","doReject","Promise","RealPromise","installGlobally","__awaiter","__patched","originalAwaiter","patchAwaiterIfRequired","uninstallGlobally","module","exports"],"mappings":"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","file":"bundle.npm.synchronous-promise.95df947a92bd4c9dd1b9.js","sourcesContent":["/* jshint node: true */\r\n\"use strict\";\r\nfunction makeArrayFrom(obj) {\r\n  return Array.prototype.slice.apply(obj);\r\n}\r\nvar\r\n  PENDING = \"pending\",\r\n  RESOLVED = \"resolved\",\r\n  REJECTED = \"rejected\";\r\n\r\nfunction SynchronousPromise(handler) {\r\n  this.status = PENDING;\r\n  this._continuations = [];\r\n  this._parent = null;\r\n  this._paused = false;\r\n  if (handler) {\r\n    handler.call(\r\n      this,\r\n      this._continueWith.bind(this),\r\n      this._failWith.bind(this)\r\n    );\r\n  }\r\n}\r\n\r\nfunction looksLikeAPromise(obj) {\r\n  return obj && typeof (obj.then) === \"function\";\r\n}\r\n\r\nSynchronousPromise.prototype = {\r\n  then: function (nextFn, catchFn) {\r\n    var next = SynchronousPromise.unresolved()._setParent(this);\r\n    if (this._isRejected()) {\r\n      if (this._paused) {\r\n        this._continuations.push({\r\n          promise: next,\r\n          nextFn: nextFn,\r\n          catchFn: catchFn\r\n        });\r\n        return next;\r\n      }\r\n      if (catchFn) {\r\n        try {\r\n          var catchResult = catchFn(this._error);\r\n          if (looksLikeAPromise(catchResult)) {\r\n            this._chainPromiseData(catchResult, next);\r\n            return next;\r\n          } else {\r\n            return SynchronousPromise.resolve(catchResult)._setParent(this);\r\n          }\r\n        } catch (e) {\r\n          return SynchronousPromise.reject(e)._setParent(this);\r\n        }\r\n      }\r\n      return SynchronousPromise.reject(this._error)._setParent(this);\r\n    }\r\n    this._continuations.push({\r\n      promise: next,\r\n      nextFn: nextFn,\r\n      catchFn: catchFn\r\n    });\r\n    this._runResolutions();\r\n    return next;\r\n  },\r\n  catch: function (handler) {\r\n    if (this._isResolved()) {\r\n      return SynchronousPromise.resolve(this._data)._setParent(this);\r\n    }\r\n    var next = SynchronousPromise.unresolved()._setParent(this);\r\n    this._continuations.push({\r\n      promise: next,\r\n      catchFn: handler\r\n    });\r\n    this._runRejections();\r\n    return next;\r\n  },\r\n  pause: function () {\r\n    this._paused = true;\r\n    return this;\r\n  },\r\n  resume: function () {\r\n    var firstPaused = this._findFirstPaused();\r\n    if (firstPaused) {\r\n      firstPaused._paused = false;\r\n      firstPaused._runResolutions();\r\n      firstPaused._runRejections();\r\n    }\r\n    return this;\r\n  },\r\n  _findAncestry: function () {\r\n    return this._continuations.reduce(function (acc, cur) {\r\n      if (cur.promise) {\r\n        var node = {\r\n          promise: cur.promise,\r\n          children: cur.promise._findAncestry()\r\n        };\r\n        acc.push(node);\r\n      }\r\n      return acc;\r\n    }, []);\r\n  },\r\n  _setParent: function (parent) {\r\n    if (this._parent) {\r\n      throw new Error(\"parent already set\");\r\n    }\r\n    this._parent = parent;\r\n    return this;\r\n  },\r\n  _continueWith: function (data) {\r\n    var firstPending = this._findFirstPending();\r\n    if (firstPending) {\r\n      firstPending._data = data;\r\n      firstPending._setResolved();\r\n    }\r\n  },\r\n  _findFirstPending: function () {\r\n    return this._findFirstAncestor(function (test) {\r\n      return test._isPending && test._isPending();\r\n    });\r\n  },\r\n  _findFirstPaused: function () {\r\n    return this._findFirstAncestor(function (test) {\r\n      return test._paused;\r\n    });\r\n  },\r\n  _findFirstAncestor: function (matching) {\r\n    var test = this;\r\n    var result;\r\n    while (test) {\r\n      if (matching(test)) {\r\n        result = test;\r\n      }\r\n      test = test._parent;\r\n    }\r\n    return result;\r\n  },\r\n  _failWith: function (error) {\r\n    var firstRejected = this._findFirstPending();\r\n    if (firstRejected) {\r\n      firstRejected._error = error;\r\n      firstRejected._setRejected();\r\n    }\r\n  },\r\n  _takeContinuations: function () {\r\n    return this._continuations.splice(0, this._continuations.length);\r\n  },\r\n  _runRejections: function () {\r\n    if (this._paused || !this._isRejected()) {\r\n      return;\r\n    }\r\n    var\r\n      error = this._error,\r\n      continuations = this._takeContinuations(),\r\n      self = this;\r\n    continuations.forEach(function (cont) {\r\n      if (cont.catchFn) {\r\n        try {\r\n          var catchResult = cont.catchFn(error);\r\n          self._handleUserFunctionResult(catchResult, cont.promise);\r\n        } catch (e) {\r\n          var message = e.message;\r\n          cont.promise.reject(e);\r\n        }\r\n      } else {\r\n        cont.promise.reject(error);\r\n      }\r\n    });\r\n  },\r\n  _runResolutions: function () {\r\n    if (this._paused || !this._isResolved()) {\r\n      return;\r\n    }\r\n    var continuations = this._takeContinuations();\r\n    if (looksLikeAPromise(this._data)) {\r\n      return this._handleWhenResolvedDataIsPromise(this._data);\r\n    }\r\n    var data = this._data;\r\n    var self = this;\r\n    continuations.forEach(function (cont) {\r\n      if (cont.nextFn) {\r\n        try {\r\n          var result = cont.nextFn(data);\r\n          self._handleUserFunctionResult(result, cont.promise);\r\n        } catch (e) {\r\n          self._handleResolutionError(e, cont);\r\n        }\r\n      } else if (cont.promise) {\r\n        cont.promise.resolve(data);\r\n      }\r\n    });\r\n  },\r\n  _handleResolutionError: function (e, continuation) {\r\n    this._setRejected();\r\n    if (continuation.catchFn) {\r\n      try {\r\n        continuation.catchFn(e);\r\n        return;\r\n      } catch (e2) {\r\n        e = e2;\r\n      }\r\n    }\r\n    if (continuation.promise) {\r\n      continuation.promise.reject(e);\r\n    }\r\n  },\r\n  _handleWhenResolvedDataIsPromise: function (data) {\r\n    var self = this;\r\n    return data.then(function (result) {\r\n      self._data = result;\r\n      self._runResolutions();\r\n    }).catch(function (error) {\r\n      self._error = error;\r\n      self._setRejected();\r\n      self._runRejections();\r\n    });\r\n  },\r\n  _handleUserFunctionResult: function (data, nextSynchronousPromise) {\r\n    if (looksLikeAPromise(data)) {\r\n      this._chainPromiseData(data, nextSynchronousPromise);\r\n    } else {\r\n      nextSynchronousPromise.resolve(data);\r\n    }\r\n  },\r\n  _chainPromiseData: function (promiseData, nextSynchronousPromise) {\r\n    promiseData.then(function (newData) {\r\n      nextSynchronousPromise.resolve(newData);\r\n    }).catch(function (newError) {\r\n      nextSynchronousPromise.reject(newError);\r\n    });\r\n  },\r\n  _setResolved: function () {\r\n    this.status = RESOLVED;\r\n    if (!this._paused) {\r\n      this._runResolutions();\r\n    }\r\n  },\r\n  _setRejected: function () {\r\n    this.status = REJECTED;\r\n    if (!this._paused) {\r\n      this._runRejections();\r\n    }\r\n  },\r\n  _isPending: function () {\r\n    return this.status === PENDING;\r\n  },\r\n  _isResolved: function () {\r\n    return this.status === RESOLVED;\r\n  },\r\n  _isRejected: function () {\r\n    return this.status === REJECTED;\r\n  }\r\n};\r\n\r\nSynchronousPromise.resolve = function (result) {\r\n  return new SynchronousPromise(function (resolve, reject) {\r\n    if (looksLikeAPromise(result)) {\r\n      result.then(function (newResult) {\r\n        resolve(newResult);\r\n      }).catch(function (error) {\r\n        reject(error);\r\n      });\r\n    } else {\r\n      resolve(result);\r\n    }\r\n  });\r\n};\r\n\r\nSynchronousPromise.reject = function (result) {\r\n  return new SynchronousPromise(function (resolve, reject) {\r\n    reject(result);\r\n  });\r\n};\r\n\r\nSynchronousPromise.unresolved = function () {\r\n  return new SynchronousPromise(function (resolve, reject) {\r\n    this.resolve = resolve;\r\n    this.reject = reject;\r\n  });\r\n};\r\n\r\nSynchronousPromise.all = function () {\r\n  var args = makeArrayFrom(arguments);\r\n  if (Array.isArray(args[0])) {\r\n    args = args[0];\r\n  }\r\n  if (!args.length) {\r\n    return SynchronousPromise.resolve([]);\r\n  }\r\n  return new SynchronousPromise(function (resolve, reject) {\r\n    var\r\n      allData = [],\r\n      numResolved = 0,\r\n      doResolve = function () {\r\n        if (numResolved === args.length) {\r\n          resolve(allData);\r\n        }\r\n      },\r\n      rejected = false,\r\n      doReject = function (err) {\r\n        if (rejected) {\r\n          return;\r\n        }\r\n        rejected = true;\r\n        reject(err);\r\n      };\r\n    args.forEach(function (arg, idx) {\r\n      SynchronousPromise.resolve(arg).then(function (thisResult) {\r\n        allData[idx] = thisResult;\r\n        numResolved += 1;\r\n        doResolve();\r\n      }).catch(function (err) {\r\n        doReject(err);\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\n/* jshint ignore:start */\r\nif (Promise === SynchronousPromise) {\r\n  throw new Error(\"Please use SynchronousPromise.installGlobally() to install globally\");\r\n}\r\nvar RealPromise = Promise;\r\nSynchronousPromise.installGlobally = function(__awaiter) {\r\n  if (Promise === SynchronousPromise) {\r\n    return __awaiter;\r\n  }\r\n  var result = patchAwaiterIfRequired(__awaiter);\r\n  Promise = SynchronousPromise;\r\n  return result;\r\n};\r\n\r\nSynchronousPromise.uninstallGlobally = function() {\r\n  if (Promise === SynchronousPromise) {\r\n    Promise = RealPromise;\r\n  }\r\n};\r\n\r\nfunction patchAwaiterIfRequired(__awaiter) {\r\n  if (typeof(__awaiter) === \"undefined\" || __awaiter.__patched) {\r\n    return __awaiter;\r\n  }\r\n  var originalAwaiter = __awaiter;\r\n  __awaiter = function() {\r\n    var Promise = RealPromise;\r\n    originalAwaiter.apply(this, makeArrayFrom(arguments));\r\n  };\r\n  __awaiter.__patched = true;\r\n  return __awaiter;\r\n}\r\n/* jshint ignore:end */\r\n\r\nmodule.exports = {\r\n  SynchronousPromise: SynchronousPromise\r\n};","/* jshint node: true */\n\"use strict\";\nfunction makeArrayFrom(obj) {\n  return Array.prototype.slice.apply(obj);\n}\nvar\n  PENDING = \"pending\",\n  RESOLVED = \"resolved\",\n  REJECTED = \"rejected\";\n\nfunction SynchronousPromise(handler) {\n  this.status = PENDING;\n  this._continuations = [];\n  this._parent = null;\n  this._paused = false;\n  if (handler) {\n    handler.call(\n      this,\n      this._continueWith.bind(this),\n      this._failWith.bind(this)\n    );\n  }\n}\n\nfunction looksLikeAPromise(obj) {\n  return obj && typeof (obj.then) === \"function\";\n}\n\nSynchronousPromise.prototype = {\n  then: function (nextFn, catchFn) {\n    var next = SynchronousPromise.unresolved()._setParent(this);\n    if (this._isRejected()) {\n      if (this._paused) {\n        this._continuations.push({\n          promise: next,\n          nextFn: nextFn,\n          catchFn: catchFn\n        });\n        return next;\n      }\n      if (catchFn) {\n        try {\n          var catchResult = catchFn(this._error);\n          if (looksLikeAPromise(catchResult)) {\n            this._chainPromiseData(catchResult, next);\n            return next;\n          } else {\n            return SynchronousPromise.resolve(catchResult)._setParent(this);\n          }\n        } catch (e) {\n          return SynchronousPromise.reject(e)._setParent(this);\n        }\n      }\n      return SynchronousPromise.reject(this._error)._setParent(this);\n    }\n    this._continuations.push({\n      promise: next,\n      nextFn: nextFn,\n      catchFn: catchFn\n    });\n    this._runResolutions();\n    return next;\n  },\n  catch: function (handler) {\n    if (this._isResolved()) {\n      return SynchronousPromise.resolve(this._data)._setParent(this);\n    }\n    var next = SynchronousPromise.unresolved()._setParent(this);\n    this._continuations.push({\n      promise: next,\n      catchFn: handler\n    });\n    this._runRejections();\n    return next;\n  },\n  pause: function () {\n    this._paused = true;\n    return this;\n  },\n  resume: function () {\n    var firstPaused = this._findFirstPaused();\n    if (firstPaused) {\n      firstPaused._paused = false;\n      firstPaused._runResolutions();\n      firstPaused._runRejections();\n    }\n    return this;\n  },\n  _findAncestry: function () {\n    return this._continuations.reduce(function (acc, cur) {\n      if (cur.promise) {\n        var node = {\n          promise: cur.promise,\n          children: cur.promise._findAncestry()\n        };\n        acc.push(node);\n      }\n      return acc;\n    }, []);\n  },\n  _setParent: function (parent) {\n    if (this._parent) {\n      throw new Error(\"parent already set\");\n    }\n    this._parent = parent;\n    return this;\n  },\n  _continueWith: function (data) {\n    var firstPending = this._findFirstPending();\n    if (firstPending) {\n      firstPending._data = data;\n      firstPending._setResolved();\n    }\n  },\n  _findFirstPending: function () {\n    return this._findFirstAncestor(function (test) {\n      return test._isPending && test._isPending();\n    });\n  },\n  _findFirstPaused: function () {\n    return this._findFirstAncestor(function (test) {\n      return test._paused;\n    });\n  },\n  _findFirstAncestor: function (matching) {\n    var test = this;\n    var result;\n    while (test) {\n      if (matching(test)) {\n        result = test;\n      }\n      test = test._parent;\n    }\n    return result;\n  },\n  _failWith: function (error) {\n    var firstRejected = this._findFirstPending();\n    if (firstRejected) {\n      firstRejected._error = error;\n      firstRejected._setRejected();\n    }\n  },\n  _takeContinuations: function () {\n    return this._continuations.splice(0, this._continuations.length);\n  },\n  _runRejections: function () {\n    if (this._paused || !this._isRejected()) {\n      return;\n    }\n    var\n      error = this._error,\n      continuations = this._takeContinuations(),\n      self = this;\n    continuations.forEach(function (cont) {\n      if (cont.catchFn) {\n        try {\n          var catchResult = cont.catchFn(error);\n          self._handleUserFunctionResult(catchResult, cont.promise);\n        } catch (e) {\n          var message = e.message;\n          cont.promise.reject(e);\n        }\n      } else {\n        cont.promise.reject(error);\n      }\n    });\n  },\n  _runResolutions: function () {\n    if (this._paused || !this._isResolved()) {\n      return;\n    }\n    var continuations = this._takeContinuations();\n    if (looksLikeAPromise(this._data)) {\n      return this._handleWhenResolvedDataIsPromise(this._data);\n    }\n    var data = this._data;\n    var self = this;\n    continuations.forEach(function (cont) {\n      if (cont.nextFn) {\n        try {\n          var result = cont.nextFn(data);\n          self._handleUserFunctionResult(result, cont.promise);\n        } catch (e) {\n          self._handleResolutionError(e, cont);\n        }\n      } else if (cont.promise) {\n        cont.promise.resolve(data);\n      }\n    });\n  },\n  _handleResolutionError: function (e, continuation) {\n    this._setRejected();\n    if (continuation.catchFn) {\n      try {\n        continuation.catchFn(e);\n        return;\n      } catch (e2) {\n        e = e2;\n      }\n    }\n    if (continuation.promise) {\n      continuation.promise.reject(e);\n    }\n  },\n  _handleWhenResolvedDataIsPromise: function (data) {\n    var self = this;\n    return data.then(function (result) {\n      self._data = result;\n      self._runResolutions();\n    }).catch(function (error) {\n      self._error = error;\n      self._setRejected();\n      self._runRejections();\n    });\n  },\n  _handleUserFunctionResult: function (data, nextSynchronousPromise) {\n    if (looksLikeAPromise(data)) {\n      this._chainPromiseData(data, nextSynchronousPromise);\n    } else {\n      nextSynchronousPromise.resolve(data);\n    }\n  },\n  _chainPromiseData: function (promiseData, nextSynchronousPromise) {\n    promiseData.then(function (newData) {\n      nextSynchronousPromise.resolve(newData);\n    }).catch(function (newError) {\n      nextSynchronousPromise.reject(newError);\n    });\n  },\n  _setResolved: function () {\n    this.status = RESOLVED;\n    if (!this._paused) {\n      this._runResolutions();\n    }\n  },\n  _setRejected: function () {\n    this.status = REJECTED;\n    if (!this._paused) {\n      this._runRejections();\n    }\n  },\n  _isPending: function () {\n    return this.status === PENDING;\n  },\n  _isResolved: function () {\n    return this.status === RESOLVED;\n  },\n  _isRejected: function () {\n    return this.status === REJECTED;\n  }\n};\n\nSynchronousPromise.resolve = function (result) {\n  return new SynchronousPromise(function (resolve, reject) {\n    if (looksLikeAPromise(result)) {\n      result.then(function (newResult) {\n        resolve(newResult);\n      }).catch(function (error) {\n        reject(error);\n      });\n    } else {\n      resolve(result);\n    }\n  });\n};\n\nSynchronousPromise.reject = function (result) {\n  return new SynchronousPromise(function (resolve, reject) {\n    reject(result);\n  });\n};\n\nSynchronousPromise.unresolved = function () {\n  return new SynchronousPromise(function (resolve, reject) {\n    this.resolve = resolve;\n    this.reject = reject;\n  });\n};\n\nSynchronousPromise.all = function () {\n  var args = makeArrayFrom(arguments);\n  if (Array.isArray(args[0])) {\n    args = args[0];\n  }\n  if (!args.length) {\n    return SynchronousPromise.resolve([]);\n  }\n  return new SynchronousPromise(function (resolve, reject) {\n    var\n      allData = [],\n      numResolved = 0,\n      doResolve = function () {\n        if (numResolved === args.length) {\n          resolve(allData);\n        }\n      },\n      rejected = false,\n      doReject = function (err) {\n        if (rejected) {\n          return;\n        }\n        rejected = true;\n        reject(err);\n      };\n    args.forEach(function (arg, idx) {\n      SynchronousPromise.resolve(arg).then(function (thisResult) {\n        allData[idx] = thisResult;\n        numResolved += 1;\n        doResolve();\n      }).catch(function (err) {\n        doReject(err);\n      });\n    });\n  });\n};\n\n/* jshint ignore:start */\nif (Promise === SynchronousPromise) {\n  throw new Error(\"Please use SynchronousPromise.installGlobally() to install globally\");\n}\nvar RealPromise = Promise;\nSynchronousPromise.installGlobally = function(__awaiter) {\n  if (Promise === SynchronousPromise) {\n    return __awaiter;\n  }\n  var result = patchAwaiterIfRequired(__awaiter);\n  Promise = SynchronousPromise;\n  return result;\n};\n\nSynchronousPromise.uninstallGlobally = function() {\n  if (Promise === SynchronousPromise) {\n    Promise = RealPromise;\n  }\n};\n\nfunction patchAwaiterIfRequired(__awaiter) {\n  if (typeof(__awaiter) === \"undefined\" || __awaiter.__patched) {\n    return __awaiter;\n  }\n  var originalAwaiter = __awaiter;\n  __awaiter = function() {\n    var Promise = RealPromise;\n    originalAwaiter.apply(this, makeArrayFrom(arguments));\n  };\n  __awaiter.__patched = true;\n  return __awaiter;\n}\n/* jshint ignore:end */\n\nmodule.exports = {\n  SynchronousPromise: SynchronousPromise\n};"],"sourceRoot":""}