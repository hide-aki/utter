{"version":3,"sources":["webpack:///./layouts/courses/containers/course-edit.js"],"names":["initialCoursesContainerState","courseRef","CourseEdit","props","babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","this","_this","babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default","__proto__","Object","getPrototypeOf","call","locationName","path","handleImageClick","e","state","cloneDeep","SubRoutes","route","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","render","component","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","routes","_props","course","user","semantic_ui_react__WEBPACK_IMPORTED_MODULE_13__","stackable","react_helmet__WEBPACK_IMPORTED_MODULE_11__","charset","name","content","rel","href","Column","width","style","background","minHeight","columns","centered","padded","textAlign","_components__WEBPACK_IMPORTED_MODULE_12__","margin","semantic_ui_react__WEBPACK_IMPORTED_MODULE_14__","align","semantic_ui_react__WEBPACK_IMPORTED_MODULE_15__","as","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","activeStyle","fontWeight","fontSize","color","to","roles","perform","username","ownerId","yes","no","onClick","forceUpdate","key","Component","mapStateToProps","session","schema","apiReducer","User","Course","userObj","toRefArray","courseObj","connect","_default2","__webpack_exports__"],"mappings":"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","file":"bundle.140.5c93eee4f6e569ab4415.js","sourcesContent":["import React, {Component} from \"react\"\nimport {connect} from \"react-redux\"\nimport schema from \"../../../app/schema.js\"\nimport {\n  /* Switch, */\n  Route,\n  NavLink\n} from \"react-router-dom\"\n/* import Select from \"react-select\" */\nimport {cloneDeep} from \"lodash\"\nimport {Helmet} from \"react-helmet\"\nimport {Can, Spacer} from \"../../../components\"\n\nimport {\n  Grid,\n  Header,\n  Item\n  /* Segment, */\n  /* Select as SemSelect */\n} from \"semantic-ui-react\"\nimport \"react-select/dist/react-select.css\" // comment out exclude node_modules for css-loader\n/* import \"./styles.css\" */\n\n/* const getCourse = gql` */\n/*   query getCourse($courseId: String) { */\n/*     getCourse(courseId: $courseId) { */\n/*       course { */\n/*         id */\n/*         courseImage */\n/*         courseName */\n/*         courseMode */\n/*         courseAuthor { */\n/*           username */\n/*         } */\n/*       } */\n/*     } */\n/*   } */\n\n/* ` */\n\nconst initialCoursesContainerState = {\n  courseRef: \"\"\n}\n\nclass CourseEdit extends Component {\n  locationName = this.props.path\n\n  constructor(props) {\n    super(props)\n\n    this.state = cloneDeep(initialCoursesContainerState)\n  }\n\n  handleImageClick = e => {\n    e.preventDefault()\n    // TODO\n  }\n\n  render() {\n    const SubRoutes = route => (\n      <Route\n        path={route.path}\n        render={props => <route.component {...props} routes={route.routes} />}\n      />\n    )\n    const {course, routes, user} = this.props\n    return (\n      <div>\n        <Grid stackable>\n          <Helmet>\n            <meta charset=\"utf-8\" />\n            <meta\n              name=\"viewport\"\n              content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n            />\n            <meta\n              name=\"description\"\n              content=\"Edit your course.  Add material that you are using from another learning resource and make it your own.  Create a strategy that think makes the most sense and is pedagogically sound.\"\n            />\n            <meta name=\"author\" content=\"Isaac Pak\" />\n            <title>Utterzone | Course Edit</title>\n            <link rel=\"canonical\" href=\"https://utter.zone/course/:id\" />\n          </Helmet>\n          <Grid.Column\n            width={4}\n            style={{background: \"LightGray\", minHeight: \"900px\"}}>\n            <Grid columns={1} centered padded=\"vertically\">\n              <Grid.Column textAlign=\"center\">\n                <Spacer margin=\"50px 0 0 0\" />\n                <Item align=\"center\">\n                  <Header as=\"h2\">\n                    <NavLink\n                      activeStyle={{\n                        fontWeight: \"bold\",\n                        fontSize: \"1em\",\n                        color: \"orange\"\n                      }}\n                      to=\"/course/course-introduction\">\n                      Introduction\n                    </NavLink>\n                  </Header>\n                  <Can\n                    roles={user.roles}\n                    perform=\"course:update\"\n                    username={user.username}\n                    ownerId={course.courseAuthor.username}\n                    yes={() => (\n                      <Header as=\"h2\">\n                        <NavLink\n                          activeStyle={{\n                            fontWeight: \"bold\",\n                            fontSize: \"1em\",\n                            color: \"orange\"\n                          }}\n                          to=\"/course/course-settings\">\n                          Settings\n                        </NavLink>\n                      </Header>\n                    )}\n                    no={() => null}\n                  />\n                  <Header as=\"h2\">\n                    <NavLink\n                      activeStyle={{\n                        fontWeight: \"bold\",\n                        fontSize: \"1em\",\n                        color: \"orange\"\n                      }}\n                      to=\"/course/levels\">\n                      Levels\n                    </NavLink>\n                  </Header>\n                  <Header as=\"h2\">Vocabulary</Header>\n                  <Header as=\"h2\">Grammar</Header>\n                  <Header as=\"h2\">Phrases</Header>\n                  <div style={{margin: \"40px 0 0 0\"}}>\n                    <NavLink\n                      activeStyle={{\n                        fontWeight: \"bold\",\n                        fontSize: \"1em\",\n                        color: \"orange\"\n                      }}\n                      to=\"/courses/created\"\n                      onClick={this.forceUpdate}>\n                      My Created Courses\n                    </NavLink>\n                  </div>\n                </Item>\n              </Grid.Column>\n            </Grid>\n          </Grid.Column>\n          <Grid.Column width={12}>\n            {routes.map(route => (\n              <SubRoutes key={route.path} {...route} />\n            ))}\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const session = schema.session(state.apiReducer)\n  const {User, Course} = session\n  const userObj = User.all().toRefArray()\n  const courseObj = Course.all().toRefArray()\n  var user = userObj[0]\n  var course = courseObj[0]\n\n  return {\n    user,\n    course\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CourseEdit)\n"],"sourceRoot":""}