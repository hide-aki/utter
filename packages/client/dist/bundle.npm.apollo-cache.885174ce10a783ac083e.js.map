{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/apollo-cache/lib/bundle.esm.js"],"names":["__webpack_require__","d","__webpack_exports__","ApolloCache","apollo_utilities__WEBPACK_IMPORTED_MODULE_0__","queryFromPojo","obj","kind","definitions","operation","name","value","selectionSet","selectionSetFromObj","Array","isArray","selections","Object","keys","forEach","key","field","undefined","push","Cache","justTypenameQuery","variableDefinitions","directives","alias","arguments","prototype","transformDocument","document","transformForLink","readQuery","options","optimistic","this","read","query","variables","readFragment","fragment","fragmentName","rootId","id","writeQuery","write","dataId","result","data","writeFragment","writeData","_a","typename","typenameResult","e","__typename","dataToWrite","assign","typeCondition"],"mappings":"4FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,QAEA,SAAAK,EAAAC,GAcA,MAJA,CACAC,KAAA,WACAC,YAAA,CAXA,CACAD,KAAA,sBACAE,UAAA,QACAC,KAAA,CACAH,KAAA,OACAI,MAAA,wBAEAC,aAAAC,EAAAP,MA8BA,SAAAO,EAAAP,GACA,oBAAAA,GACA,kBAAAA,GACA,iBAAAA,GAFA,MAGAA,EAEA,YAEA,GAAAQ,MAAAC,QAAAT,GACA,OAAAO,EAAAP,EAAA,IAEA,IAAAU,EAAA,GAiBA,OAhBAC,OAAAC,KAAAZ,GAAAa,QAAA,SAAAC,GACA,IACAC,EAAA,CACAd,KAAA,QACAG,KAAA,CACAH,KAAA,OACAI,MAAAS,GAEAR,aAPAC,EAAAP,EAAAc,UAOAE,GAEAN,EAAAO,KAAAF,KAEA,CACAd,KAAA,eACAS,cAIA,IAmGAQ,EAnGAC,EAAA,CACAlB,KAAA,WACAC,YAAA,CACA,CACAD,KAAA,sBACAE,UAAA,QACAC,KAAA,KACAgB,oBAAA,KACAC,WAAA,GACAf,aAAA,CACAL,KAAA,eACAS,WAAA,CACA,CACAT,KAAA,QACAqB,MAAA,KACAlB,KAAA,CACAH,KAAA,OACAI,MAAA,cAEAkB,UAAA,GACAF,WAAA,GACAf,aAAA,WAQAT,EAAA,WACA,SAAAA,KAkEA,OAhEAA,EAAA2B,UAAAC,kBAAA,SAAAC,GACA,OAAAA,GAEA7B,EAAA2B,UAAAG,iBAAA,SAAAD,GACA,OAAAA,GAEA7B,EAAA2B,UAAAI,UAAA,SAAAC,EAAAC,GAEA,YADA,IAAAA,IAAoCA,GAAA,GACpCC,KAAAC,KAAA,CACAC,MAAAJ,EAAAI,MACAC,UAAAL,EAAAK,UACAJ,gBAGAjC,EAAA2B,UAAAW,aAAA,SAAAN,EAAAC,GAEA,YADA,IAAAA,IAAoCA,GAAA,GACpCC,KAAAC,KAAA,CACAC,MAAmBtB,OAAAb,EAAA,EAAAa,CAAwBkB,EAAAO,SAAAP,EAAAQ,cAC3CH,UAAAL,EAAAK,UACAI,OAAAT,EAAAU,GACAT,gBAGAjC,EAAA2B,UAAAgB,WAAA,SAAAX,GACAE,KAAAU,MAAA,CACAC,OAAA,aACAC,OAAAd,EAAAe,KACAX,MAAAJ,EAAAI,MACAC,UAAAL,EAAAK,aAGArC,EAAA2B,UAAAqB,cAAA,SAAAhB,GACAE,KAAAU,MAAA,CACAC,OAAAb,EAAAU,GACAI,OAAAd,EAAAe,KACAV,UAAAL,EAAAK,UACAD,MAAmBtB,OAAAb,EAAA,EAAAa,CAAwBkB,EAAAO,SAAAP,EAAAQ,iBAG3CxC,EAAA2B,UAAAsB,UAAA,SAAAC,GACA,IA5HA/C,EAAAgD,EA4HAT,EAAAQ,EAAAR,GAAAK,EAAAG,EAAAH,KACA,YAAAL,EAAA,CACA,IAAAU,EAAA,KACA,IACAA,EAAAlB,KAAAC,KAAA,CACAM,OAAAC,EACAT,YAAA,EACAG,MAAAd,IAGA,MAAA+B,IAEA,IAAAC,EAAAF,KAAAE,YAAA,eACAC,EAAAzC,OAAA0C,OAAA,CAA6CF,cAAyBP,GACtEb,KAAAc,cAAA,CACAN,KACAH,UA5IApC,EA4IAoD,EA5IAJ,EA4IAG,EA5HA,CACAlD,KAAA,WACAC,YAAA,CAjBA,CACAD,KAAA,qBACAqD,cAAA,CACArD,KAAA,YACAG,KAAA,CACAH,KAAA,OACAI,MAAA2C,GAAA,eAGA5C,KAAA,CACAH,KAAA,OACAI,MAAA,wBAEAC,aAAAC,EAAAP,OA+HA4C,KAAAQ,SAIArB,KAAAS,WAAA,CAA6BP,MAAAlC,EAAA6C,aAG7B/C,EAnEA,GAwECqB,MAAA","file":"bundle.npm.apollo-cache.885174ce10a783ac083e.js","sourcesContent":["import { getFragmentQueryDocument } from 'apollo-utilities';\n\nfunction queryFromPojo(obj) {\n    var op = {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [op],\n    };\n    return out;\n}\nfunction fragmentFromPojo(obj, typename) {\n    var frag = {\n        kind: 'FragmentDefinition',\n        typeCondition: {\n            kind: 'NamedType',\n            name: {\n                kind: 'Name',\n                value: typename || '__FakeType',\n            },\n        },\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [frag],\n    };\n    return out;\n}\nfunction selectionSetFromObj(obj) {\n    if (typeof obj === 'number' ||\n        typeof obj === 'boolean' ||\n        typeof obj === 'string' ||\n        typeof obj === 'undefined' ||\n        obj === null) {\n        return null;\n    }\n    if (Array.isArray(obj)) {\n        return selectionSetFromObj(obj[0]);\n    }\n    var selections = [];\n    Object.keys(obj).forEach(function (key) {\n        var nestedSelSet = selectionSetFromObj(obj[key]);\n        var field = {\n            kind: 'Field',\n            name: {\n                kind: 'Name',\n                value: key,\n            },\n            selectionSet: nestedSelSet || undefined,\n        };\n        selections.push(field);\n    });\n    var selectionSet = {\n        kind: 'SelectionSet',\n        selections: selections,\n    };\n    return selectionSet;\n}\nvar justTypenameQuery = {\n    kind: 'Document',\n    definitions: [\n        {\n            kind: 'OperationDefinition',\n            operation: 'query',\n            name: null,\n            variableDefinitions: null,\n            directives: [],\n            selectionSet: {\n                kind: 'SelectionSet',\n                selections: [\n                    {\n                        kind: 'Field',\n                        alias: null,\n                        name: {\n                            kind: 'Name',\n                            value: '__typename',\n                        },\n                        arguments: [],\n                        directives: [],\n                        selectionSet: null,\n                    },\n                ],\n            },\n        },\n    ],\n};\n\nvar ApolloCache = (function () {\n    function ApolloCache() {\n    }\n    ApolloCache.prototype.transformDocument = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.transformForLink = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: options.query,\n            variables: options.variables,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n            variables: options.variables,\n            rootId: options.id,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.writeQuery = function (options) {\n        this.write({\n            dataId: 'ROOT_QUERY',\n            result: options.data,\n            query: options.query,\n            variables: options.variables,\n        });\n    };\n    ApolloCache.prototype.writeFragment = function (options) {\n        this.write({\n            dataId: options.id,\n            result: options.data,\n            variables: options.variables,\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n        });\n    };\n    ApolloCache.prototype.writeData = function (_a) {\n        var id = _a.id, data = _a.data;\n        if (typeof id !== 'undefined') {\n            var typenameResult = null;\n            try {\n                typenameResult = this.read({\n                    rootId: id,\n                    optimistic: false,\n                    query: justTypenameQuery,\n                });\n            }\n            catch (e) {\n            }\n            var __typename = (typenameResult && typenameResult.__typename) || '__ClientData';\n            var dataToWrite = Object.assign({ __typename: __typename }, data);\n            this.writeFragment({\n                id: id,\n                fragment: fragmentFromPojo(dataToWrite, __typename),\n                data: dataToWrite,\n            });\n        }\n        else {\n            this.writeQuery({ query: queryFromPojo(data), data: data });\n        }\n    };\n    return ApolloCache;\n}());\n\nvar Cache;\n(function (Cache) {\n})(Cache || (Cache = {}));\n\nexport { ApolloCache, Cache };\n//# sourceMappingURL=bundle.esm.js.map\n"],"sourceRoot":""}