{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/redux-saga/es/internal/channel.js","webpack:////var/www/html/utter/node_modules/redux-saga/es/internal/sagaHelpers/fsmIterator.js","webpack:////var/www/html/utter/node_modules/redux-saga/es/internal/sagaHelpers/takeEvery.js","webpack:////var/www/html/utter/node_modules/redux-saga/es/internal/sagaHelpers/takeLatest.js","webpack:////var/www/html/utter/node_modules/redux-saga/es/internal/sagaHelpers/throttle.js","webpack:////var/www/html/utter/node_modules/redux-saga/es/internal/sagaHelpers/index.js","webpack:////var/www/html/utter/node_modules/redux-saga/es/internal/proc.js","webpack:////var/www/html/utter/node_modules/redux-saga/es/internal/runSaga.js","webpack:////var/www/html/utter/node_modules/redux-saga/es/index.js","webpack:////var/www/html/utter/node_modules/redux-saga/es/internal/middleware.js","webpack:////var/www/html/utter/node_modules/redux-saga/es/internal/io-helpers.js","webpack:////var/www/html/utter/node_modules/redux-saga/es/effects.js","webpack:////var/www/html/utter/node_modules/redux-saga/es/internal/utils.js","webpack:////var/www/html/utter/node_modules/redux-saga/es/internal/buffers.js","webpack:////var/www/html/utter/node_modules/redux-saga/es/internal/io.js","webpack:////var/www/html/utter/node_modules/redux-saga/es/internal/scheduler.js"],"names":["__webpack_require__","d","__webpack_exports__","END","isEnd","emitter","eventChannel","stdChannel","_utils__WEBPACK_IMPORTED_MODULE_0__","_buffers__WEBPACK_IMPORTED_MODULE_1__","_scheduler__WEBPACK_IMPORTED_MODULE_2__","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","type","a","subscribers","subscribe","sub","push","emit","item","arr","slice","len","INVALID_BUFFER","UNDEFINED_INPUT_ERROR","buffer","undefined","none","matcher","func","chan","fixed","closed","takers","checkForbiddenStates","isEmpty","take","cb","cancel","put","input","notUndef","splice","flush","close","__takers__","__closed__","channel","unsubscribe","Error","done","value","qEnd","safeName","patternOrChannel","utils","Array","isArray","String","map","entry","fsmIterator","fsm","q0","name","updateState","qNext","next","arg","error","_fsm$qNext","q","output","_updateState","takeEvery","worker","_len","args","_key","yTake","io","action","setAction","ac","q1","q2","internal_channel","apply","concat","takeLatest","yFork","yCancel","task","setTask","t","q3","throttle","delayLength","pattern","yActionChannel","buffers","sliding","yDelay","setChannel","ch","q4","_typeof","Symbol","iterator","obj","constructor","NOT_ITERATOR_ERROR","CHANNEL_END","toString","TASK_CANCEL","matchers","wildcard","default","array","patterns","some","p","predicate","_predicate","stringableFunc","wrapHelper","helper","fn","proc","dispatch","getState","parentContext","options","parentEffectId","cont","runParallelEffect","runAllEffect","sagaMonitor","logger","onError","log","logError","err","message","sagaStack","stack","split","indexOf","taskContext","create","id","_ref9","_mutatorMap","_deferredEnd","get","promise","def","_isRunning","_error","reject","resolve","_result","joiners","isRunning","isCancelled","_isCancelled","isAborted","_isAborted","result","setContext","props","object","descs","desc","configurable","enumerable","writable","defineProperty","_defineEnumerableProperties","newTask","mainTask","taskQueue","tasks","completed","abort","cancelAll","addTask","res","isErr","forEach","getTasks","taskNames","forkQueue","end","throw","return","isMainRunning","runEffect","j","effect","label","effectId","effectTriggered","effectSettled","currCb","effectRejected","effectResolved","effectCancelled","data","resolvePromise","runForkEffect","resolveIterator","_ref2","maybe","takeCb","inp","runTakeEffect","_ref3","scheduler","runPutEffect","all","race","effects","keys","childCbs","chCbAtKey","_response","response","runRaceEffect","_ref4","context","runCallEffect","cps","_ref5","cpsCb","undef","runCPSEffect","fork","join","joiner","runJoinEffect","taskToCancel","runCancelEffect","select","_ref7","selector","state","runSelectEffect","actionChannel","_ref8","match","runChannelEffect","runFlushEffect","cancelled","runCancelledEffect","getContext","prop","runGetContextEffect","runSetContextEffect","cancelPromise","then","_ref6","detached","taskIterator","_ref","pc","eff","createTaskIterator","_task","completedCount","results","from","NON_GENERATOR_ERR","RUN_SAGA_SIGNATURE","_ref$context","_objectWithoutProperties","sagaMiddleware","sagaEmitter","run","storeInterface","saga","_storeInterface","actionDispatched","root","bind","_len2","_key2","sagaHelpers","sym","TASK","MATCH","CANCEL","SAGA_ACTION","SELF_CANCELLATION","kTrue","noop","ident","check","is","remove","deferred","delay","uid","makeIterator","deprecate","updateIncentive","internalErr","createSetContextWarning","wrapSagaDispatch","HELPER","konst","v","hasOwn","property","f","number","n","string","s","it","iterable","observable","ob","buf","pat","index","Promise","ms","val","timeoutId","setTimeout","clearTimeout","autoInc","seed","kThrow","kReturn","thro","isHelper","level","window","console","deprecationWarning","deprecated","preferred","ctx","BUFFER_OVERFLOW","ON_OVERFLOW_THROW","ON_OVERFLOW_SLIDE","ON_OVERFLOW_EXPAND","zeroBuffer","ringBuffer","limit","overflowAction","pushIndex","popIndex","items","doubledLimit","dropping","expanding","initialSize","asEffect","IO","TAKE","PUT","ALL","RACE","CALL","CPS","FORK","JOIN","SELECT","ACTION_CHANNEL","CANCELLED","FLUSH","GET_CONTEXT","SET_CONTEXT","TEST_HINT","payload","getFnCallDesc","meth","_fn","_fn2","_len3","_key3","_len6","_key6","_len7","_key7","sync","createAsEffectType","asap","suspend","queue","semaphore","exec","release","shift"],"mappings":"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","file":"bundle.npm.redux-saga.64151294ca9b5ccf4bfa.js","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport { is, check, remove, MATCH, internalErr, SAGA_ACTION } from './utils';\nimport { buffers } from './buffers';\nimport { asap } from './scheduler';\n\nvar CHANNEL_END_TYPE = '@@redux-saga/CHANNEL_END';\nexport var END = { type: CHANNEL_END_TYPE };\nexport var isEnd = function isEnd(a) {\n  return a && a.type === CHANNEL_END_TYPE;\n};\n\nexport function emitter() {\n  var subscribers = [];\n\n  function subscribe(sub) {\n    subscribers.push(sub);\n    return function () {\n      return remove(subscribers, sub);\n    };\n  }\n\n  function emit(item) {\n    var arr = subscribers.slice();\n    for (var i = 0, len = arr.length; i < len; i++) {\n      arr[i](item);\n    }\n  }\n\n  return {\n    subscribe: subscribe,\n    emit: emit\n  };\n}\n\nexport var INVALID_BUFFER = 'invalid buffer passed to channel factory function';\nexport var UNDEFINED_INPUT_ERROR = 'Saga was provided with an undefined action';\n\nif (process.env.NODE_ENV !== 'production') {\n  UNDEFINED_INPUT_ERROR += '\\nHints:\\n    - check that your Action Creator returns a non-undefined value\\n    - if the Saga was started using runSaga, check that your subscribe source provides the action to its listeners\\n  ';\n}\n\nexport function channel() {\n  var buffer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : buffers.fixed();\n\n  var closed = false;\n  var takers = [];\n\n  check(buffer, is.buffer, INVALID_BUFFER);\n\n  function checkForbiddenStates() {\n    if (closed && takers.length) {\n      throw internalErr('Cannot have a closed channel with pending takers');\n    }\n    if (takers.length && !buffer.isEmpty()) {\n      throw internalErr('Cannot have pending takers with non empty buffer');\n    }\n  }\n\n  function put(input) {\n    checkForbiddenStates();\n    check(input, is.notUndef, UNDEFINED_INPUT_ERROR);\n    if (closed) {\n      return;\n    }\n    if (!takers.length) {\n      return buffer.put(input);\n    }\n    for (var i = 0; i < takers.length; i++) {\n      var cb = takers[i];\n      if (!cb[MATCH] || cb[MATCH](input)) {\n        takers.splice(i, 1);\n        return cb(input);\n      }\n    }\n  }\n\n  function take(cb) {\n    checkForbiddenStates();\n    check(cb, is.func, \"channel.take's callback must be a function\");\n\n    if (closed && buffer.isEmpty()) {\n      cb(END);\n    } else if (!buffer.isEmpty()) {\n      cb(buffer.take());\n    } else {\n      takers.push(cb);\n      cb.cancel = function () {\n        return remove(takers, cb);\n      };\n    }\n  }\n\n  function flush(cb) {\n    checkForbiddenStates(); // TODO: check if some new state should be forbidden now\n    check(cb, is.func, \"channel.flush' callback must be a function\");\n    if (closed && buffer.isEmpty()) {\n      cb(END);\n      return;\n    }\n    cb(buffer.flush());\n  }\n\n  function close() {\n    checkForbiddenStates();\n    if (!closed) {\n      closed = true;\n      if (takers.length) {\n        var arr = takers;\n        takers = [];\n        for (var i = 0, len = arr.length; i < len; i++) {\n          arr[i](END);\n        }\n      }\n    }\n  }\n\n  return {\n    take: take,\n    put: put,\n    flush: flush,\n    close: close,\n    get __takers__() {\n      return takers;\n    },\n    get __closed__() {\n      return closed;\n    }\n  };\n}\n\nexport function eventChannel(subscribe) {\n  var buffer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : buffers.none();\n  var matcher = arguments[2];\n\n  /**\n    should be if(typeof matcher !== undefined) instead?\n    see PR #273 for a background discussion\n  **/\n  if (arguments.length > 2) {\n    check(matcher, is.func, 'Invalid match function passed to eventChannel');\n  }\n\n  var chan = channel(buffer);\n  var close = function close() {\n    if (!chan.__closed__) {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n      chan.close();\n    }\n  };\n  var unsubscribe = subscribe(function (input) {\n    if (isEnd(input)) {\n      close();\n      return;\n    }\n    if (matcher && !matcher(input)) {\n      return;\n    }\n    chan.put(input);\n  });\n  if (chan.__closed__) {\n    unsubscribe();\n  }\n\n  if (!is.func(unsubscribe)) {\n    throw new Error('in eventChannel: subscribe should return a function to unsubscribe');\n  }\n\n  return {\n    take: chan.take,\n    flush: chan.flush,\n    close: close\n  };\n}\n\nexport function stdChannel(subscribe) {\n  var chan = eventChannel(function (cb) {\n    return subscribe(function (input) {\n      if (input[SAGA_ACTION]) {\n        cb(input);\n        return;\n      }\n      asap(function () {\n        return cb(input);\n      });\n    });\n  });\n\n  return _extends({}, chan, {\n    take: function take(cb, matcher) {\n      if (arguments.length > 1) {\n        check(matcher, is.func, \"channel.take's matcher argument must be a function\");\n        cb[MATCH] = matcher;\n      }\n      chan.take(cb);\n    }\n  });\n}","import { is, makeIterator } from '../utils';\n\nvar done = { done: true, value: undefined };\nexport var qEnd = {};\n\nexport function safeName(patternOrChannel) {\n  if (is.channel(patternOrChannel)) {\n    return 'channel';\n  } else if (Array.isArray(patternOrChannel)) {\n    return String(patternOrChannel.map(function (entry) {\n      return String(entry);\n    }));\n  } else {\n    return String(patternOrChannel);\n  }\n}\n\nexport default function fsmIterator(fsm, q0) {\n  var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'iterator';\n\n  var updateState = void 0,\n      qNext = q0;\n\n  function next(arg, error) {\n    if (qNext === qEnd) {\n      return done;\n    }\n\n    if (error) {\n      qNext = qEnd;\n      throw error;\n    } else {\n      updateState && updateState(arg);\n\n      var _fsm$qNext = fsm[qNext](),\n          q = _fsm$qNext[0],\n          output = _fsm$qNext[1],\n          _updateState = _fsm$qNext[2];\n\n      qNext = q;\n      updateState = _updateState;\n      return qNext === qEnd ? done : output;\n    }\n  }\n\n  return makeIterator(next, function (error) {\n    return next(null, error);\n  }, name, true);\n}","import fsmIterator, { qEnd, safeName } from './fsmIterator';\nimport { take, fork } from '../io';\nimport { END } from '../channel';\n\nexport default function takeEvery(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = { done: false, value: take(patternOrChannel) };\n  var yFork = function yFork(ac) {\n    return { done: false, value: fork.apply(undefined, [worker].concat(args, [ac])) };\n  };\n\n  var action = void 0,\n      setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return ['q2', yTake, setAction];\n    },\n    q2: function q2() {\n      return action === END ? [qEnd] : ['q1', yFork(action)];\n    }\n  }, 'q1', 'takeEvery(' + safeName(patternOrChannel) + ', ' + worker.name + ')');\n}","import fsmIterator, { qEnd, safeName } from './fsmIterator';\nimport { cancel, take, fork } from '../io';\nimport { END } from '../channel';\n\nexport default function takeLatest(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = { done: false, value: take(patternOrChannel) };\n  var yFork = function yFork(ac) {\n    return { done: false, value: fork.apply(undefined, [worker].concat(args, [ac])) };\n  };\n  var yCancel = function yCancel(task) {\n    return { done: false, value: cancel(task) };\n  };\n\n  var task = void 0,\n      action = void 0;\n  var setTask = function setTask(t) {\n    return task = t;\n  };\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return ['q2', yTake, setAction];\n    },\n    q2: function q2() {\n      return action === END ? [qEnd] : task ? ['q3', yCancel(task)] : ['q1', yFork(action), setTask];\n    },\n    q3: function q3() {\n      return ['q1', yFork(action), setTask];\n    }\n  }, 'q1', 'takeLatest(' + safeName(patternOrChannel) + ', ' + worker.name + ')');\n}","import fsmIterator, { qEnd, safeName } from './fsmIterator';\nimport { take, fork, actionChannel, call } from '../io';\nimport { END } from '../channel';\nimport { buffers } from '../buffers';\nimport { delay } from '../utils';\n\nexport default function throttle(delayLength, pattern, worker) {\n  for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var action = void 0,\n      channel = void 0;\n\n  var yActionChannel = { done: false, value: actionChannel(pattern, buffers.sliding(1)) };\n  var yTake = function yTake() {\n    return { done: false, value: take(channel) };\n  };\n  var yFork = function yFork(ac) {\n    return { done: false, value: fork.apply(undefined, [worker].concat(args, [ac])) };\n  };\n  var yDelay = { done: false, value: call(delay, delayLength) };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n  var setChannel = function setChannel(ch) {\n    return channel = ch;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return ['q2', yActionChannel, setChannel];\n    },\n    q2: function q2() {\n      return ['q3', yTake(), setAction];\n    },\n    q3: function q3() {\n      return action === END ? [qEnd] : ['q4', yFork(action)];\n    },\n    q4: function q4() {\n      return ['q2', yDelay];\n    }\n  }, 'q1', 'throttle(' + safeName(pattern) + ', ' + worker.name + ')');\n}","import takeEveryHelper from './takeEvery';\nimport takeLatestHelper from './takeLatest';\nimport throttleHelper from './throttle';\n\nimport { deprecate } from '../utils';\n\nvar deprecationWarning = function deprecationWarning(helperName) {\n  return 'import { ' + helperName + ' } from \\'redux-saga\\' has been deprecated in favor of import { ' + helperName + ' } from \\'redux-saga/effects\\'.\\nThe latter will not work with yield*, as helper effects are wrapped automatically for you in fork effect.\\nTherefore yield ' + helperName + ' will return task descriptor to your saga and execute next lines of code.';\n};\n\nvar takeEvery = /*#__PURE__*/deprecate(takeEveryHelper, /*#__PURE__*/deprecationWarning('takeEvery'));\nvar takeLatest = /*#__PURE__*/deprecate(takeLatestHelper, /*#__PURE__*/deprecationWarning('takeLatest'));\nvar throttle = /*#__PURE__*/deprecate(throttleHelper, /*#__PURE__*/deprecationWarning('throttle'));\n\nexport { takeEvery, takeLatest, throttle, takeEveryHelper, takeLatestHelper, throttleHelper };","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _defineEnumerableProperties(obj, descs) { for (var key in descs) { var desc = descs[key]; desc.configurable = desc.enumerable = true; if (\"value\" in desc) desc.writable = true; Object.defineProperty(obj, key, desc); } return obj; }\n\nimport { noop, kTrue, is, log as _log, check, deferred, uid as nextEffectId, array, remove, object, TASK, CANCEL, SELF_CANCELLATION, makeIterator, createSetContextWarning, deprecate, updateIncentive } from './utils';\nimport { asap, suspend, flush } from './scheduler';\nimport { asEffect } from './io';\nimport { stdChannel as _stdChannel, eventChannel, isEnd } from './channel';\nimport { buffers } from './buffers';\n\nexport var NOT_ITERATOR_ERROR = 'proc first argument (Saga function result) must be an iterator';\n\nexport var CHANNEL_END = {\n  toString: function toString() {\n    return '@@redux-saga/CHANNEL_END';\n  }\n};\nexport var TASK_CANCEL = {\n  toString: function toString() {\n    return '@@redux-saga/TASK_CANCEL';\n  }\n};\n\nvar matchers = {\n  wildcard: function wildcard() {\n    return kTrue;\n  },\n  default: function _default(pattern) {\n    return (typeof pattern === 'undefined' ? 'undefined' : _typeof(pattern)) === 'symbol' ? function (input) {\n      return input.type === pattern;\n    } : function (input) {\n      return input.type === String(pattern);\n    };\n  },\n  array: function array(patterns) {\n    return function (input) {\n      return patterns.some(function (p) {\n        return matcher(p)(input);\n      });\n    };\n  },\n  predicate: function predicate(_predicate) {\n    return function (input) {\n      return _predicate(input);\n    };\n  }\n};\n\nfunction matcher(pattern) {\n  // prettier-ignore\n  return (pattern === '*' ? matchers.wildcard : is.array(pattern) ? matchers.array : is.stringableFunc(pattern) ? matchers.default : is.func(pattern) ? matchers.predicate : matchers.default)(pattern);\n}\n\n/**\n  Used to track a parent task and its forks\n  In the new fork model, forked tasks are attached by default to their parent\n  We model this using the concept of Parent task && main Task\n  main task is the main flow of the current Generator, the parent tasks is the\n  aggregation of the main tasks + all its forked tasks.\n  Thus the whole model represents an execution tree with multiple branches (vs the\n  linear execution tree in sequential (non parallel) programming)\n\n  A parent tasks has the following semantics\n  - It completes if all its forks either complete or all cancelled\n  - If it's cancelled, all forks are cancelled as well\n  - It aborts if any uncaught error bubbles up from forks\n  - If it completes, the return value is the one returned by the main task\n**/\nfunction forkQueue(name, mainTask, cb) {\n  var tasks = [],\n      result = void 0,\n      completed = false;\n  addTask(mainTask);\n\n  function abort(err) {\n    cancelAll();\n    cb(err, true);\n  }\n\n  function addTask(task) {\n    tasks.push(task);\n    task.cont = function (res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      remove(tasks, task);\n      task.cont = noop;\n      if (isErr) {\n        abort(res);\n      } else {\n        if (task === mainTask) {\n          result = res;\n        }\n        if (!tasks.length) {\n          completed = true;\n          cb(result);\n        }\n      }\n    };\n    // task.cont.cancel = task.cancel\n  }\n\n  function cancelAll() {\n    if (completed) {\n      return;\n    }\n    completed = true;\n    tasks.forEach(function (t) {\n      t.cont = noop;\n      t.cancel();\n    });\n    tasks = [];\n  }\n\n  return {\n    addTask: addTask,\n    cancelAll: cancelAll,\n    abort: abort,\n    getTasks: function getTasks() {\n      return tasks;\n    },\n    taskNames: function taskNames() {\n      return tasks.map(function (t) {\n        return t.name;\n      });\n    }\n  };\n}\n\nfunction createTaskIterator(_ref) {\n  var context = _ref.context,\n      fn = _ref.fn,\n      args = _ref.args;\n\n  if (is.iterator(fn)) {\n    return fn;\n  }\n\n  // catch synchronous failures; see #152 and #441\n  var result = void 0,\n      error = void 0;\n  try {\n    result = fn.apply(context, args);\n  } catch (err) {\n    error = err;\n  }\n\n  // i.e. a generator function returns an iterator\n  if (is.iterator(result)) {\n    return result;\n  }\n\n  // do not bubble up synchronous failures for detached forks\n  // instead create a failed task. See #152 and #441\n  return error ? makeIterator(function () {\n    throw error;\n  }) : makeIterator(function () {\n    var pc = void 0;\n    var eff = { done: false, value: result };\n    var ret = function ret(value) {\n      return { done: true, value: value };\n    };\n    return function (arg) {\n      if (!pc) {\n        pc = true;\n        return eff;\n      } else {\n        return ret(arg);\n      }\n    };\n  }());\n}\n\nvar wrapHelper = function wrapHelper(helper) {\n  return { fn: helper };\n};\n\nexport default function proc(iterator) {\n  var subscribe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n    return noop;\n  };\n  var dispatch = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n  var getState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : noop;\n  var parentContext = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var parentEffectId = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  var name = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'anonymous';\n  var cont = arguments[8];\n\n  check(iterator, is.iterator, NOT_ITERATOR_ERROR);\n\n  var effectsString = '[...effects]';\n  var runParallelEffect = deprecate(runAllEffect, updateIncentive(effectsString, 'all(' + effectsString + ')'));\n\n  var sagaMonitor = options.sagaMonitor,\n      logger = options.logger,\n      onError = options.onError;\n\n  var log = logger || _log;\n  var logError = function logError(err) {\n    var message = err.sagaStack;\n\n    if (!message && err.stack) {\n      message = err.stack.split('\\n')[0].indexOf(err.message) !== -1 ? err.stack : 'Error: ' + err.message + '\\n' + err.stack;\n    }\n\n    log('error', 'uncaught at ' + name, message || err.message || err);\n  };\n  var stdChannel = _stdChannel(subscribe);\n  var taskContext = Object.create(parentContext);\n  /**\n    Tracks the current effect cancellation\n    Each time the generator progresses. calling runEffect will set a new value\n    on it. It allows propagating cancellation to child effects\n  **/\n  next.cancel = noop;\n\n  /**\n    Creates a new task descriptor for this generator, We'll also create a main task\n    to track the main flow (besides other forked tasks)\n  **/\n  var task = newTask(parentEffectId, name, iterator, cont);\n  var mainTask = { name: name, cancel: cancelMain, isRunning: true };\n  var taskQueue = forkQueue(name, mainTask, end);\n\n  /**\n    cancellation of the main task. We'll simply resume the Generator with a Cancel\n  **/\n  function cancelMain() {\n    if (mainTask.isRunning && !mainTask.isCancelled) {\n      mainTask.isCancelled = true;\n      next(TASK_CANCEL);\n    }\n  }\n\n  /**\n    This may be called by a parent generator to trigger/propagate cancellation\n    cancel all pending tasks (including the main task), then end the current task.\n     Cancellation propagates down to the whole execution tree holded by this Parent task\n    It's also propagated to all joiners of this task and their execution tree/joiners\n     Cancellation is noop for terminated/Cancelled tasks tasks\n  **/\n  function cancel() {\n    /**\n      We need to check both Running and Cancelled status\n      Tasks can be Cancelled but still Running\n    **/\n    if (iterator._isRunning && !iterator._isCancelled) {\n      iterator._isCancelled = true;\n      taskQueue.cancelAll();\n      /**\n        Ending with a Never result will propagate the Cancellation to all joiners\n      **/\n      end(TASK_CANCEL);\n    }\n  }\n  /**\n    attaches cancellation logic to this task's continuation\n    this will permit cancellation to propagate down the call chain\n  **/\n  cont && (cont.cancel = cancel);\n\n  // tracks the running status\n  iterator._isRunning = true;\n\n  // kicks up the generator\n  next();\n\n  // then return the task descriptor to the caller\n  return task;\n\n  /**\n    This is the generator driver\n    It's a recursive async/continuation function which calls itself\n    until the generator terminates or throws\n  **/\n  function next(arg, isErr) {\n    // Preventive measure. If we end up here, then there is really something wrong\n    if (!mainTask.isRunning) {\n      throw new Error('Trying to resume an already finished generator');\n    }\n\n    try {\n      var result = void 0;\n      if (isErr) {\n        result = iterator.throw(arg);\n      } else if (arg === TASK_CANCEL) {\n        /**\n          getting TASK_CANCEL automatically cancels the main task\n          We can get this value here\n           - By cancelling the parent task manually\n          - By joining a Cancelled task\n        **/\n        mainTask.isCancelled = true;\n        /**\n          Cancels the current effect; this will propagate the cancellation down to any called tasks\n        **/\n        next.cancel();\n        /**\n          If this Generator has a `return` method then invokes it\n          This will jump to the finally block\n        **/\n        result = is.func(iterator.return) ? iterator.return(TASK_CANCEL) : { done: true, value: TASK_CANCEL };\n      } else if (arg === CHANNEL_END) {\n        // We get CHANNEL_END by taking from a channel that ended using `take` (and not `takem` used to trap End of channels)\n        result = is.func(iterator.return) ? iterator.return() : { done: true };\n      } else {\n        result = iterator.next(arg);\n      }\n\n      if (!result.done) {\n        runEffect(result.value, parentEffectId, '', next);\n      } else {\n        /**\n          This Generator has ended, terminate the main task and notify the fork queue\n        **/\n        mainTask.isMainRunning = false;\n        mainTask.cont && mainTask.cont(result.value);\n      }\n    } catch (error) {\n      if (mainTask.isCancelled) {\n        logError(error);\n      }\n      mainTask.isMainRunning = false;\n      mainTask.cont(error, true);\n    }\n  }\n\n  function end(result, isErr) {\n    iterator._isRunning = false;\n    stdChannel.close();\n    if (!isErr) {\n      iterator._result = result;\n      iterator._deferredEnd && iterator._deferredEnd.resolve(result);\n    } else {\n      if (result instanceof Error) {\n        Object.defineProperty(result, 'sagaStack', {\n          value: 'at ' + name + ' \\n ' + (result.sagaStack || result.stack),\n          configurable: true\n        });\n      }\n      if (!task.cont) {\n        if (result instanceof Error && onError) {\n          onError(result);\n        } else {\n          logError(result);\n        }\n      }\n      iterator._error = result;\n      iterator._isAborted = true;\n      iterator._deferredEnd && iterator._deferredEnd.reject(result);\n    }\n    task.cont && task.cont(result, isErr);\n    task.joiners.forEach(function (j) {\n      return j.cb(result, isErr);\n    });\n    task.joiners = null;\n  }\n\n  function runEffect(effect, parentEffectId) {\n    var label = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var cb = arguments[3];\n\n    var effectId = nextEffectId();\n    sagaMonitor && sagaMonitor.effectTriggered({ effectId: effectId, parentEffectId: parentEffectId, label: label, effect: effect });\n\n    /**\n      completion callback and cancel callback are mutually exclusive\n      We can't cancel an already completed effect\n      And We can't complete an already cancelled effectId\n    **/\n    var effectSettled = void 0;\n\n    // Completion callback passed to the appropriate effect runner\n    function currCb(res, isErr) {\n      if (effectSettled) {\n        return;\n      }\n\n      effectSettled = true;\n      cb.cancel = noop; // defensive measure\n      if (sagaMonitor) {\n        isErr ? sagaMonitor.effectRejected(effectId, res) : sagaMonitor.effectResolved(effectId, res);\n      }\n      cb(res, isErr);\n    }\n    // tracks down the current cancel\n    currCb.cancel = noop;\n\n    // setup cancellation logic on the parent cb\n    cb.cancel = function () {\n      // prevents cancelling an already completed effect\n      if (effectSettled) {\n        return;\n      }\n\n      effectSettled = true;\n      /**\n        propagates cancel downward\n        catch uncaught cancellations errors; since we can no longer call the completion\n        callback, log errors raised during cancellations into the console\n      **/\n      try {\n        currCb.cancel();\n      } catch (err) {\n        logError(err);\n      }\n      currCb.cancel = noop; // defensive measure\n\n      sagaMonitor && sagaMonitor.effectCancelled(effectId);\n    };\n\n    /**\n      each effect runner must attach its own logic of cancellation to the provided callback\n      it allows this generator to propagate cancellation downward.\n       ATTENTION! effect runners must setup the cancel logic by setting cb.cancel = [cancelMethod]\n      And the setup must occur before calling the callback\n       This is a sort of inversion of control: called async functions are responsible\n      for completing the flow by calling the provided continuation; while caller functions\n      are responsible for aborting the current flow by calling the attached cancel function\n       Library users can attach their own cancellation logic to promises by defining a\n      promise[CANCEL] method in their returned promises\n      ATTENTION! calling cancel must have no effect on an already completed or cancelled effect\n    **/\n    var data = void 0;\n    // prettier-ignore\n    return (\n      // Non declarative effect\n      is.promise(effect) ? resolvePromise(effect, currCb) : is.helper(effect) ? runForkEffect(wrapHelper(effect), effectId, currCb) : is.iterator(effect) ? resolveIterator(effect, effectId, name, currCb)\n\n      // declarative effects\n      : is.array(effect) ? runParallelEffect(effect, effectId, currCb) : (data = asEffect.take(effect)) ? runTakeEffect(data, currCb) : (data = asEffect.put(effect)) ? runPutEffect(data, currCb) : (data = asEffect.all(effect)) ? runAllEffect(data, effectId, currCb) : (data = asEffect.race(effect)) ? runRaceEffect(data, effectId, currCb) : (data = asEffect.call(effect)) ? runCallEffect(data, effectId, currCb) : (data = asEffect.cps(effect)) ? runCPSEffect(data, currCb) : (data = asEffect.fork(effect)) ? runForkEffect(data, effectId, currCb) : (data = asEffect.join(effect)) ? runJoinEffect(data, currCb) : (data = asEffect.cancel(effect)) ? runCancelEffect(data, currCb) : (data = asEffect.select(effect)) ? runSelectEffect(data, currCb) : (data = asEffect.actionChannel(effect)) ? runChannelEffect(data, currCb) : (data = asEffect.flush(effect)) ? runFlushEffect(data, currCb) : (data = asEffect.cancelled(effect)) ? runCancelledEffect(data, currCb) : (data = asEffect.getContext(effect)) ? runGetContextEffect(data, currCb) : (data = asEffect.setContext(effect)) ? runSetContextEffect(data, currCb) : /* anything else returned as is */currCb(effect)\n    );\n  }\n\n  function resolvePromise(promise, cb) {\n    var cancelPromise = promise[CANCEL];\n    if (is.func(cancelPromise)) {\n      cb.cancel = cancelPromise;\n    } else if (is.func(promise.abort)) {\n      cb.cancel = function () {\n        return promise.abort();\n      };\n      // TODO: add support for the fetch API, whenever they get around to\n      // adding cancel support\n    }\n    promise.then(cb, function (error) {\n      return cb(error, true);\n    });\n  }\n\n  function resolveIterator(iterator, effectId, name, cb) {\n    proc(iterator, subscribe, dispatch, getState, taskContext, options, effectId, name, cb);\n  }\n\n  function runTakeEffect(_ref2, cb) {\n    var channel = _ref2.channel,\n        pattern = _ref2.pattern,\n        maybe = _ref2.maybe;\n\n    channel = channel || stdChannel;\n    var takeCb = function takeCb(inp) {\n      return inp instanceof Error ? cb(inp, true) : isEnd(inp) && !maybe ? cb(CHANNEL_END) : cb(inp);\n    };\n    try {\n      channel.take(takeCb, matcher(pattern));\n    } catch (err) {\n      return cb(err, true);\n    }\n    cb.cancel = takeCb.cancel;\n  }\n\n  function runPutEffect(_ref3, cb) {\n    var channel = _ref3.channel,\n        action = _ref3.action,\n        resolve = _ref3.resolve;\n\n    /**\n      Schedule the put in case another saga is holding a lock.\n      The put will be executed atomically. ie nested puts will execute after\n      this put has terminated.\n    **/\n    asap(function () {\n      var result = void 0;\n      try {\n        result = (channel ? channel.put : dispatch)(action);\n      } catch (error) {\n        // If we have a channel or `put.resolve` was used then bubble up the error.\n        if (channel || resolve) return cb(error, true);\n        logError(error);\n      }\n\n      if (resolve && is.promise(result)) {\n        resolvePromise(result, cb);\n      } else {\n        return cb(result);\n      }\n    });\n    // Put effects are non cancellables\n  }\n\n  function runCallEffect(_ref4, effectId, cb) {\n    var context = _ref4.context,\n        fn = _ref4.fn,\n        args = _ref4.args;\n\n    var result = void 0;\n    // catch synchronous failures; see #152\n    try {\n      result = fn.apply(context, args);\n    } catch (error) {\n      return cb(error, true);\n    }\n    return is.promise(result) ? resolvePromise(result, cb) : is.iterator(result) ? resolveIterator(result, effectId, fn.name, cb) : cb(result);\n  }\n\n  function runCPSEffect(_ref5, cb) {\n    var context = _ref5.context,\n        fn = _ref5.fn,\n        args = _ref5.args;\n\n    // CPS (ie node style functions) can define their own cancellation logic\n    // by setting cancel field on the cb\n\n    // catch synchronous failures; see #152\n    try {\n      var cpsCb = function cpsCb(err, res) {\n        return is.undef(err) ? cb(res) : cb(err, true);\n      };\n      fn.apply(context, args.concat(cpsCb));\n      if (cpsCb.cancel) {\n        cb.cancel = function () {\n          return cpsCb.cancel();\n        };\n      }\n    } catch (error) {\n      return cb(error, true);\n    }\n  }\n\n  function runForkEffect(_ref6, effectId, cb) {\n    var context = _ref6.context,\n        fn = _ref6.fn,\n        args = _ref6.args,\n        detached = _ref6.detached;\n\n    var taskIterator = createTaskIterator({ context: context, fn: fn, args: args });\n\n    try {\n      suspend();\n      var _task = proc(taskIterator, subscribe, dispatch, getState, taskContext, options, effectId, fn.name, detached ? null : noop);\n\n      if (detached) {\n        cb(_task);\n      } else {\n        if (taskIterator._isRunning) {\n          taskQueue.addTask(_task);\n          cb(_task);\n        } else if (taskIterator._error) {\n          taskQueue.abort(taskIterator._error);\n        } else {\n          cb(_task);\n        }\n      }\n    } finally {\n      flush();\n    }\n    // Fork effects are non cancellables\n  }\n\n  function runJoinEffect(t, cb) {\n    if (t.isRunning()) {\n      var joiner = { task: task, cb: cb };\n      cb.cancel = function () {\n        return remove(t.joiners, joiner);\n      };\n      t.joiners.push(joiner);\n    } else {\n      t.isAborted() ? cb(t.error(), true) : cb(t.result());\n    }\n  }\n\n  function runCancelEffect(taskToCancel, cb) {\n    if (taskToCancel === SELF_CANCELLATION) {\n      taskToCancel = task;\n    }\n    if (taskToCancel.isRunning()) {\n      taskToCancel.cancel();\n    }\n    cb();\n    // cancel effects are non cancellables\n  }\n\n  function runAllEffect(effects, effectId, cb) {\n    var keys = Object.keys(effects);\n\n    if (!keys.length) {\n      return cb(is.array(effects) ? [] : {});\n    }\n\n    var completedCount = 0;\n    var completed = void 0;\n    var results = {};\n    var childCbs = {};\n\n    function checkEffectEnd() {\n      if (completedCount === keys.length) {\n        completed = true;\n        cb(is.array(effects) ? array.from(_extends({}, results, { length: keys.length })) : results);\n      }\n    }\n\n    keys.forEach(function (key) {\n      var chCbAtKey = function chCbAtKey(res, isErr) {\n        if (completed) {\n          return;\n        }\n        if (isErr || isEnd(res) || res === CHANNEL_END || res === TASK_CANCEL) {\n          cb.cancel();\n          cb(res, isErr);\n        } else {\n          results[key] = res;\n          completedCount++;\n          checkEffectEnd();\n        }\n      };\n      chCbAtKey.cancel = noop;\n      childCbs[key] = chCbAtKey;\n    });\n\n    cb.cancel = function () {\n      if (!completed) {\n        completed = true;\n        keys.forEach(function (key) {\n          return childCbs[key].cancel();\n        });\n      }\n    };\n\n    keys.forEach(function (key) {\n      return runEffect(effects[key], effectId, key, childCbs[key]);\n    });\n  }\n\n  function runRaceEffect(effects, effectId, cb) {\n    var completed = void 0;\n    var keys = Object.keys(effects);\n    var childCbs = {};\n\n    keys.forEach(function (key) {\n      var chCbAtKey = function chCbAtKey(res, isErr) {\n        if (completed) {\n          return;\n        }\n\n        if (isErr) {\n          // Race Auto cancellation\n          cb.cancel();\n          cb(res, true);\n        } else if (!isEnd(res) && res !== CHANNEL_END && res !== TASK_CANCEL) {\n          var _response;\n\n          cb.cancel();\n          completed = true;\n          var response = (_response = {}, _response[key] = res, _response);\n          cb(is.array(effects) ? [].slice.call(_extends({}, response, { length: keys.length })) : response);\n        }\n      };\n      chCbAtKey.cancel = noop;\n      childCbs[key] = chCbAtKey;\n    });\n\n    cb.cancel = function () {\n      // prevents unnecessary cancellation\n      if (!completed) {\n        completed = true;\n        keys.forEach(function (key) {\n          return childCbs[key].cancel();\n        });\n      }\n    };\n    keys.forEach(function (key) {\n      if (completed) {\n        return;\n      }\n      runEffect(effects[key], effectId, key, childCbs[key]);\n    });\n  }\n\n  function runSelectEffect(_ref7, cb) {\n    var selector = _ref7.selector,\n        args = _ref7.args;\n\n    try {\n      var state = selector.apply(undefined, [getState()].concat(args));\n      cb(state);\n    } catch (error) {\n      cb(error, true);\n    }\n  }\n\n  function runChannelEffect(_ref8, cb) {\n    var pattern = _ref8.pattern,\n        buffer = _ref8.buffer;\n\n    var match = matcher(pattern);\n    match.pattern = pattern;\n    cb(eventChannel(subscribe, buffer || buffers.fixed(), match));\n  }\n\n  function runCancelledEffect(data, cb) {\n    cb(!!mainTask.isCancelled);\n  }\n\n  function runFlushEffect(channel, cb) {\n    channel.flush(cb);\n  }\n\n  function runGetContextEffect(prop, cb) {\n    cb(taskContext[prop]);\n  }\n\n  function runSetContextEffect(props, cb) {\n    object.assign(taskContext, props);\n    cb();\n  }\n\n  function newTask(id, name, iterator, cont) {\n    var _done, _ref9, _mutatorMap;\n\n    iterator._deferredEnd = null;\n    return _ref9 = {}, _ref9[TASK] = true, _ref9.id = id, _ref9.name = name, _done = 'done', _mutatorMap = {}, _mutatorMap[_done] = _mutatorMap[_done] || {}, _mutatorMap[_done].get = function () {\n      if (iterator._deferredEnd) {\n        return iterator._deferredEnd.promise;\n      } else {\n        var def = deferred();\n        iterator._deferredEnd = def;\n        if (!iterator._isRunning) {\n          iterator._error ? def.reject(iterator._error) : def.resolve(iterator._result);\n        }\n        return def.promise;\n      }\n    }, _ref9.cont = cont, _ref9.joiners = [], _ref9.cancel = cancel, _ref9.isRunning = function isRunning() {\n      return iterator._isRunning;\n    }, _ref9.isCancelled = function isCancelled() {\n      return iterator._isCancelled;\n    }, _ref9.isAborted = function isAborted() {\n      return iterator._isAborted;\n    }, _ref9.result = function result() {\n      return iterator._result;\n    }, _ref9.error = function error() {\n      return iterator._error;\n    }, _ref9.setContext = function setContext(props) {\n      check(props, is.object, createSetContextWarning('task', props));\n      object.assign(taskContext, props);\n    }, _defineEnumerableProperties(_ref9, _mutatorMap), _ref9;\n  }\n}","import { is, check, uid as nextSagaId, wrapSagaDispatch, noop, log } from './utils';\nimport proc from './proc';\n\nvar RUN_SAGA_SIGNATURE = 'runSaga(storeInterface, saga, ...args)';\nvar NON_GENERATOR_ERR = RUN_SAGA_SIGNATURE + ': saga argument must be a Generator function!';\n\nexport function runSaga(storeInterface, saga) {\n  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var iterator = void 0;\n\n  if (is.iterator(storeInterface)) {\n    if (process.env.NODE_ENV === 'development') {\n      log('warn', 'runSaga(iterator, storeInterface) has been deprecated in favor of ' + RUN_SAGA_SIGNATURE);\n    }\n    iterator = storeInterface;\n    storeInterface = saga;\n  } else {\n    check(saga, is.func, NON_GENERATOR_ERR);\n    iterator = saga.apply(undefined, args);\n    check(iterator, is.iterator, NON_GENERATOR_ERR);\n  }\n\n  var _storeInterface = storeInterface,\n      subscribe = _storeInterface.subscribe,\n      dispatch = _storeInterface.dispatch,\n      getState = _storeInterface.getState,\n      context = _storeInterface.context,\n      sagaMonitor = _storeInterface.sagaMonitor,\n      logger = _storeInterface.logger,\n      onError = _storeInterface.onError;\n\n\n  var effectId = nextSagaId();\n\n  if (sagaMonitor) {\n    // monitors are expected to have a certain interface, let's fill-in any missing ones\n    sagaMonitor.effectTriggered = sagaMonitor.effectTriggered || noop;\n    sagaMonitor.effectResolved = sagaMonitor.effectResolved || noop;\n    sagaMonitor.effectRejected = sagaMonitor.effectRejected || noop;\n    sagaMonitor.effectCancelled = sagaMonitor.effectCancelled || noop;\n    sagaMonitor.actionDispatched = sagaMonitor.actionDispatched || noop;\n\n    sagaMonitor.effectTriggered({ effectId: effectId, root: true, parentEffectId: 0, effect: { root: true, saga: saga, args: args } });\n  }\n\n  var task = proc(iterator, subscribe, wrapSagaDispatch(dispatch), getState, context, { sagaMonitor: sagaMonitor, logger: logger, onError: onError }, effectId, saga.name);\n\n  if (sagaMonitor) {\n    sagaMonitor.effectResolved(effectId, task);\n  }\n\n  return task;\n}","import middleware from './internal/middleware';\nexport default middleware;\n\nexport { runSaga } from './internal/runSaga';\nexport { END, eventChannel, channel } from './internal/channel';\nexport { buffers } from './internal/buffers';\nexport { takeEvery, takeLatest, throttle } from './internal/sagaHelpers';\nexport { delay, CANCEL } from './internal/utils';\nexport { detach } from './internal/io';\n\nimport * as effects from './effects';\nimport * as utils from './utils';\n\nexport { effects, utils };","function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport { is, check, object, createSetContextWarning } from './utils';\nimport { emitter } from './channel';\nimport { ident } from './utils';\nimport { runSaga } from './runSaga';\n\nexport default function sagaMiddlewareFactory() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _ref$context = _ref.context,\n      context = _ref$context === undefined ? {} : _ref$context,\n      options = _objectWithoutProperties(_ref, ['context']);\n\n  var sagaMonitor = options.sagaMonitor,\n      logger = options.logger,\n      onError = options.onError;\n\n\n  if (is.func(options)) {\n    if (process.env.NODE_ENV === 'production') {\n      throw new Error('Saga middleware no longer accept Generator functions. Use sagaMiddleware.run instead');\n    } else {\n      throw new Error('You passed a function to the Saga middleware. You are likely trying to start a        Saga by directly passing it to the middleware. This is no longer possible starting from 0.10.0.        To run a Saga, you must do it dynamically AFTER mounting the middleware into the store.\\n        Example:\\n          import createSagaMiddleware from \\'redux-saga\\'\\n          ... other imports\\n\\n          const sagaMiddleware = createSagaMiddleware()\\n          const store = createStore(reducer, applyMiddleware(sagaMiddleware))\\n          sagaMiddleware.run(saga, ...args)\\n      ');\n    }\n  }\n\n  if (logger && !is.func(logger)) {\n    throw new Error('`options.logger` passed to the Saga middleware is not a function!');\n  }\n\n  if (process.env.NODE_ENV === 'development' && options.onerror) {\n    throw new Error('`options.onerror` was removed. Use `options.onError` instead.');\n  }\n\n  if (onError && !is.func(onError)) {\n    throw new Error('`options.onError` passed to the Saga middleware is not a function!');\n  }\n\n  if (options.emitter && !is.func(options.emitter)) {\n    throw new Error('`options.emitter` passed to the Saga middleware is not a function!');\n  }\n\n  function sagaMiddleware(_ref2) {\n    var getState = _ref2.getState,\n        dispatch = _ref2.dispatch;\n\n    var sagaEmitter = emitter();\n    sagaEmitter.emit = (options.emitter || ident)(sagaEmitter.emit);\n\n    sagaMiddleware.run = runSaga.bind(null, {\n      context: context,\n      subscribe: sagaEmitter.subscribe,\n      dispatch: dispatch,\n      getState: getState,\n      sagaMonitor: sagaMonitor,\n      logger: logger,\n      onError: onError\n    });\n\n    return function (next) {\n      return function (action) {\n        if (sagaMonitor && sagaMonitor.actionDispatched) {\n          sagaMonitor.actionDispatched(action);\n        }\n        var result = next(action); // hit reducers\n        sagaEmitter.emit(action);\n        return result;\n      };\n    };\n  }\n\n  sagaMiddleware.run = function () {\n    throw new Error('Before running a Saga, you must mount the Saga middleware on the Store using applyMiddleware');\n  };\n\n  sagaMiddleware.setContext = function (props) {\n    check(props, is.object, createSetContextWarning('sagaMiddleware', props));\n    object.assign(context, props);\n  };\n\n  return sagaMiddleware;\n}","import { fork } from './io';\nimport { takeEveryHelper, takeLatestHelper, throttleHelper } from './sagaHelpers';\n\nexport function takeEvery(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  return fork.apply(undefined, [takeEveryHelper, patternOrChannel, worker].concat(args));\n}\n\nexport function takeLatest(patternOrChannel, worker) {\n  for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    args[_key2 - 2] = arguments[_key2];\n  }\n\n  return fork.apply(undefined, [takeLatestHelper, patternOrChannel, worker].concat(args));\n}\n\nexport function throttle(ms, pattern, worker) {\n  for (var _len3 = arguments.length, args = Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n    args[_key3 - 3] = arguments[_key3];\n  }\n\n  return fork.apply(undefined, [throttleHelper, ms, pattern, worker].concat(args));\n}","export { take, takem, put, all, race, call, apply, cps, fork, spawn, join, cancel, select, actionChannel, cancelled, flush, getContext, setContext } from './internal/io';\n\nexport { takeEvery, takeLatest, throttle } from './internal/io-helpers';","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexport var sym = function sym(id) {\n  return '@@redux-saga/' + id;\n};\n\nexport var TASK = /*#__PURE__*/sym('TASK');\nexport var HELPER = /*#__PURE__*/sym('HELPER');\nexport var MATCH = /*#__PURE__*/sym('MATCH');\nexport var CANCEL = /*#__PURE__*/sym('CANCEL_PROMISE');\nexport var SAGA_ACTION = /*#__PURE__*/sym('SAGA_ACTION');\nexport var SELF_CANCELLATION = /*#__PURE__*/sym('SELF_CANCELLATION');\nexport var konst = function konst(v) {\n  return function () {\n    return v;\n  };\n};\nexport var kTrue = /*#__PURE__*/konst(true);\nexport var kFalse = /*#__PURE__*/konst(false);\nexport var noop = function noop() {};\nexport var ident = function ident(v) {\n  return v;\n};\n\nexport function check(value, predicate, error) {\n  if (!predicate(value)) {\n    log('error', 'uncaught at check', error);\n    throw new Error(error);\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function hasOwn(object, property) {\n  return is.notUndef(object) && hasOwnProperty.call(object, property);\n}\n\nexport var is = {\n  undef: function undef(v) {\n    return v === null || v === undefined;\n  },\n  notUndef: function notUndef(v) {\n    return v !== null && v !== undefined;\n  },\n  func: function func(f) {\n    return typeof f === 'function';\n  },\n  number: function number(n) {\n    return typeof n === 'number';\n  },\n  string: function string(s) {\n    return typeof s === 'string';\n  },\n  array: Array.isArray,\n  object: function object(obj) {\n    return obj && !is.array(obj) && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n  },\n  promise: function promise(p) {\n    return p && is.func(p.then);\n  },\n  iterator: function iterator(it) {\n    return it && is.func(it.next) && is.func(it.throw);\n  },\n  iterable: function iterable(it) {\n    return it && is.func(Symbol) ? is.func(it[Symbol.iterator]) : is.array(it);\n  },\n  task: function task(t) {\n    return t && t[TASK];\n  },\n  observable: function observable(ob) {\n    return ob && is.func(ob.subscribe);\n  },\n  buffer: function buffer(buf) {\n    return buf && is.func(buf.isEmpty) && is.func(buf.take) && is.func(buf.put);\n  },\n  pattern: function pattern(pat) {\n    return pat && (is.string(pat) || (typeof pat === 'undefined' ? 'undefined' : _typeof(pat)) === 'symbol' || is.func(pat) || is.array(pat));\n  },\n  channel: function channel(ch) {\n    return ch && is.func(ch.take) && is.func(ch.close);\n  },\n  helper: function helper(it) {\n    return it && it[HELPER];\n  },\n  stringableFunc: function stringableFunc(f) {\n    return is.func(f) && hasOwn(f, 'toString');\n  }\n};\n\nexport var object = {\n  assign: function assign(target, source) {\n    for (var i in source) {\n      if (hasOwn(source, i)) {\n        target[i] = source[i];\n      }\n    }\n  }\n};\n\nexport function remove(array, item) {\n  var index = array.indexOf(item);\n  if (index >= 0) {\n    array.splice(index, 1);\n  }\n}\n\nexport var array = {\n  from: function from(obj) {\n    var arr = Array(obj.length);\n    for (var i in obj) {\n      if (hasOwn(obj, i)) {\n        arr[i] = obj[i];\n      }\n    }\n    return arr;\n  }\n};\n\nexport function deferred() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var def = _extends({}, props);\n  var promise = new Promise(function (resolve, reject) {\n    def.resolve = resolve;\n    def.reject = reject;\n  });\n  def.promise = promise;\n  return def;\n}\n\nexport function arrayOfDeffered(length) {\n  var arr = [];\n  for (var i = 0; i < length; i++) {\n    arr.push(deferred());\n  }\n  return arr;\n}\n\nexport function delay(ms) {\n  var val = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  var timeoutId = void 0;\n  var promise = new Promise(function (resolve) {\n    timeoutId = setTimeout(function () {\n      return resolve(val);\n    }, ms);\n  });\n\n  promise[CANCEL] = function () {\n    return clearTimeout(timeoutId);\n  };\n\n  return promise;\n}\n\nexport function createMockTask() {\n  var _ref;\n\n  var running = true;\n  var _result = void 0,\n      _error = void 0;\n\n  return _ref = {}, _ref[TASK] = true, _ref.isRunning = function isRunning() {\n    return running;\n  }, _ref.result = function result() {\n    return _result;\n  }, _ref.error = function error() {\n    return _error;\n  }, _ref.setRunning = function setRunning(b) {\n    return running = b;\n  }, _ref.setResult = function setResult(r) {\n    return _result = r;\n  }, _ref.setError = function setError(e) {\n    return _error = e;\n  }, _ref;\n}\n\nexport function autoInc() {\n  var seed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n  return function () {\n    return ++seed;\n  };\n}\n\nexport var uid = /*#__PURE__*/autoInc();\n\nvar kThrow = function kThrow(err) {\n  throw err;\n};\nvar kReturn = function kReturn(value) {\n  return { value: value, done: true };\n};\nexport function makeIterator(next) {\n  var thro = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : kThrow;\n  var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var isHelper = arguments[3];\n\n  var iterator = { name: name, next: next, throw: thro, return: kReturn };\n\n  if (isHelper) {\n    iterator[HELPER] = true;\n  }\n  if (typeof Symbol !== 'undefined') {\n    iterator[Symbol.iterator] = function () {\n      return iterator;\n    };\n  }\n  return iterator;\n}\n\n/**\n  Print error in a useful way whether in a browser environment\n  (with expandable error stack traces), or in a node.js environment\n  (text-only log output)\n **/\nexport function log(level, message) {\n  var error = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  /*eslint-disable no-console*/\n  if (typeof window === 'undefined') {\n    console.log('redux-saga ' + level + ': ' + message + '\\n' + (error && error.stack || error));\n  } else {\n    console[level](message, error);\n  }\n}\n\nexport function deprecate(fn, deprecationWarning) {\n  return function () {\n    if (process.env.NODE_ENV === 'development') log('warn', deprecationWarning);\n    return fn.apply(undefined, arguments);\n  };\n}\n\nexport var updateIncentive = function updateIncentive(deprecated, preferred) {\n  return deprecated + ' has been deprecated in favor of ' + preferred + ', please update your code';\n};\n\nexport var internalErr = function internalErr(err) {\n  return new Error('\\n  redux-saga: Error checking hooks detected an inconsistent state. This is likely a bug\\n  in redux-saga code and not yours. Thanks for reporting this in the project\\'s github repo.\\n  Error: ' + err + '\\n');\n};\n\nexport var createSetContextWarning = function createSetContextWarning(ctx, props) {\n  return (ctx ? ctx + '.' : '') + 'setContext(props): argument ' + props + ' is not a plain object';\n};\n\nexport var wrapSagaDispatch = function wrapSagaDispatch(dispatch) {\n  return function (action) {\n    return dispatch(Object.defineProperty(action, SAGA_ACTION, { value: true }));\n  };\n};\n\nexport var cloneableGenerator = function cloneableGenerator(generatorFunc) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var history = [];\n    var gen = generatorFunc.apply(undefined, args);\n    return {\n      next: function next(arg) {\n        history.push(arg);\n        return gen.next(arg);\n      },\n      clone: function clone() {\n        var clonedGen = cloneableGenerator(generatorFunc).apply(undefined, args);\n        history.forEach(function (arg) {\n          return clonedGen.next(arg);\n        });\n        return clonedGen;\n      },\n      return: function _return(value) {\n        return gen.return(value);\n      },\n      throw: function _throw(exception) {\n        return gen.throw(exception);\n      }\n    };\n  };\n};","import { kTrue, noop } from './utils';\n\nexport var BUFFER_OVERFLOW = \"Channel's Buffer overflow!\";\n\nvar ON_OVERFLOW_THROW = 1;\nvar ON_OVERFLOW_DROP = 2;\nvar ON_OVERFLOW_SLIDE = 3;\nvar ON_OVERFLOW_EXPAND = 4;\n\nvar zeroBuffer = { isEmpty: kTrue, put: noop, take: noop };\n\nfunction ringBuffer() {\n  var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n  var overflowAction = arguments[1];\n\n  var arr = new Array(limit);\n  var length = 0;\n  var pushIndex = 0;\n  var popIndex = 0;\n\n  var push = function push(it) {\n    arr[pushIndex] = it;\n    pushIndex = (pushIndex + 1) % limit;\n    length++;\n  };\n\n  var take = function take() {\n    if (length != 0) {\n      var it = arr[popIndex];\n      arr[popIndex] = null;\n      length--;\n      popIndex = (popIndex + 1) % limit;\n      return it;\n    }\n  };\n\n  var flush = function flush() {\n    var items = [];\n    while (length) {\n      items.push(take());\n    }\n    return items;\n  };\n\n  return {\n    isEmpty: function isEmpty() {\n      return length == 0;\n    },\n    put: function put(it) {\n      if (length < limit) {\n        push(it);\n      } else {\n        var doubledLimit = void 0;\n        switch (overflowAction) {\n          case ON_OVERFLOW_THROW:\n            throw new Error(BUFFER_OVERFLOW);\n          case ON_OVERFLOW_SLIDE:\n            arr[pushIndex] = it;\n            pushIndex = (pushIndex + 1) % limit;\n            popIndex = pushIndex;\n            break;\n          case ON_OVERFLOW_EXPAND:\n            doubledLimit = 2 * limit;\n\n            arr = flush();\n\n            length = arr.length;\n            pushIndex = arr.length;\n            popIndex = 0;\n\n            arr.length = doubledLimit;\n            limit = doubledLimit;\n\n            push(it);\n            break;\n          default:\n          // DROP\n        }\n      }\n    },\n    take: take,\n    flush: flush\n  };\n}\n\nexport var buffers = {\n  none: function none() {\n    return zeroBuffer;\n  },\n  fixed: function fixed(limit) {\n    return ringBuffer(limit, ON_OVERFLOW_THROW);\n  },\n  dropping: function dropping(limit) {\n    return ringBuffer(limit, ON_OVERFLOW_DROP);\n  },\n  sliding: function sliding(limit) {\n    return ringBuffer(limit, ON_OVERFLOW_SLIDE);\n  },\n  expanding: function expanding(initialSize) {\n    return ringBuffer(initialSize, ON_OVERFLOW_EXPAND);\n  }\n};","import { sym, is, ident, check, deprecate, updateIncentive, createSetContextWarning, SELF_CANCELLATION } from './utils';\n\nvar IO = /*#__PURE__*/sym('IO');\nvar TAKE = 'TAKE';\nvar PUT = 'PUT';\nvar ALL = 'ALL';\nvar RACE = 'RACE';\nvar CALL = 'CALL';\nvar CPS = 'CPS';\nvar FORK = 'FORK';\nvar JOIN = 'JOIN';\nvar CANCEL = 'CANCEL';\nvar SELECT = 'SELECT';\nvar ACTION_CHANNEL = 'ACTION_CHANNEL';\nvar CANCELLED = 'CANCELLED';\nvar FLUSH = 'FLUSH';\nvar GET_CONTEXT = 'GET_CONTEXT';\nvar SET_CONTEXT = 'SET_CONTEXT';\n\nvar TEST_HINT = '\\n(HINT: if you are getting this errors in tests, consider using createMockTask from redux-saga/utils)';\n\nvar effect = function effect(type, payload) {\n  var _ref;\n\n  return _ref = {}, _ref[IO] = true, _ref[type] = payload, _ref;\n};\n\nexport var detach = function detach(eff) {\n  check(asEffect.fork(eff), is.object, 'detach(eff): argument must be a fork effect');\n  eff[FORK].detached = true;\n  return eff;\n};\n\nexport function take() {\n  var patternOrChannel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '*';\n\n  if (arguments.length) {\n    check(arguments[0], is.notUndef, 'take(patternOrChannel): patternOrChannel is undefined');\n  }\n  if (is.pattern(patternOrChannel)) {\n    return effect(TAKE, { pattern: patternOrChannel });\n  }\n  if (is.channel(patternOrChannel)) {\n    return effect(TAKE, { channel: patternOrChannel });\n  }\n  throw new Error('take(patternOrChannel): argument ' + String(patternOrChannel) + ' is not valid channel or a valid pattern');\n}\n\ntake.maybe = function () {\n  var eff = take.apply(undefined, arguments);\n  eff[TAKE].maybe = true;\n  return eff;\n};\n\nexport var takem = /*#__PURE__*/deprecate(take.maybe, /*#__PURE__*/updateIncentive('takem', 'take.maybe'));\n\nexport function put(channel, action) {\n  if (arguments.length > 1) {\n    check(channel, is.notUndef, 'put(channel, action): argument channel is undefined');\n    check(channel, is.channel, 'put(channel, action): argument ' + channel + ' is not a valid channel');\n    check(action, is.notUndef, 'put(channel, action): argument action is undefined');\n  } else {\n    check(channel, is.notUndef, 'put(action): argument action is undefined');\n    action = channel;\n    channel = null;\n  }\n  return effect(PUT, { channel: channel, action: action });\n}\n\nput.resolve = function () {\n  var eff = put.apply(undefined, arguments);\n  eff[PUT].resolve = true;\n  return eff;\n};\n\nput.sync = /*#__PURE__*/deprecate(put.resolve, /*#__PURE__*/updateIncentive('put.sync', 'put.resolve'));\n\nexport function all(effects) {\n  return effect(ALL, effects);\n}\n\nexport function race(effects) {\n  return effect(RACE, effects);\n}\n\nfunction getFnCallDesc(meth, fn, args) {\n  check(fn, is.notUndef, meth + ': argument fn is undefined');\n\n  var context = null;\n  if (is.array(fn)) {\n    var _fn = fn;\n    context = _fn[0];\n    fn = _fn[1];\n  } else if (fn.fn) {\n    var _fn2 = fn;\n    context = _fn2.context;\n    fn = _fn2.fn;\n  }\n  if (context && is.string(fn) && is.func(context[fn])) {\n    fn = context[fn];\n  }\n  check(fn, is.func, meth + ': argument ' + fn + ' is not a function');\n\n  return { context: context, fn: fn, args: args };\n}\n\nexport function call(fn) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return effect(CALL, getFnCallDesc('call', fn, args));\n}\n\nexport function apply(context, fn) {\n  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  return effect(CALL, getFnCallDesc('apply', { context: context, fn: fn }, args));\n}\n\nexport function cps(fn) {\n  for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  return effect(CPS, getFnCallDesc('cps', fn, args));\n}\n\nexport function fork(fn) {\n  for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return effect(FORK, getFnCallDesc('fork', fn, args));\n}\n\nexport function spawn(fn) {\n  for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  return detach(fork.apply(undefined, [fn].concat(args)));\n}\n\nexport function join() {\n  for (var _len5 = arguments.length, tasks = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    tasks[_key5] = arguments[_key5];\n  }\n\n  if (tasks.length > 1) {\n    return all(tasks.map(function (t) {\n      return join(t);\n    }));\n  }\n  var task = tasks[0];\n  check(task, is.notUndef, 'join(task): argument task is undefined');\n  check(task, is.task, 'join(task): argument ' + task + ' is not a valid Task object ' + TEST_HINT);\n  return effect(JOIN, task);\n}\n\nexport function cancel() {\n  for (var _len6 = arguments.length, tasks = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    tasks[_key6] = arguments[_key6];\n  }\n\n  if (tasks.length > 1) {\n    return all(tasks.map(function (t) {\n      return cancel(t);\n    }));\n  }\n  var task = tasks[0];\n  if (tasks.length === 1) {\n    check(task, is.notUndef, 'cancel(task): argument task is undefined');\n    check(task, is.task, 'cancel(task): argument ' + task + ' is not a valid Task object ' + TEST_HINT);\n  }\n  return effect(CANCEL, task || SELF_CANCELLATION);\n}\n\nexport function select(selector) {\n  for (var _len7 = arguments.length, args = Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n    args[_key7 - 1] = arguments[_key7];\n  }\n\n  if (arguments.length === 0) {\n    selector = ident;\n  } else {\n    check(selector, is.notUndef, 'select(selector,[...]): argument selector is undefined');\n    check(selector, is.func, 'select(selector,[...]): argument ' + selector + ' is not a function');\n  }\n  return effect(SELECT, { selector: selector, args: args });\n}\n\n/**\n  channel(pattern, [buffer])    => creates an event channel for store actions\n**/\nexport function actionChannel(pattern, buffer) {\n  check(pattern, is.notUndef, 'actionChannel(pattern,...): argument pattern is undefined');\n  if (arguments.length > 1) {\n    check(buffer, is.notUndef, 'actionChannel(pattern, buffer): argument buffer is undefined');\n    check(buffer, is.buffer, 'actionChannel(pattern, buffer): argument ' + buffer + ' is not a valid buffer');\n  }\n  return effect(ACTION_CHANNEL, { pattern: pattern, buffer: buffer });\n}\n\nexport function cancelled() {\n  return effect(CANCELLED, {});\n}\n\nexport function flush(channel) {\n  check(channel, is.channel, 'flush(channel): argument ' + channel + ' is not valid channel');\n  return effect(FLUSH, channel);\n}\n\nexport function getContext(prop) {\n  check(prop, is.string, 'getContext(prop): argument ' + prop + ' is not a string');\n  return effect(GET_CONTEXT, prop);\n}\n\nexport function setContext(props) {\n  check(props, is.object, createSetContextWarning(null, props));\n  return effect(SET_CONTEXT, props);\n}\n\nvar createAsEffectType = function createAsEffectType(type) {\n  return function (effect) {\n    return effect && effect[IO] && effect[type];\n  };\n};\n\nexport var asEffect = {\n  take: /*#__PURE__*/createAsEffectType(TAKE),\n  put: /*#__PURE__*/createAsEffectType(PUT),\n  all: /*#__PURE__*/createAsEffectType(ALL),\n  race: /*#__PURE__*/createAsEffectType(RACE),\n  call: /*#__PURE__*/createAsEffectType(CALL),\n  cps: /*#__PURE__*/createAsEffectType(CPS),\n  fork: /*#__PURE__*/createAsEffectType(FORK),\n  join: /*#__PURE__*/createAsEffectType(JOIN),\n  cancel: /*#__PURE__*/createAsEffectType(CANCEL),\n  select: /*#__PURE__*/createAsEffectType(SELECT),\n  actionChannel: /*#__PURE__*/createAsEffectType(ACTION_CHANNEL),\n  cancelled: /*#__PURE__*/createAsEffectType(CANCELLED),\n  flush: /*#__PURE__*/createAsEffectType(FLUSH),\n  getContext: /*#__PURE__*/createAsEffectType(GET_CONTEXT),\n  setContext: /*#__PURE__*/createAsEffectType(SET_CONTEXT)\n};","var queue = [];\n/**\n  Variable to hold a counting semaphore\n  - Incrementing adds a lock and puts the scheduler in a `suspended` state (if it's not\n    already suspended)\n  - Decrementing releases a lock. Zero locks puts the scheduler in a `released` state. This\n    triggers flushing the queued tasks.\n**/\nvar semaphore = 0;\n\n/**\n  Executes a task 'atomically'. Tasks scheduled during this execution will be queued\n  and flushed after this task has finished (assuming the scheduler endup in a released\n  state).\n**/\nfunction exec(task) {\n  try {\n    suspend();\n    task();\n  } finally {\n    release();\n  }\n}\n\n/**\n  Executes or queues a task depending on the state of the scheduler (`suspended` or `released`)\n**/\nexport function asap(task) {\n  queue.push(task);\n\n  if (!semaphore) {\n    suspend();\n    flush();\n  }\n}\n\n/**\n  Puts the scheduler in a `suspended` state. Scheduled tasks will be queued until the\n  scheduler is released.\n**/\nexport function suspend() {\n  semaphore++;\n}\n\n/**\n  Puts the scheduler in a `released` state.\n**/\nfunction release() {\n  semaphore--;\n}\n\n/**\n  Releases the current lock. Executes all queued tasks if the scheduler is in the released state.\n**/\nexport function flush() {\n  release();\n\n  var task = void 0;\n  while (!semaphore && (task = queue.shift()) !== undefined) {\n    exec(task);\n  }\n}"],"sourceRoot":""}