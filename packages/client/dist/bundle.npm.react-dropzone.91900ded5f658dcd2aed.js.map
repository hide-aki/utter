{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/react-dropzone/node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:////var/www/html/utter/node_modules/react-dropzone/node_modules/prop-types/index.js","webpack:////var/www/html/utter/node_modules/react-dropzone/dist/es/utils/index.js","webpack:////var/www/html/utter/node_modules/react-dropzone/dist/es/index.js","webpack:////var/www/html/utter/node_modules/react-dropzone/node_modules/prop-types/factoryWithThrowingShims.js"],"names":["module","exports","__webpack_require__","supportMultiple","document","createElement","fileAccepted","file","accept","type","dist_default","isPropagationStopped","event","cancelBubble","isEvtWithFiles","dataTransfer","Array","prototype","some","call","types","target","files","onDocumentDragOver","preventDefault","composeEventHandlers","_len","arguments","length","fns","_key","_len2","args","_key2","fn","apply","concat","_toConsumableArray","arr","isArray","i","arr2","_arrayWithoutHoles","iter","Symbol","iterator","Object","toString","from","_iterableToArray","TypeError","_nonIterableSpread","_slicedToArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","_iterableToArrayLimit","_nonIterableRest","_objectSpread","source","ownKeys","keys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","defineProperty","configurable","writable","es_typeof","constructor","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","Dropzone","react","_ref","ref","children","_useDropzone","_ref2","_ref2$disabled","disabled","_ref2$getFilesFromEve","getFilesFromEvent","es5","_ref2$maxSize","maxSize","Infinity","_ref2$minSize","minSize","_ref2$multiple","multiple","onDragEnter","onDragLeave","onDragOver","onDrop","onDropAccepted","onDropRejected","onFileDialogCancel","_ref2$preventDropOnDo","preventDropOnDocument","rootRef","inputRef","_useReducer2","reducer","initialState","state","dispatch","isFocused","isFileDialogActive","draggedFiles","openFileDialog","current","click","onWindowFocus","setTimeout","window","addEventListener","removeEventListener","onKeyDownCb","isEqualNode","keyCode","onFocusCb","onBlurCb","onClickCb","userAgent","navigator","isIe","isEdge","isIeOrEdge","_useState2","dragTargets","setDragTargets","onDocumentDrop","contains","onDragEnterCb","persist","Promise","resolve","then","onDragOverCb","dropEffect","_unused","onDragLeaveCb","targets","onDropCb","acceptedFiles","rejectedFiles","size","fileMatchSize","splice","composeHandler","getRootProps","_objectSpread2","_ref3","_ref3$refKey","refKey","onKeyDown","onFocus","onBlur","onClick","rest","onInputElementClick","stopPropagation","getInputProps","_ref4","_ref4$refKey","onChange","inputProps","style","display","autoComplete","tabIndex","fileCount","isMultipleAllowed","isDragAccept","every","allFilesAccepted","isDragReject","open","useDropzone","props","react_default","a","displayName","propTypes","prop_types_default","func","oneOfType","string","arrayOf","bool","number","__webpack_exports__","isDragActive","action","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","Error","name","getShim","isRequired","ReactPropTypes","array","object","symbol","any","element","elementType","instanceOf","node","objectOf","oneOf","shape","exact","checkPropTypes","PropTypes"],"mappings":"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","file":"bundle.npm.react-dropzone.91900ded5f658dcd2aed.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport accepts from 'attr-accept';\nexport var supportMultiple = typeof document !== 'undefined' && 'multiple' in document.createElement('input'); // Firefox versions prior to 53 return a bogus MIME type for every file drag, so dragovers with\n// that MIME type will always be accepted\n\nexport function fileAccepted(file, accept) {\n  return file.type === 'application/x-moz-file' || accepts(file, accept);\n}\nexport function fileMatchSize(file, maxSize, minSize) {\n  return file.size <= maxSize && file.size >= minSize;\n}\nexport function allFilesAccepted(files, accept) {\n  return files.every(function (file) {\n    return fileAccepted(file, accept);\n  });\n} // React's synthetic events has event.isPropagationStopped,\n// but to remain compatibility with other libs (Preact) fall back\n// to check event.cancelBubble\n\nexport function isPropagationStopped(event) {\n  if (typeof event.isPropagationStopped === 'function') {\n    return event.isPropagationStopped();\n  } else if (typeof event.cancelBubble !== 'undefined') {\n    return event.cancelBubble;\n  }\n\n  return false;\n}\nexport function isEvtWithFiles(event) {\n  if (!event.dataTransfer) {\n    return !!event.target && !!event.target.files;\n  } // https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/types\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#file\n\n\n  return Array.prototype.some.call(event.dataTransfer.types, function (type) {\n    return type === 'Files' || type === 'application/x-moz-file';\n  });\n}\nexport function isKindFile(item) {\n  return _typeof(item) === 'object' && item !== null && item.kind === 'file';\n} // allow the entire document to be a drag target\n\nexport function onDocumentDragOver(event) {\n  event.preventDefault();\n}\n\nfunction isIe(userAgent) {\n  return userAgent.indexOf('MSIE') !== -1 || userAgent.indexOf('Trident/') !== -1;\n}\n\nfunction isEdge(userAgent) {\n  return userAgent.indexOf('Edge/') !== -1;\n}\n\nexport function isIeOrEdge() {\n  var userAgent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.navigator.userAgent;\n  return isIe(userAgent) || isEdge(userAgent);\n}\n/**\n * This is intended to be used to compose event handlers\n * They are executed in order until one of them calls `event.isPropagationStopped()`.\n * Note that the check is done on the first invoke too,\n * meaning that if propagation was stopped before invoking the fns,\n * no handlers will be executed.\n *\n * @param {Function} fns the event hanlder functions\n * @return {Function} the event handler to add to an element\n */\n\nexport function composeEventHandlers() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function (event) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return fns.some(function (fn) {\n      if (!isPropagationStopped(event) && fn) {\n        fn.apply(void 0, [event].concat(args));\n      }\n\n      return isPropagationStopped(event);\n    });\n  };\n}","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint prefer-template: 0 */\nimport React, { forwardRef, Fragment, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fromEvent } from 'file-selector';\nimport { allFilesAccepted, composeEventHandlers, fileAccepted, fileMatchSize, isEvtWithFiles, isIeOrEdge, isPropagationStopped, onDocumentDragOver, supportMultiple } from './utils/index';\n/**\n * Convenience wrapper component for the `useDropzone` hook\n *\n * ```jsx\n * <Dropzone>\n *   {({getRootProps, getInputProps}) => (\n *     <div {...getRootProps()}>\n *       <input {...getInputProps()} />\n *       <p>Drag 'n' drop some files here, or click to select files</p>\n *     </div>\n *   )}\n * </Dropzone>\n * ```\n */\n\nvar Dropzone = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      params = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useDropzone = useDropzone(params),\n      open = _useDropzone.open,\n      props = _objectWithoutProperties(_useDropzone, [\"open\"]);\n\n  useEffect(function () {\n    if (typeof ref === 'function') {\n      ref({\n        open: open\n      });\n    } else if (_typeof(ref) === 'object' && ref !== null) {\n      ref.current = {\n        open: open\n      };\n    }\n\n    return function () {\n      if (typeof ref === 'function') {\n        ref(null);\n      } else if (_typeof(ref) === 'object' && ref !== null) {\n        ref.current = null;\n      }\n    };\n  }); // TODO: Figure out why react-styleguidist cannot create docs if we don't return a jsx element\n\n  return React.createElement(Fragment, null, children(_objectSpread({}, props, {\n    open: open\n  })));\n});\nDropzone.displayName = 'Dropzone';\nDropzone.propTypes = {\n  /**\n   * Render function that exposes the dropzone state and prop getter fns\n   *\n   * @param {object} params\n   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render\n   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render\n   * @param {Function} params.open Open the native file selection dialog\n   * @param {boolean} params.isFocused Dropzone area is in focus\n   * @param {boolean} params.isFileDialogActive File dialog is opened\n   * @param {boolean} params.isDragActive Active drag is in progress\n   * @param {boolean} params.isDragAccept Dragged files are accepted\n   * @param {boolean} params.isDragReject Some dragged files are rejected\n   * @param {File[]} params.draggedFiles Files in active drag\n   * @param {File[]} params.acceptedFiles Accepted files\n   * @param {File[]} params.rejectedFiles Rejected files\n   */\n  children: PropTypes.func,\n\n  /**\n   * Set accepted file types.\n   * See https://github.com/okonet/attr-accept for more information.\n   * Keep in mind that mime type determination is not reliable across platforms. CSV files,\n   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\n   * Windows. In some cases there might not be a mime type set at all.\n   * See: https://github.com/react-dropzone/react-dropzone/issues/276\n   */\n  accept: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\n  /**\n   * Allow drag 'n' drop (or selection from the file dialog) of multiple files\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * If false, allow dropped items to take over the current browser window\n   */\n  preventDropOnDocument: PropTypes.bool,\n\n  /**\n   * Minimum file size (in bytes)\n   */\n  minSize: PropTypes.number,\n\n  /**\n   * Maximum file size (in bytes)\n   */\n  maxSize: PropTypes.number,\n\n  /**\n   * Enable/disable the dropzone\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Use this to provide a custom file aggregator\n   *\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n   */\n  getFilesFromEvent: PropTypes.func,\n\n  /**\n   * Cb for when closing the file dialog with no selection\n   */\n  onFileDialogCancel: PropTypes.func,\n\n  /**\n   * Cb for when the `dragenter` event occurs.\n   *\n   * @param {DragEvent} event\n   */\n  onDragEnter: PropTypes.func,\n\n  /**\n   * Cb for when the `dragleave` event occurs\n   *\n   * @param {DragEvent} event\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * Cb for when the `dragover` event occurs\n   *\n   * @param {DragEvent} event\n   */\n  onDragOver: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\n   *\n   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\n   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.\n   * If `multiple` is set to false and additional files are droppped,\n   * all files besides the first will be rejected.\n   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\n   *\n   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\n   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\n   *\n   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\n   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\n   *\n   * ```js\n   * function onDrop(acceptedFiles) {\n   *   const req = request.post('/upload')\n   *   acceptedFiles.forEach(file => {\n   *     req.attach(file.name, file)\n   *   })\n   *   req.end(callback)\n   * }\n   * ```\n   *\n   * @param {File[]} acceptedFiles\n   * @param {File[]} rejectedFiles\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n   */\n  onDrop: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that if no files are accepted, this callback is not invoked.\n   *\n   * @param {File[]} files\n   * @param {(DragEvent|Event)} event\n   */\n  onDropAccepted: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that if no files are rejected, this callback is not invoked.\n   *\n   * @param {object[]} files\n   * @param {(DragEvent|Event)} event\n   */\n  onDropRejected: PropTypes.func\n};\nexport default Dropzone;\n/**\n * A function that is invoked for the `dragenter`,\n * `dragover` and `dragleave` events.\n * It is not invoked if the items are not files (such as link, text, etc.).\n *\n * @callback dragCb\n * @param {DragEvent} event\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n * It is not invoked if the items are not files (such as link, text, etc.).\n *\n * @callback dropCb\n * @param {File[]} acceptedFiles List of accepted files\n * @param {File[]} rejectedFiles List of rejected files\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n * It is not invoked if the items are files (such as link, text, etc.).\n *\n * @callback dropAcceptedCb\n * @param {File[]} files List of accepted files that meet the given criteria\n * (`accept`, `multiple`, `minSize`, `maxSize`)\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n *\n * @callback dropRejectedCb\n * @param {File[]} files List of rejected files that do not meet the given criteria\n * (`accept`, `multiple`, `minSize`, `maxSize`)\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is used aggregate files,\n * in a asynchronous fashion, from drag or input change events.\n *\n * @callback getFilesFromEvent\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n * @returns {(File[]|Promise<File[]>)}\n */\n\n/**\n * An object with the current dropzone state and some helper functions.\n *\n * @typedef {object} DropzoneState\n * @property {Function} getRootProps Returns the props you should apply to the root drop container you render\n * @property {Function} getInputProps Returns the props you should apply to hidden file input you render\n * @property {Function} open Open the native file selection dialog\n * @property {boolean} isFocused Dropzone area is in focus\n * @property {boolean} isFileDialogActive File dialog is opened\n * @property {boolean} isDragActive Active drag is in progress\n * @property {boolean} isDragAccept Dragged files are accepted\n * @property {boolean} isDragReject Some dragged files are rejected\n * @property {File[]} draggedFiles Files in active drag\n * @property {File[]} acceptedFiles Accepted files\n * @property {File[]} rejectedFiles Rejected files\n */\n\nvar initialState = {\n  isFocused: false,\n  isFileDialogActive: false,\n  isDragActive: false,\n  isDragAccept: false,\n  isDragReject: false,\n  draggedFiles: [],\n  acceptedFiles: [],\n  rejectedFiles: []\n  /**\n   * A React hook that creates a drag 'n' drop area.\n   *\n   * ```jsx\n   * function MyDropzone(props) {\n   *   const {getRootProps, getInputProps} = useDropzone({\n   *     onDrop: acceptedFiles => {\n   *       // do something with the File objects, e.g. upload to some server\n   *     }\n   *   });\n   *   return (\n   *     <div {...getRootProps()}>\n   *       <input {...getInputProps()} />\n   *       <p>Drag and drop some files here, or click to select files</p>\n   *     </div>\n   *   )\n   * }\n   * ```\n   *\n   * @function useDropzone\n   *\n   * @param {object} props\n   * @param {string|string[]} [props.accept] Set accepted file types.\n   * See https://github.com/okonet/attr-accept for more information.\n   * Keep in mind that mime type determination is not reliable across platforms. CSV files,\n   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\n   * Windows. In some cases there might not be a mime type set at all.\n   * See: https://github.com/react-dropzone/react-dropzone/issues/276\n   * @param {boolean} [props.multiple=true] Allow drag 'n' drop (or selection from the file dialog) of multiple files\n   * @param {boolean} [props.preventDropOnDocument=true] If false, allow dropped items to take over the current browser window\n   * @param {number} [props.minSize=0] Minimum file size (in bytes)\n   * @param {number} [props.maxSize=Infinity] Maximum file size (in bytes)\n   * @param {boolean} [props.disabled=false] Enable/disable the dropzone\n   * @param {getFilesFromEvent} [props.getFilesFromEvent] Use this to provide a custom file aggregator\n   * @param {Function} [props.onFileDialogCancel] Cb for when closing the file dialog with no selection\n   * @param {dragCb} [props.onDragEnter] Cb for when the `dragenter` event occurs.\n   * @param {dragCb} [props.onDragLeave] Cb for when the `dragleave` event occurs\n   * @param {dragCb} [props.onDragOver] Cb for when the `dragover` event occurs\n   * @param {dropCb} [props.onDrop] Cb for when the `drop` event occurs.\n   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\n   *\n   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\n   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.\n   * If `multiple` is set to false and additional files are droppped,\n   * all files besides the first will be rejected.\n   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\n   *\n   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\n   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\n   *\n   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\n   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\n   *\n   * ```js\n   * function onDrop(acceptedFiles) {\n   *   const req = request.post('/upload')\n   *   acceptedFiles.forEach(file => {\n   *     req.attach(file.name, file)\n   *   })\n   *   req.end(callback)\n   * }\n   * ```\n   * @param {dropAcceptedCb} [props.onDropAccepted]\n   * @param {dropRejectedCb} [props.onDropRejected]\n   *\n   * @returns {DropzoneState}\n   */\n\n};\nexport function useDropzone() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      accept = _ref2.accept,\n      _ref2$disabled = _ref2.disabled,\n      disabled = _ref2$disabled === void 0 ? false : _ref2$disabled,\n      _ref2$getFilesFromEve = _ref2.getFilesFromEvent,\n      getFilesFromEvent = _ref2$getFilesFromEve === void 0 ? fromEvent : _ref2$getFilesFromEve,\n      _ref2$maxSize = _ref2.maxSize,\n      maxSize = _ref2$maxSize === void 0 ? Infinity : _ref2$maxSize,\n      _ref2$minSize = _ref2.minSize,\n      minSize = _ref2$minSize === void 0 ? 0 : _ref2$minSize,\n      _ref2$multiple = _ref2.multiple,\n      multiple = _ref2$multiple === void 0 ? true : _ref2$multiple,\n      onDragEnter = _ref2.onDragEnter,\n      onDragLeave = _ref2.onDragLeave,\n      onDragOver = _ref2.onDragOver,\n      onDrop = _ref2.onDrop,\n      onDropAccepted = _ref2.onDropAccepted,\n      onDropRejected = _ref2.onDropRejected,\n      onFileDialogCancel = _ref2.onFileDialogCancel,\n      _ref2$preventDropOnDo = _ref2.preventDropOnDocument,\n      preventDropOnDocument = _ref2$preventDropOnDo === void 0 ? true : _ref2$preventDropOnDo;\n\n  var rootRef = useRef(null);\n  var inputRef = useRef(null);\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var isFocused = state.isFocused,\n      isFileDialogActive = state.isFileDialogActive,\n      draggedFiles = state.draggedFiles; // Fn for opening the file dialog programmatically\n\n  var openFileDialog = function openFileDialog() {\n    if (inputRef.current) {\n      dispatch({\n        type: 'openDialog'\n      });\n      inputRef.current.value = null;\n      inputRef.current.click();\n    }\n  }; // Update file dialog active state when the window is focused on\n\n\n  var onWindowFocus = function onWindowFocus() {\n    // Execute the timeout only if the file dialog is opened in the browser\n    if (isFileDialogActive) {\n      setTimeout(function () {\n        if (inputRef.current) {\n          var files = inputRef.current.files;\n\n          if (!files.length) {\n            dispatch({\n              type: 'closeDialog'\n            });\n\n            if (typeof onFileDialogCancel === 'function') {\n              onFileDialogCancel();\n            }\n          }\n        }\n      }, 300);\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener('focus', onWindowFocus, false);\n    return function () {\n      window.removeEventListener('focus', onWindowFocus, false);\n    };\n  }, [inputRef, isFileDialogActive, onFileDialogCancel]); // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone\n\n  var onKeyDownCb = useCallback(function (event) {\n    // Ignore keyboard events bubbling up the DOM tree\n    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {\n      return;\n    }\n\n    if (event.keyCode === 32 || event.keyCode === 13) {\n      event.preventDefault();\n      openFileDialog();\n    }\n  }, [rootRef, inputRef]); // Update focus state for the dropzone\n\n  var onFocusCb = useCallback(function () {\n    dispatch({\n      type: 'focus'\n    });\n  }, []);\n  var onBlurCb = useCallback(function () {\n    dispatch({\n      type: 'blur'\n    });\n  }, []); // Cb to open the file dialog when click occurs on the dropzone\n\n  var onClickCb = useCallback(function () {\n    // In IE11/Edge the file-browser dialog is blocking, therefore, use setTimeout()\n    // to ensure React can handle state changes\n    // See: https://github.com/react-dropzone/react-dropzone/issues/450\n    if (isIeOrEdge()) {\n      setTimeout(openFileDialog, 0);\n    } else {\n      openFileDialog();\n    }\n  }, [inputRef]);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      dragTargets = _useState2[0],\n      setDragTargets = _useState2[1];\n\n  var onDocumentDrop = function onDocumentDrop(event) {\n    if (rootRef.current && rootRef.current.contains(event.target)) {\n      // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler\n      return;\n    }\n\n    event.preventDefault();\n    setDragTargets([]);\n  };\n\n  useEffect(function () {\n    if (preventDropOnDocument) {\n      document.addEventListener('dragover', onDocumentDragOver, false);\n      document.addEventListener('drop', onDocumentDrop, false);\n    }\n\n    return function () {\n      if (preventDropOnDocument) {\n        document.removeEventListener('dragover', onDocumentDragOver);\n        document.removeEventListener('drop', onDocumentDrop);\n      }\n    };\n  }, [rootRef, preventDropOnDocument]);\n  var onDragEnterCb = useCallback(function (event) {\n    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done\n\n    event.persist(); // Count the dropzone and any children that are entered.\n\n    if (dragTargets.indexOf(event.target) === -1) {\n      setDragTargets([].concat(_toConsumableArray(dragTargets), [event.target]));\n    }\n\n    if (isEvtWithFiles(event)) {\n      Promise.resolve(getFilesFromEvent(event)).then(function (draggedFiles) {\n        if (isPropagationStopped(event)) {\n          return;\n        }\n\n        dispatch({\n          draggedFiles: draggedFiles,\n          type: 'setDraggedFiles'\n        });\n\n        if (onDragEnter) {\n          onDragEnter(event);\n        }\n      });\n    }\n  }, [dragTargets, getFilesFromEvent, onDragEnter]);\n  var onDragOverCb = useCallback(function (event) {\n    event.preventDefault();\n    event.persist();\n\n    if (event.dataTransfer) {\n      try {\n        event.dataTransfer.dropEffect = 'copy';\n      } catch (_unused) {}\n      /* eslint-disable-line no-empty */\n\n    }\n\n    if (isEvtWithFiles(event) && onDragOver) {\n      onDragOver(event);\n    }\n\n    return false;\n  }, [onDragOver]);\n  var onDragLeaveCb = useCallback(function (event) {\n    event.preventDefault();\n    event.persist(); // Only deactivate once the dropzone and all children have been left\n\n    var targets = _toConsumableArray(dragTargets.filter(function (target) {\n      return target !== event.target && rootRef.current && rootRef.current.contains(target);\n    }));\n\n    setDragTargets(targets);\n\n    if (targets.length > 0) {\n      return;\n    }\n\n    dispatch({\n      type: 'setDraggedFiles',\n      draggedFiles: []\n    });\n\n    if (isEvtWithFiles(event) && onDragLeave) {\n      onDragLeave(event);\n    }\n  }, [rootRef, dragTargets, onDragLeave]);\n  var onDropCb = useCallback(function (event) {\n    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done\n\n    event.persist();\n    setDragTargets([]);\n    dispatch({\n      type: 'reset'\n    });\n\n    if (isEvtWithFiles(event)) {\n      Promise.resolve(getFilesFromEvent(event)).then(function (files) {\n        if (isPropagationStopped(event)) {\n          return;\n        }\n\n        var acceptedFiles = [];\n        var rejectedFiles = [];\n        files.forEach(function (file) {\n          if (fileAccepted(file, accept) && fileMatchSize(file, maxSize, minSize)) {\n            acceptedFiles.push(file);\n          } else {\n            rejectedFiles.push(file);\n          }\n        });\n\n        if (!multiple && acceptedFiles.length > 1) {\n          rejectedFiles.push.apply(rejectedFiles, _toConsumableArray(acceptedFiles.splice(0))); // Reject everything and empty accepted files\n        }\n\n        dispatch({\n          acceptedFiles: acceptedFiles,\n          rejectedFiles: rejectedFiles,\n          type: 'setFiles'\n        });\n\n        if (onDrop) {\n          onDrop(acceptedFiles, rejectedFiles, event);\n        }\n\n        if (rejectedFiles.length > 0 && onDropRejected) {\n          onDropRejected(rejectedFiles, event);\n        }\n\n        if (acceptedFiles.length > 0 && onDropAccepted) {\n          onDropAccepted(acceptedFiles, event);\n        }\n      });\n    }\n  }, [multiple, accept, minSize, maxSize, getFilesFromEvent, onDrop, onDropAccepted, onDropRejected]);\n\n  var composeHandler = function composeHandler(fn) {\n    return disabled ? null : fn;\n  };\n\n  var getRootProps = useMemo(function () {\n    return function () {\n      var _objectSpread2;\n\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$refKey = _ref3.refKey,\n          refKey = _ref3$refKey === void 0 ? 'ref' : _ref3$refKey,\n          onKeyDown = _ref3.onKeyDown,\n          onFocus = _ref3.onFocus,\n          onBlur = _ref3.onBlur,\n          onClick = _ref3.onClick,\n          onDragEnter = _ref3.onDragEnter,\n          onDragOver = _ref3.onDragOver,\n          onDragLeave = _ref3.onDragLeave,\n          onDrop = _ref3.onDrop,\n          rest = _objectWithoutProperties(_ref3, [\"refKey\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onClick\", \"onDragEnter\", \"onDragOver\", \"onDragLeave\", \"onDrop\"]);\n\n      return _objectSpread((_objectSpread2 = {\n        onKeyDown: composeHandler(composeEventHandlers(onKeyDown, onKeyDownCb)),\n        onFocus: composeHandler(composeEventHandlers(onFocus, onFocusCb)),\n        onBlur: composeHandler(composeEventHandlers(onBlur, onBlurCb)),\n        onClick: composeHandler(composeEventHandlers(onClick, onClickCb)),\n        onDragEnter: composeHandler(composeEventHandlers(onDragEnter, onDragEnterCb)),\n        onDragOver: composeHandler(composeEventHandlers(onDragOver, onDragOverCb)),\n        onDragLeave: composeHandler(composeEventHandlers(onDragLeave, onDragLeaveCb)),\n        onDrop: composeHandler(composeEventHandlers(onDrop, onDropCb))\n      }, _defineProperty(_objectSpread2, refKey, rootRef), _defineProperty(_objectSpread2, \"tabIndex\", disabled ? -1 : 0), _objectSpread2), rest);\n    };\n  }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, disabled]);\n  var onInputElementClick = useCallback(function (event) {\n    event.stopPropagation();\n  }, []);\n  var getInputProps = useMemo(function () {\n    return function () {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$refKey = _ref4.refKey,\n          refKey = _ref4$refKey === void 0 ? 'ref' : _ref4$refKey,\n          onChange = _ref4.onChange,\n          onClick = _ref4.onClick,\n          rest = _objectWithoutProperties(_ref4, [\"refKey\", \"onChange\", \"onClick\"]);\n\n      var inputProps = _defineProperty({\n        accept: accept,\n        type: 'file',\n        style: {\n          display: 'none'\n        },\n        multiple: supportMultiple && multiple,\n        onChange: composeHandler(composeEventHandlers(onChange, onDropCb)),\n        onClick: composeHandler(composeEventHandlers(onClick, onInputElementClick)),\n        autoComplete: 'off',\n        tabIndex: -1\n      }, refKey, inputRef);\n\n      return _objectSpread({}, inputProps, rest);\n    };\n  }, [inputRef, accept, multiple, onDropCb, disabled]);\n  var fileCount = draggedFiles.length;\n  var isMultipleAllowed = multiple || fileCount <= 1;\n  var isDragAccept = fileCount > 0 && allFilesAccepted(draggedFiles, accept);\n  var isDragReject = fileCount > 0 && (!isDragAccept || !isMultipleAllowed);\n  return _objectSpread({}, state, {\n    isDragAccept: isDragAccept,\n    isDragReject: isDragReject,\n    isFocused: isFocused && !disabled,\n    getRootProps: getRootProps,\n    getInputProps: getInputProps,\n    rootRef: rootRef,\n    inputRef: inputRef,\n    open: composeHandler(openFileDialog)\n  });\n}\n\nfunction reducer(state, action) {\n  /* istanbul ignore next */\n  switch (action.type) {\n    case 'focus':\n      return _objectSpread({}, state, {\n        isFocused: true\n      });\n\n    case 'blur':\n      return _objectSpread({}, state, {\n        isFocused: false\n      });\n\n    case 'openDialog':\n      return _objectSpread({}, state, {\n        isFileDialogActive: true\n      });\n\n    case 'closeDialog':\n      return _objectSpread({}, state, {\n        isFileDialogActive: false\n      });\n\n    case 'setDraggedFiles':\n      /* eslint no-case-declarations: 0 */\n      var draggedFiles = action.draggedFiles;\n      return _objectSpread({}, state, {\n        draggedFiles: draggedFiles,\n        isDragActive: draggedFiles.length > 0\n      });\n\n    case 'setFiles':\n      return _objectSpread({}, state, {\n        acceptedFiles: action.acceptedFiles,\n        rejectedFiles: action.rejectedFiles\n      });\n\n    case 'reset':\n      return _objectSpread({}, state, {\n        isFileDialogActive: false,\n        isDragActive: false,\n        draggedFiles: []\n      });\n\n    default:\n      return state;\n  }\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n"],"sourceRoot":""}