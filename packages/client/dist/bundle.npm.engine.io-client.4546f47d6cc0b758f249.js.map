{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/engine.io-client/lib/socket.js","webpack:////var/www/html/utter/node_modules/engine.io-client/lib/transports/polling-jsonp.js","webpack:////var/www/html/utter/node_modules/engine.io-client/lib/transports/polling-xhr.js","webpack:////var/www/html/utter/node_modules/engine.io-client/lib/xmlhttprequest.js","webpack:////var/www/html/utter/node_modules/engine.io-client/node_modules/debug/src/browser.js","webpack:////var/www/html/utter/node_modules/engine.io-client/lib/transports/websocket.js","webpack:////var/www/html/utter/node_modules/engine.io-client/node_modules/debug/src/debug.js","webpack:////var/www/html/utter/node_modules/engine.io-client/lib/transport.js","webpack:////var/www/html/utter/node_modules/engine.io-client/lib/index.js","webpack:////var/www/html/utter/node_modules/engine.io-client/lib/transports/index.js","webpack:////var/www/html/utter/node_modules/engine.io-client/lib/transports/polling.js","webpack:////var/www/html/utter/node_modules/engine.io-client/node_modules/ms/index.js"],"names":["transports","__webpack_require__","Emitter","debug","index","parser","parseuri","parseqs","Socket","uri","opts","this","hostname","host","secure","protocol","port","query","location","agent","decode","upgrade","path","replace","forceJSONP","jsonp","forceBase64","enablesXDR","timestampParam","timestampRequests","transportOptions","readyState","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","binaryType","onlyBinaryUpgrades","perMessageDeflate","threshold","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","undefined","forceNode","isReactNative","navigator","product","toLowerCase","self","extraHeaders","Object","keys","length","localAddress","id","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","open","module","exports","priorWebsocketSuccess","prototype","Transport","createTransport","name","obj","o","i","hasOwnProperty","clone","EIO","transport","options","sid","socket","requestTimeout","protocols","indexOf","setTimeout","emit","e","shift","setTransport","removeAllListeners","on","onDrain","packet","onPacket","onError","onClose","probe","failed","onTransportOpen","upgradeLosesBinary","supportsBinary","send","type","data","once","msg","upgrading","pause","cleanup","flush","err","Error","freezeTransport","close","onerror","error","onTransportClose","onclose","onupgrade","to","removeListener","onOpen","l","onHandshake","JSON","parse","setPing","code","filterUpgrades","onHeartbeat","timeout","clearTimeout","ping","sendPacket","splice","writable","write","fn","compress","push","waitForUpgrade","cleanupAndClose","reason","desc","filteredUpgrades","j","global","Polling","inherit","JSONPPolling","callbacks","rNewline","rEscapedNewline","empty","glob","window","call","___eio","onData","addEventListener","script","doClose","parentNode","removeChild","form","iframe","doPoll","document","createElement","async","src","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","test","userAgent","doWrite","area","iframeId","className","style","position","top","left","target","method","setAttribute","complete","initIframe","html","action","value","submit","attachEvent","onreadystatechange","onload","XMLHttpRequest","XHR","isSSL","xd","xs","Request","isBinary","create","request","req","sendXhr","pollXhr","xdomain","xscheme","xhr","setDisableHeaderCheck","setRequestHeader","withCredentials","hasXDR","onLoad","responseText","contentType","getResponseHeader","responseType","status","requestsCount","requests","onSuccess","fromError","abort","response","XDomainRequest","unloadHandler","terminationEvent","hasCORS","concat","join","process","load","r","storage","NODE_ENV","DEBUG","log","console","Function","apply","arguments","formatArgs","args","useColors","namespace","humanize","diff","c","color","lastC","match","save","namespaces","removeItem","documentElement","WebkitAppearance","firebug","exception","table","parseInt","RegExp","$1","chrome","local","localStorage","localstorage","colors","formatters","v","stringify","message","enable","Buffer","BrowserWebSocket","NodeWebSocket","yeast","WebSocket","MozWebSocket","WebSocketImpl","WS","usingBrowserWebSocket","doOpen","check","headers","ws","supports","binary","addEventListeners","onopen","onmessage","ev","packets","total","encodePacket","byteLength","done","schema","Number","b64","encode","createDebug","prevTime","enabled","curr","Date","ms","prev","Array","coerce","unshift","format","formatter","val","bind","hash","charCodeAt","Math","abs","selectColor","destroy","init","instances","stack","disable","names","skips","split","len","substr","instance","description","decodePacket","JSONP","websocket","polling","hasXHR2","poll","onPause","decodePayload","callbackfn","encodePayload","s","m","h","d","y","plural","n","floor","ceil","str","String","exec","parseFloat","isNaN","long","round","fmtShort"],"mappings":"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","file":"bundle.npm.engine.io-client.4546f47d6cc0b758f249.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (typeof location !== 'undefined' && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (typeof location !== 'undefined' ? location.hostname : 'localhost');\n  this.port = opts.port || (typeof location !== 'undefined' && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // detect ReactNative environment\n  this.isReactNative = (typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative');\n\n  // other options for Node.js or ReactNative client\n  if (typeof self === 'undefined' || this.isReactNative) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0),\n    isReactNative: this.isReactNative\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * Until https://github.com/tc39/proposal-global is shipped.\n */\nfunction glob () {\n  return typeof self !== 'undefined' ? self\n      : typeof window !== 'undefined' ? window\n      : typeof global !== 'undefined' ? global : {};\n}\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    var global = glob();\n    callbacks = global.___eio = (global.___eio || []);\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (typeof addEventListener === 'function') {\n    addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n","/* global attachEvent */\n\n/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = (typeof location !== 'undefined' && opts.hostname !== location.hostname) ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (self.supportsBinary && contentType === 'application/octet-stream') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (typeof document !== 'undefined') {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (typeof document !== 'undefined') {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== 'undefined') {\n  if (typeof attachEvent === 'function') {\n    attachEvent('onunload', unloadHandler);\n  } else if (typeof addEventListener === 'function') {\n    var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n","// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\n\nvar BrowserWebSocket, NodeWebSocket;\n\nif (typeof WebSocket !== 'undefined') {\n  BrowserWebSocket = WebSocket;\n} else if (typeof self !== 'undefined') {\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n} else {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocketImpl = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws =\n      this.usingBrowserWebSocket && !this.isReactNative\n        ? protocols\n          ? new WebSocketImpl(uri, protocols)\n          : new WebSocketImpl(uri)\n        : new WebSocketImpl(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // results of ReactNative environment detection\n  this.isReactNative = opts.isReactNative;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n"],"sourceRoot":""}