{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/apollo-cache-inmemory/node_modules/ts-invariant/lib/invariant.esm.js","webpack:////var/www/html/utter/node_modules/apollo-cache-inmemory/lib/bundle.esm.js"],"names":["genericMessage","invariant_esm_a","Object","setPrototypeOf","obj","proto","__proto__","invariant_esm_InvariantError","_super","InvariantError","message","_this","call","this","framesToPop","name","prototype","tslib_es6","Error","invariant","condition","warn","args","_i","arguments","length","console","apply","error","__webpack_require__","d","__webpack_exports__","bundle_esm_InMemoryCache","defaultDataIdFromObject","bundle_esm_StoreReader","assertIdValue","bundle_esm_WriteError","enhanceErrorWithDocument","bundle_esm_StoreWriter","HeuristicFragmentMatcher","bundle_esm_IntrospectionFragmentMatcher","ObjectCache","defaultNormalizedCacheFactory$1","testMap","Map","set","set_1","testSet","Set","add","add_1","frozen","freeze","delete","_a","wrap","method","seal","preventExtensions","haveWarned","shouldWarn","answer","lib_bundle_esm","ensureReady","Promise","resolve","canBypassInit","match","idValue","typeCondition","context","store","get","id","__typename","IntrospectionFragmentMatcher","options","introspectionQueryResultData","possibleTypesMap","parseIntrospectionResult","isReady","bind","implementingTypes","indexOf","introspectionResultData","typeMap","__schema","types","forEach","type","kind","possibleTypes","map","implementingType","CacheKeyNode","children","key","lookup","lookupArray","array","node","value","getOrCreate","create","hasOwn","hasOwnProperty","bundle_esm_DepTrackingCache","DepTrackingCache","data","depend","lib","dataId","disposable","makeCacheKey","toObject","dirty","clear","replace","newData","keys","defaultNormalizedCacheFactory","seed","StoreReader","cacheKeyRoot","reader","executeStoreQuery","executeSelectionSet","query","rootValue","contextValue","variableValues","fragmentMatcher","JSON","stringify","selectionSet","execContext","readQueryFromStore","diffQueryAgainstStore","returnPartialData","result","variables","previousResult","_b","_c","rootId","fragmentMatcherFunction","config","queryDefinition","dataIdFromObject","cacheRedirects","execResult","generated","typename","hasMissingFields","missing","info","tolerable","complete","defaultFragmentMatcher","mainDefinition","fragments","fragmentMap","finalResult","objectsToMerge","object","handleMissing","push","selections","selection","fieldResult","executeField","fragment","fragmentExecResult","field","readStoreResult","fieldName","resultKey","directives","storeKeyName","fieldValue","resolver","getCacheKey","storeObj","json","readStoreResolver","Array","isArray","combineExecResults","executeSubSelectedArray","assertSelectionSetForIdValue","execResults","pop","childResult","item","WriteError","document","enhancedError","stack","StoreWriter","writeQueryToStore","writeResultToStore","operationDefinition","writeSelectionSetToStore","processedData","e","resultFieldKey","writeFieldToStore","isDefered","isClient","some","directive","matches","undefined","fakeContext","self","storeValue","storeObject","storeFieldName","generatedId","processArrayValue","valueDataId","isGeneratedId","semanticId","isDataProcessed","escapedId","hadTypename","hasTypename","typenameChanged","mergeWithGenerated","generatedKey","realKey","cache","real","madeChanges","realValue","newRealValue","index","itemDataId","defaultConfig","addTypename","resultCaching","_id","hasOwn$1","bundle_esm_OptimisticCacheLayer","OptimisticCacheLayer","optimisticId","parent","transaction","InMemoryCache","watches","typenameDocumentCache","silenceBroadcast","customResolvers","cacheResolvers","optimisticData","storeReader","storeWriter","maybeBroadcastWatch","c","optimistic","restore","extract","read","transformDocument","write","broadcastWatches","diff","watch","evict","reset","removeOptimistic","idToRemove","toReapply","removedCount","layer","layer_1","performTransaction","recordOptimisticTransaction","callback","bundle_esm"],"mappings":"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","file":"bundle.npm.apollo-cache-inmemory.9edabeecf752ba0c53a1.js","sourcesContent":["import { __extends } from 'tslib';\n\nvar genericMessage = \"Invariant Violation\";\r\nvar _a = Object.setPrototypeOf, setPrototypeOf = _a === void 0 ? function (obj, proto) {\r\n    obj.__proto__ = proto;\r\n    return obj;\r\n} : _a;\r\nvar InvariantError = /** @class */ (function (_super) {\r\n    __extends(InvariantError, _super);\r\n    function InvariantError(message) {\r\n        if (message === void 0) { message = genericMessage; }\r\n        var _this = _super.call(this, message) || this;\r\n        _this.framesToPop = 1;\r\n        _this.name = genericMessage;\r\n        setPrototypeOf(_this, InvariantError.prototype);\r\n        return _this;\r\n    }\r\n    return InvariantError;\r\n}(Error));\r\nfunction invariant(condition, message) {\r\n    if (!condition) {\r\n        throw new InvariantError(message);\r\n    }\r\n}\r\n(function (invariant) {\r\n    function warn() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return console.warn.apply(console, args);\r\n    }\r\n    invariant.warn = warn;\r\n    function error() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return console.error.apply(console, args);\r\n    }\r\n    invariant.error = error;\r\n})(invariant || (invariant = {}));\r\nvar invariant$1 = invariant;\n\nexport default invariant$1;\nexport { InvariantError, invariant };\n","import { __assign, __extends } from 'tslib';\nimport { ApolloCache } from 'apollo-cache';\nimport { isTest, getQueryDefinition, assign, getDefaultValues, isEqual, getMainDefinition, getFragmentDefinitions, createFragmentMap, shouldInclude, isField, resultKeyNameFromField, isInlineFragment, mergeDeepArray, argumentsObjectFromField, getDirectiveInfoFromField, isIdValue, getStoreKeyName, toIdValue, isJsonValue, getOperationDefinition, isProduction, storeKeyNameFromField, addTypenameToDocument } from 'apollo-utilities';\nimport { wrap as wrap$1 } from 'optimism';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nvar testMap = new Map();\nif (testMap.set(1, 2) !== testMap) {\n    var set_1 = testMap.set;\n    Map.prototype.set = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        set_1.apply(this, args);\n        return this;\n    };\n}\nvar testSet = new Set();\nif (testSet.add(3) !== testSet) {\n    var add_1 = testSet.add;\n    Set.prototype.add = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        add_1.apply(this, args);\n        return this;\n    };\n}\nvar frozen = {};\nif (typeof Object.freeze === 'function') {\n    Object.freeze(frozen);\n}\ntry {\n    testMap.set(frozen, frozen).delete(frozen);\n}\ncatch (_a) {\n    var wrap = function (method) {\n        return method && (function (obj) {\n            try {\n                testMap.set(obj, obj).delete(obj);\n            }\n            finally {\n                return method.call(Object, obj);\n            }\n        });\n    };\n    Object.freeze = wrap(Object.freeze);\n    Object.seal = wrap(Object.seal);\n    Object.preventExtensions = wrap(Object.preventExtensions);\n}\n\nvar haveWarned = false;\nfunction shouldWarn() {\n    var answer = !haveWarned;\n    if (!isTest()) {\n        haveWarned = true;\n    }\n    return answer;\n}\nvar HeuristicFragmentMatcher = (function () {\n    function HeuristicFragmentMatcher() {\n    }\n    HeuristicFragmentMatcher.prototype.ensureReady = function () {\n        return Promise.resolve();\n    };\n    HeuristicFragmentMatcher.prototype.canBypassInit = function () {\n        return true;\n    };\n    HeuristicFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        var obj = context.store.get(idValue.id);\n        if (!obj && idValue.id === 'ROOT_QUERY') {\n            return true;\n        }\n        if (!obj) {\n            return false;\n        }\n        if (!obj.__typename) {\n            if (shouldWarn()) {\n                process.env.NODE_ENV === \"production\" || invariant.warn(\"You're using fragments in your queries, but either don't have the addTypename:\\n  true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.\\n   Please turn on the addTypename option and include __typename when writing fragments so that Apollo Client\\n   can accurately match fragments.\");\n                process.env.NODE_ENV === \"production\" || invariant.warn('Could not find __typename on Fragment ', typeCondition, obj);\n                process.env.NODE_ENV === \"production\" || invariant.warn(\"DEPRECATION WARNING: using fragments without __typename is unsupported behavior \" +\n                    \"and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.\");\n            }\n            return 'heuristic';\n        }\n        if (obj.__typename === typeCondition) {\n            return true;\n        }\n        if (shouldWarn()) {\n            process.env.NODE_ENV === \"production\" || invariant.error('You are using the simple (heuristic) fragment matcher, but your ' +\n                'queries contain union or interface types. Apollo Client will not be ' +\n                'able to accurately map fragments. To make this error go away, use ' +\n                'the `IntrospectionFragmentMatcher` as described in the docs: ' +\n                'https://www.apollographql.com/docs/react/advanced/fragments.html#fragment-matcher');\n        }\n        return 'heuristic';\n    };\n    return HeuristicFragmentMatcher;\n}());\nvar IntrospectionFragmentMatcher = (function () {\n    function IntrospectionFragmentMatcher(options) {\n        if (options && options.introspectionQueryResultData) {\n            this.possibleTypesMap = this.parseIntrospectionResult(options.introspectionQueryResultData);\n            this.isReady = true;\n        }\n        else {\n            this.isReady = false;\n        }\n        this.match = this.match.bind(this);\n    }\n    IntrospectionFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        process.env.NODE_ENV === \"production\" ? invariant(this.isReady) : invariant(this.isReady, 'FragmentMatcher.match() was called before FragmentMatcher.init()');\n        var obj = context.store.get(idValue.id);\n        if (!obj) {\n            return false;\n        }\n        process.env.NODE_ENV === \"production\" ? invariant(obj.__typename) : invariant(obj.__typename, \"Cannot match fragment because __typename property is missing: \" + JSON.stringify(obj));\n        if (obj.__typename === typeCondition) {\n            return true;\n        }\n        var implementingTypes = this.possibleTypesMap[typeCondition];\n        if (implementingTypes && implementingTypes.indexOf(obj.__typename) > -1) {\n            return true;\n        }\n        return false;\n    };\n    IntrospectionFragmentMatcher.prototype.parseIntrospectionResult = function (introspectionResultData) {\n        var typeMap = {};\n        introspectionResultData.__schema.types.forEach(function (type) {\n            if (type.kind === 'UNION' || type.kind === 'INTERFACE') {\n                typeMap[type.name] = type.possibleTypes.map(function (implementingType) { return implementingType.name; });\n            }\n        });\n        return typeMap;\n    };\n    return IntrospectionFragmentMatcher;\n}());\n\nvar CacheKeyNode = (function () {\n    function CacheKeyNode() {\n        this.children = null;\n        this.key = null;\n    }\n    CacheKeyNode.prototype.lookup = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return this.lookupArray(args);\n    };\n    CacheKeyNode.prototype.lookupArray = function (array) {\n        var node = this;\n        array.forEach(function (value) {\n            node = node.getOrCreate(value);\n        });\n        return node.key || (node.key = Object.create(null));\n    };\n    CacheKeyNode.prototype.getOrCreate = function (value) {\n        var map = this.children || (this.children = new Map());\n        var node = map.get(value);\n        if (!node) {\n            map.set(value, (node = new CacheKeyNode()));\n        }\n        return node;\n    };\n    return CacheKeyNode;\n}());\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar DepTrackingCache = (function () {\n    function DepTrackingCache(data) {\n        if (data === void 0) { data = Object.create(null); }\n        var _this = this;\n        this.data = data;\n        this.depend = wrap$1(function (dataId) { return _this.data[dataId]; }, {\n            disposable: true,\n            makeCacheKey: function (dataId) {\n                return dataId;\n            }\n        });\n    }\n    DepTrackingCache.prototype.toObject = function () {\n        return this.data;\n    };\n    DepTrackingCache.prototype.get = function (dataId) {\n        this.depend(dataId);\n        return this.data[dataId];\n    };\n    DepTrackingCache.prototype.set = function (dataId, value) {\n        var oldValue = this.data[dataId];\n        if (value !== oldValue) {\n            this.data[dataId] = value;\n            this.depend.dirty(dataId);\n        }\n    };\n    DepTrackingCache.prototype.delete = function (dataId) {\n        if (hasOwn.call(this.data, dataId)) {\n            delete this.data[dataId];\n            this.depend.dirty(dataId);\n        }\n    };\n    DepTrackingCache.prototype.clear = function () {\n        this.replace(null);\n    };\n    DepTrackingCache.prototype.replace = function (newData) {\n        var _this = this;\n        if (newData) {\n            Object.keys(newData).forEach(function (dataId) {\n                _this.set(dataId, newData[dataId]);\n            });\n            Object.keys(this.data).forEach(function (dataId) {\n                if (!hasOwn.call(newData, dataId)) {\n                    _this.delete(dataId);\n                }\n            });\n        }\n        else {\n            Object.keys(this.data).forEach(function (dataId) {\n                _this.delete(dataId);\n            });\n        }\n    };\n    return DepTrackingCache;\n}());\nfunction defaultNormalizedCacheFactory(seed) {\n    return new DepTrackingCache(seed);\n}\n\nvar StoreReader = (function () {\n    function StoreReader(cacheKeyRoot) {\n        if (cacheKeyRoot === void 0) { cacheKeyRoot = new CacheKeyNode; }\n        var _this = this;\n        this.cacheKeyRoot = cacheKeyRoot;\n        var reader = this;\n        var executeStoreQuery = reader.executeStoreQuery, executeSelectionSet = reader.executeSelectionSet;\n        this.executeStoreQuery = wrap$1(function (options) {\n            return executeStoreQuery.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var query = _a.query, rootValue = _a.rootValue, contextValue = _a.contextValue, variableValues = _a.variableValues, fragmentMatcher = _a.fragmentMatcher;\n                if (contextValue.store instanceof DepTrackingCache) {\n                    return reader.cacheKeyRoot.lookup(query, contextValue.store, fragmentMatcher, JSON.stringify(variableValues), rootValue.id);\n                }\n                return;\n            }\n        });\n        this.executeSelectionSet = wrap$1(function (options) {\n            return executeSelectionSet.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var selectionSet = _a.selectionSet, rootValue = _a.rootValue, execContext = _a.execContext;\n                if (execContext.contextValue.store instanceof DepTrackingCache) {\n                    return reader.cacheKeyRoot.lookup(selectionSet, execContext.contextValue.store, execContext.fragmentMatcher, JSON.stringify(execContext.variableValues), rootValue.id);\n                }\n                return;\n            }\n        });\n    }\n    StoreReader.prototype.readQueryFromStore = function (options) {\n        var optsPatch = { returnPartialData: false };\n        return this.diffQueryAgainstStore(__assign({}, options, optsPatch)).result;\n    };\n    StoreReader.prototype.diffQueryAgainstStore = function (_a) {\n        var store = _a.store, query = _a.query, variables = _a.variables, previousResult = _a.previousResult, _b = _a.returnPartialData, returnPartialData = _b === void 0 ? true : _b, _c = _a.rootId, rootId = _c === void 0 ? 'ROOT_QUERY' : _c, fragmentMatcherFunction = _a.fragmentMatcherFunction, config = _a.config;\n        var queryDefinition = getQueryDefinition(query);\n        variables = assign({}, getDefaultValues(queryDefinition), variables);\n        var context = {\n            store: store,\n            dataIdFromObject: (config && config.dataIdFromObject) || null,\n            cacheRedirects: (config && config.cacheRedirects) || {},\n        };\n        var execResult = this.executeStoreQuery({\n            query: query,\n            rootValue: {\n                type: 'id',\n                id: rootId,\n                generated: true,\n                typename: 'Query',\n            },\n            contextValue: context,\n            variableValues: variables,\n            fragmentMatcher: fragmentMatcherFunction,\n        });\n        var hasMissingFields = execResult.missing && execResult.missing.length > 0;\n        if (hasMissingFields && !returnPartialData) {\n            execResult.missing.forEach(function (info) {\n                if (info.tolerable)\n                    return;\n                throw process.env.NODE_ENV === \"production\" ? new InvariantError() : new InvariantError(\"Can't find field \" + info.fieldName + \" on object \" + JSON.stringify(info.object, null, 2) + \".\");\n            });\n        }\n        if (previousResult) {\n            if (isEqual(previousResult, execResult.result)) {\n                execResult.result = previousResult;\n            }\n        }\n        return {\n            result: execResult.result,\n            complete: !hasMissingFields,\n        };\n    };\n    StoreReader.prototype.executeStoreQuery = function (_a) {\n        var query = _a.query, rootValue = _a.rootValue, contextValue = _a.contextValue, variableValues = _a.variableValues, _b = _a.fragmentMatcher, fragmentMatcher = _b === void 0 ? defaultFragmentMatcher : _b;\n        var mainDefinition = getMainDefinition(query);\n        var fragments = getFragmentDefinitions(query);\n        var fragmentMap = createFragmentMap(fragments);\n        var execContext = {\n            query: query,\n            fragmentMap: fragmentMap,\n            contextValue: contextValue,\n            variableValues: variableValues,\n            fragmentMatcher: fragmentMatcher,\n        };\n        return this.executeSelectionSet({\n            selectionSet: mainDefinition.selectionSet,\n            rootValue: rootValue,\n            execContext: execContext,\n        });\n    };\n    StoreReader.prototype.executeSelectionSet = function (_a) {\n        var _this = this;\n        var selectionSet = _a.selectionSet, rootValue = _a.rootValue, execContext = _a.execContext;\n        var fragmentMap = execContext.fragmentMap, contextValue = execContext.contextValue, variables = execContext.variableValues;\n        var finalResult = { result: null };\n        var objectsToMerge = [];\n        var object = contextValue.store.get(rootValue.id);\n        var typename = (object && object.__typename) ||\n            (rootValue.id === 'ROOT_QUERY' && 'Query') ||\n            void 0;\n        function handleMissing(result) {\n            var _a;\n            if (result.missing) {\n                finalResult.missing = finalResult.missing || [];\n                (_a = finalResult.missing).push.apply(_a, result.missing);\n            }\n            return result.result;\n        }\n        selectionSet.selections.forEach(function (selection) {\n            var _a;\n            if (!shouldInclude(selection, variables)) {\n                return;\n            }\n            if (isField(selection)) {\n                var fieldResult = handleMissing(_this.executeField(object, typename, selection, execContext));\n                if (typeof fieldResult !== 'undefined') {\n                    objectsToMerge.push((_a = {},\n                        _a[resultKeyNameFromField(selection)] = fieldResult,\n                        _a));\n                }\n            }\n            else {\n                var fragment = void 0;\n                if (isInlineFragment(selection)) {\n                    fragment = selection;\n                }\n                else {\n                    fragment = fragmentMap[selection.name.value];\n                    if (!fragment) {\n                        throw process.env.NODE_ENV === \"production\" ? new InvariantError() : new InvariantError(\"No fragment named \" + selection.name.value);\n                    }\n                }\n                var typeCondition = fragment.typeCondition.name.value;\n                var match = execContext.fragmentMatcher(rootValue, typeCondition, contextValue);\n                if (match) {\n                    var fragmentExecResult = _this.executeSelectionSet({\n                        selectionSet: fragment.selectionSet,\n                        rootValue: rootValue,\n                        execContext: execContext,\n                    });\n                    if (match === 'heuristic' && fragmentExecResult.missing) {\n                        fragmentExecResult = __assign({}, fragmentExecResult, { missing: fragmentExecResult.missing.map(function (info) {\n                                return __assign({}, info, { tolerable: true });\n                            }) });\n                    }\n                    objectsToMerge.push(handleMissing(fragmentExecResult));\n                }\n            }\n        });\n        finalResult.result = mergeDeepArray(objectsToMerge);\n        return finalResult;\n    };\n    StoreReader.prototype.executeField = function (object, typename, field, execContext) {\n        var variables = execContext.variableValues, contextValue = execContext.contextValue;\n        var fieldName = field.name.value;\n        var args = argumentsObjectFromField(field, variables);\n        var info = {\n            resultKey: resultKeyNameFromField(field),\n            directives: getDirectiveInfoFromField(field, variables),\n        };\n        var readStoreResult = readStoreResolver(object, typename, fieldName, args, contextValue, info);\n        if (Array.isArray(readStoreResult.result)) {\n            return this.combineExecResults(readStoreResult, this.executeSubSelectedArray(field, readStoreResult.result, execContext));\n        }\n        if (!field.selectionSet) {\n            assertSelectionSetForIdValue(field, readStoreResult.result);\n            return readStoreResult;\n        }\n        if (readStoreResult.result == null) {\n            return readStoreResult;\n        }\n        return this.combineExecResults(readStoreResult, this.executeSelectionSet({\n            selectionSet: field.selectionSet,\n            rootValue: readStoreResult.result,\n            execContext: execContext,\n        }));\n    };\n    StoreReader.prototype.combineExecResults = function () {\n        var execResults = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            execResults[_i] = arguments[_i];\n        }\n        var missing = null;\n        execResults.forEach(function (execResult) {\n            if (execResult.missing) {\n                missing = missing || [];\n                missing.push.apply(missing, execResult.missing);\n            }\n        });\n        return {\n            result: execResults.pop().result,\n            missing: missing,\n        };\n    };\n    StoreReader.prototype.executeSubSelectedArray = function (field, result, execContext) {\n        var _this = this;\n        var missing = null;\n        function handleMissing(childResult) {\n            if (childResult.missing) {\n                missing = missing || [];\n                missing.push.apply(missing, childResult.missing);\n            }\n            return childResult.result;\n        }\n        result = result.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return handleMissing(_this.executeSubSelectedArray(field, item, execContext));\n            }\n            if (field.selectionSet) {\n                return handleMissing(_this.executeSelectionSet({\n                    selectionSet: field.selectionSet,\n                    rootValue: item,\n                    execContext: execContext,\n                }));\n            }\n            assertSelectionSetForIdValue(field, item);\n            return item;\n        });\n        return { result: result, missing: missing };\n    };\n    return StoreReader;\n}());\nfunction assertSelectionSetForIdValue(field, value) {\n    if (!field.selectionSet && isIdValue(value)) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError() : new InvariantError(\"Missing selection set for object of type \" + value.typename + \" returned for query field \" + field.name.value);\n    }\n}\nfunction defaultFragmentMatcher() {\n    return true;\n}\nfunction assertIdValue(idValue) {\n    process.env.NODE_ENV === \"production\" ? invariant(isIdValue(idValue)) : invariant(isIdValue(idValue), \"Encountered a sub-selection on the query, but the store doesn't have an object reference. This should never happen during normal use unless you have custom code that is directly manipulating the store; please file an issue.\");\n}\nfunction readStoreResolver(object, typename, fieldName, args, context, _a) {\n    var resultKey = _a.resultKey, directives = _a.directives;\n    var storeKeyName = fieldName;\n    if (args || directives) {\n        storeKeyName = getStoreKeyName(storeKeyName, args, directives);\n    }\n    var fieldValue = void 0;\n    if (object) {\n        fieldValue = object[storeKeyName];\n        if (typeof fieldValue === 'undefined' &&\n            context.cacheRedirects &&\n            typeof typename === 'string') {\n            var type = context.cacheRedirects[typename];\n            if (type) {\n                var resolver = type[fieldName];\n                if (resolver) {\n                    fieldValue = resolver(object, args, {\n                        getCacheKey: function (storeObj) {\n                            return toIdValue({\n                                id: context.dataIdFromObject(storeObj),\n                                typename: storeObj.__typename,\n                            });\n                        },\n                    });\n                }\n            }\n        }\n    }\n    if (typeof fieldValue === 'undefined') {\n        return {\n            result: fieldValue,\n            missing: [{\n                    object: object,\n                    fieldName: storeKeyName,\n                    tolerable: false,\n                }],\n        };\n    }\n    if (isJsonValue(fieldValue)) {\n        fieldValue = fieldValue.json;\n    }\n    return {\n        result: fieldValue,\n    };\n}\n\nvar ObjectCache = (function () {\n    function ObjectCache(data) {\n        if (data === void 0) { data = Object.create(null); }\n        this.data = data;\n    }\n    ObjectCache.prototype.toObject = function () {\n        return this.data;\n    };\n    ObjectCache.prototype.get = function (dataId) {\n        return this.data[dataId];\n    };\n    ObjectCache.prototype.set = function (dataId, value) {\n        this.data[dataId] = value;\n    };\n    ObjectCache.prototype.delete = function (dataId) {\n        this.data[dataId] = void 0;\n    };\n    ObjectCache.prototype.clear = function () {\n        this.data = Object.create(null);\n    };\n    ObjectCache.prototype.replace = function (newData) {\n        this.data = newData || Object.create(null);\n    };\n    return ObjectCache;\n}());\nfunction defaultNormalizedCacheFactory$1(seed) {\n    return new ObjectCache(seed);\n}\n\nvar WriteError = (function (_super) {\n    __extends(WriteError, _super);\n    function WriteError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'WriteError';\n        return _this;\n    }\n    return WriteError;\n}(Error));\nfunction enhanceErrorWithDocument(error, document) {\n    var enhancedError = new WriteError(\"Error writing result to store for query:\\n \" + JSON.stringify(document));\n    enhancedError.message += '\\n' + error.message;\n    enhancedError.stack = error.stack;\n    return enhancedError;\n}\nvar StoreWriter = (function () {\n    function StoreWriter() {\n    }\n    StoreWriter.prototype.writeQueryToStore = function (_a) {\n        var query = _a.query, result = _a.result, _b = _a.store, store = _b === void 0 ? defaultNormalizedCacheFactory() : _b, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n        return this.writeResultToStore({\n            dataId: 'ROOT_QUERY',\n            result: result,\n            document: query,\n            store: store,\n            variables: variables,\n            dataIdFromObject: dataIdFromObject,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n        });\n    };\n    StoreWriter.prototype.writeResultToStore = function (_a) {\n        var dataId = _a.dataId, result = _a.result, document = _a.document, _b = _a.store, store = _b === void 0 ? defaultNormalizedCacheFactory() : _b, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n        var operationDefinition = getOperationDefinition(document);\n        try {\n            return this.writeSelectionSetToStore({\n                result: result,\n                dataId: dataId,\n                selectionSet: operationDefinition.selectionSet,\n                context: {\n                    store: store,\n                    processedData: {},\n                    variables: assign({}, getDefaultValues(operationDefinition), variables),\n                    dataIdFromObject: dataIdFromObject,\n                    fragmentMap: createFragmentMap(getFragmentDefinitions(document)),\n                    fragmentMatcherFunction: fragmentMatcherFunction,\n                },\n            });\n        }\n        catch (e) {\n            throw enhanceErrorWithDocument(e, document);\n        }\n    };\n    StoreWriter.prototype.writeSelectionSetToStore = function (_a) {\n        var _this = this;\n        var result = _a.result, dataId = _a.dataId, selectionSet = _a.selectionSet, context = _a.context;\n        var variables = context.variables, store = context.store, fragmentMap = context.fragmentMap;\n        selectionSet.selections.forEach(function (selection) {\n            if (!shouldInclude(selection, variables)) {\n                return;\n            }\n            if (isField(selection)) {\n                var resultFieldKey = resultKeyNameFromField(selection);\n                var value = result[resultFieldKey];\n                if (typeof value !== 'undefined') {\n                    _this.writeFieldToStore({\n                        dataId: dataId,\n                        value: value,\n                        field: selection,\n                        context: context,\n                    });\n                }\n                else {\n                    var isDefered = false;\n                    var isClient = false;\n                    if (selection.directives && selection.directives.length) {\n                        isDefered = selection.directives.some(function (directive) { return directive.name && directive.name.value === 'defer'; });\n                        isClient = selection.directives.some(function (directive) { return directive.name && directive.name.value === 'client'; });\n                    }\n                    if (!isDefered && !isClient && context.fragmentMatcherFunction) {\n                        process.env.NODE_ENV === \"production\" || invariant.warn(\"Missing field \" + resultFieldKey + \" in \" + JSON.stringify(result, null, 2).substring(0, 100));\n                    }\n                }\n            }\n            else {\n                var fragment = void 0;\n                if (isInlineFragment(selection)) {\n                    fragment = selection;\n                }\n                else {\n                    fragment = (fragmentMap || {})[selection.name.value];\n                    process.env.NODE_ENV === \"production\" ? invariant(fragment) : invariant(fragment, \"No fragment named \" + selection.name.value + \".\");\n                }\n                var matches = true;\n                if (context.fragmentMatcherFunction && fragment.typeCondition) {\n                    var idValue = toIdValue({ id: 'self', typename: undefined });\n                    var fakeContext = {\n                        store: new ObjectCache({ self: result }),\n                        cacheRedirects: {},\n                    };\n                    var match = context.fragmentMatcherFunction(idValue, fragment.typeCondition.name.value, fakeContext);\n                    if (!isProduction() && match === 'heuristic') {\n                        process.env.NODE_ENV === \"production\" || invariant.error('WARNING: heuristic fragment matching going on!');\n                    }\n                    matches = !!match;\n                }\n                if (matches) {\n                    _this.writeSelectionSetToStore({\n                        result: result,\n                        selectionSet: fragment.selectionSet,\n                        dataId: dataId,\n                        context: context,\n                    });\n                }\n            }\n        });\n        return store;\n    };\n    StoreWriter.prototype.writeFieldToStore = function (_a) {\n        var field = _a.field, value = _a.value, dataId = _a.dataId, context = _a.context;\n        var _b;\n        var variables = context.variables, dataIdFromObject = context.dataIdFromObject, store = context.store;\n        var storeValue;\n        var storeObject;\n        var storeFieldName = storeKeyNameFromField(field, variables);\n        if (!field.selectionSet || value === null) {\n            storeValue =\n                value != null && typeof value === 'object'\n                    ?\n                        { type: 'json', json: value }\n                    :\n                        value;\n        }\n        else if (Array.isArray(value)) {\n            var generatedId = dataId + \".\" + storeFieldName;\n            storeValue = this.processArrayValue(value, generatedId, field.selectionSet, context);\n        }\n        else {\n            var valueDataId = dataId + \".\" + storeFieldName;\n            var generated = true;\n            if (!isGeneratedId(valueDataId)) {\n                valueDataId = '$' + valueDataId;\n            }\n            if (dataIdFromObject) {\n                var semanticId = dataIdFromObject(value);\n                process.env.NODE_ENV === \"production\" ? invariant(!semanticId || !isGeneratedId(semanticId)) : invariant(!semanticId || !isGeneratedId(semanticId), 'IDs returned by dataIdFromObject cannot begin with the \"$\" character.');\n                if (semanticId ||\n                    (typeof semanticId === 'number' && semanticId === 0)) {\n                    valueDataId = semanticId;\n                    generated = false;\n                }\n            }\n            if (!isDataProcessed(valueDataId, field, context.processedData)) {\n                this.writeSelectionSetToStore({\n                    dataId: valueDataId,\n                    result: value,\n                    selectionSet: field.selectionSet,\n                    context: context,\n                });\n            }\n            var typename = value.__typename;\n            storeValue = toIdValue({ id: valueDataId, typename: typename }, generated);\n            storeObject = store.get(dataId);\n            var escapedId = storeObject && storeObject[storeFieldName];\n            if (escapedId !== storeValue && isIdValue(escapedId)) {\n                var hadTypename = escapedId.typename !== undefined;\n                var hasTypename = typename !== undefined;\n                var typenameChanged = hadTypename && hasTypename && escapedId.typename !== typename;\n                process.env.NODE_ENV === \"production\" ? invariant(!generated || escapedId.generated || typenameChanged) : invariant(!generated || escapedId.generated || typenameChanged, \"Store error: the application attempted to write an object with no provided id but the store already contains an id of \" + escapedId.id + \" for this object. The selectionSet that was trying to be written is:\\n\" + JSON.stringify(field));\n                process.env.NODE_ENV === \"production\" ? invariant(!hadTypename || hasTypename) : invariant(!hadTypename || hasTypename, \"Store error: the application attempted to write an object with no provided typename but the store already contains an object with typename of \" + escapedId.typename + \" for the object of id \" + escapedId.id + \". The selectionSet that was trying to be written is:\\n\" + JSON.stringify(field));\n                if (escapedId.generated) {\n                    if (typenameChanged) {\n                        if (!generated) {\n                            store.delete(escapedId.id);\n                        }\n                    }\n                    else {\n                        mergeWithGenerated(escapedId.id, storeValue.id, store);\n                    }\n                }\n            }\n        }\n        storeObject = store.get(dataId);\n        if (!storeObject || !isEqual(storeValue, storeObject[storeFieldName])) {\n            store.set(dataId, __assign({}, storeObject, (_b = {}, _b[storeFieldName] = storeValue, _b)));\n        }\n    };\n    StoreWriter.prototype.processArrayValue = function (value, generatedId, selectionSet, context) {\n        var _this = this;\n        return value.map(function (item, index) {\n            if (item === null) {\n                return null;\n            }\n            var itemDataId = generatedId + \".\" + index;\n            if (Array.isArray(item)) {\n                return _this.processArrayValue(item, itemDataId, selectionSet, context);\n            }\n            var generated = true;\n            if (context.dataIdFromObject) {\n                var semanticId = context.dataIdFromObject(item);\n                if (semanticId) {\n                    itemDataId = semanticId;\n                    generated = false;\n                }\n            }\n            if (!isDataProcessed(itemDataId, selectionSet, context.processedData)) {\n                _this.writeSelectionSetToStore({\n                    dataId: itemDataId,\n                    result: item,\n                    selectionSet: selectionSet,\n                    context: context,\n                });\n            }\n            return toIdValue({ id: itemDataId, typename: item.__typename }, generated);\n        });\n    };\n    return StoreWriter;\n}());\nfunction isGeneratedId(id) {\n    return id[0] === '$';\n}\nfunction mergeWithGenerated(generatedKey, realKey, cache) {\n    if (generatedKey === realKey) {\n        return false;\n    }\n    var generated = cache.get(generatedKey);\n    var real = cache.get(realKey);\n    var madeChanges = false;\n    Object.keys(generated).forEach(function (key) {\n        var value = generated[key];\n        var realValue = real[key];\n        if (isIdValue(value) &&\n            isGeneratedId(value.id) &&\n            isIdValue(realValue) &&\n            !isEqual(value, realValue) &&\n            mergeWithGenerated(value.id, realValue.id, cache)) {\n            madeChanges = true;\n        }\n    });\n    cache.delete(generatedKey);\n    var newRealValue = __assign({}, generated, real);\n    if (isEqual(newRealValue, real)) {\n        return madeChanges;\n    }\n    cache.set(realKey, newRealValue);\n    return true;\n}\nfunction isDataProcessed(dataId, field, processedData) {\n    if (!processedData) {\n        return false;\n    }\n    if (processedData[dataId]) {\n        if (processedData[dataId].indexOf(field) >= 0) {\n            return true;\n        }\n        else {\n            processedData[dataId].push(field);\n        }\n    }\n    else {\n        processedData[dataId] = [field];\n    }\n    return false;\n}\n\nvar defaultConfig = {\n    fragmentMatcher: new HeuristicFragmentMatcher(),\n    dataIdFromObject: defaultDataIdFromObject,\n    addTypename: true,\n    resultCaching: true,\n};\nfunction defaultDataIdFromObject(result) {\n    if (result.__typename) {\n        if (result.id !== undefined) {\n            return result.__typename + \":\" + result.id;\n        }\n        if (result._id !== undefined) {\n            return result.__typename + \":\" + result._id;\n        }\n    }\n    return null;\n}\nvar hasOwn$1 = Object.prototype.hasOwnProperty;\nvar OptimisticCacheLayer = (function (_super) {\n    __extends(OptimisticCacheLayer, _super);\n    function OptimisticCacheLayer(optimisticId, parent, transaction) {\n        var _this = _super.call(this, Object.create(null)) || this;\n        _this.optimisticId = optimisticId;\n        _this.parent = parent;\n        _this.transaction = transaction;\n        return _this;\n    }\n    OptimisticCacheLayer.prototype.toObject = function () {\n        return __assign({}, this.parent.toObject(), this.data);\n    };\n    OptimisticCacheLayer.prototype.get = function (dataId) {\n        return hasOwn$1.call(this.data, dataId)\n            ? this.data[dataId]\n            : this.parent.get(dataId);\n    };\n    return OptimisticCacheLayer;\n}(ObjectCache));\nvar InMemoryCache = (function (_super) {\n    __extends(InMemoryCache, _super);\n    function InMemoryCache(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this) || this;\n        _this.watches = new Set();\n        _this.typenameDocumentCache = new Map();\n        _this.cacheKeyRoot = new CacheKeyNode();\n        _this.silenceBroadcast = false;\n        _this.config = __assign({}, defaultConfig, config);\n        if (_this.config.customResolvers) {\n            process.env.NODE_ENV === \"production\" || invariant.warn('customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.customResolvers;\n        }\n        if (_this.config.cacheResolvers) {\n            process.env.NODE_ENV === \"production\" || invariant.warn('cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.cacheResolvers;\n        }\n        _this.addTypename = _this.config.addTypename;\n        _this.data = _this.config.resultCaching\n            ? new DepTrackingCache()\n            : new ObjectCache();\n        _this.optimisticData = _this.data;\n        _this.storeReader = new StoreReader(_this.cacheKeyRoot);\n        _this.storeWriter = new StoreWriter();\n        var cache = _this;\n        var maybeBroadcastWatch = cache.maybeBroadcastWatch;\n        _this.maybeBroadcastWatch = wrap$1(function (c) {\n            return maybeBroadcastWatch.call(_this, c);\n        }, {\n            makeCacheKey: function (c) {\n                if (c.optimistic) {\n                    return;\n                }\n                if (c.previousResult) {\n                    return;\n                }\n                if (cache.data instanceof DepTrackingCache) {\n                    return cache.cacheKeyRoot.lookup(c.query, JSON.stringify(c.variables));\n                }\n            }\n        });\n        return _this;\n    }\n    InMemoryCache.prototype.restore = function (data) {\n        if (data)\n            this.data.replace(data);\n        return this;\n    };\n    InMemoryCache.prototype.extract = function (optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return (optimistic ? this.optimisticData : this.data).toObject();\n    };\n    InMemoryCache.prototype.read = function (options) {\n        if (typeof options.rootId === 'string' &&\n            typeof this.data.get(options.rootId) === 'undefined') {\n            return null;\n        }\n        return this.storeReader.readQueryFromStore({\n            store: options.optimistic ? this.optimisticData : this.data,\n            query: this.transformDocument(options.query),\n            variables: options.variables,\n            rootId: options.rootId,\n            fragmentMatcherFunction: this.config.fragmentMatcher.match,\n            previousResult: options.previousResult,\n            config: this.config,\n        });\n    };\n    InMemoryCache.prototype.write = function (write) {\n        this.storeWriter.writeResultToStore({\n            dataId: write.dataId,\n            result: write.result,\n            variables: write.variables,\n            document: this.transformDocument(write.query),\n            store: this.data,\n            dataIdFromObject: this.config.dataIdFromObject,\n            fragmentMatcherFunction: this.config.fragmentMatcher.match,\n        });\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.diff = function (query) {\n        return this.storeReader.diffQueryAgainstStore({\n            store: query.optimistic ? this.optimisticData : this.data,\n            query: this.transformDocument(query.query),\n            variables: query.variables,\n            returnPartialData: query.returnPartialData,\n            previousResult: query.previousResult,\n            fragmentMatcherFunction: this.config.fragmentMatcher.match,\n            config: this.config,\n        });\n    };\n    InMemoryCache.prototype.watch = function (watch) {\n        var _this = this;\n        this.watches.add(watch);\n        return function () {\n            _this.watches.delete(watch);\n        };\n    };\n    InMemoryCache.prototype.evict = function (query) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError() : new InvariantError(\"eviction is not implemented on InMemory Cache\");\n    };\n    InMemoryCache.prototype.reset = function () {\n        this.data.clear();\n        this.broadcastWatches();\n        return Promise.resolve();\n    };\n    InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n        var toReapply = [];\n        var removedCount = 0;\n        var layer = this.optimisticData;\n        while (layer instanceof OptimisticCacheLayer) {\n            if (layer.optimisticId === idToRemove) {\n                ++removedCount;\n            }\n            else {\n                toReapply.push(layer);\n            }\n            layer = layer.parent;\n        }\n        if (removedCount > 0) {\n            this.optimisticData = layer;\n            while (toReapply.length > 0) {\n                var layer_1 = toReapply.pop();\n                this.performTransaction(layer_1.transaction, layer_1.optimisticId);\n            }\n            this.broadcastWatches();\n        }\n    };\n    InMemoryCache.prototype.performTransaction = function (transaction, optimisticId) {\n        var _a = this, data = _a.data, silenceBroadcast = _a.silenceBroadcast;\n        this.silenceBroadcast = true;\n        if (typeof optimisticId === 'string') {\n            this.data = this.optimisticData = new OptimisticCacheLayer(optimisticId, this.optimisticData, transaction);\n        }\n        try {\n            transaction(this);\n        }\n        finally {\n            this.silenceBroadcast = silenceBroadcast;\n            this.data = data;\n        }\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.recordOptimisticTransaction = function (transaction, id) {\n        return this.performTransaction(transaction, id);\n    };\n    InMemoryCache.prototype.transformDocument = function (document) {\n        if (this.addTypename) {\n            var result = this.typenameDocumentCache.get(document);\n            if (!result) {\n                result = addTypenameToDocument(document);\n                this.typenameDocumentCache.set(document, result);\n                this.typenameDocumentCache.set(result, result);\n            }\n            return result;\n        }\n        return document;\n    };\n    InMemoryCache.prototype.broadcastWatches = function () {\n        var _this = this;\n        if (!this.silenceBroadcast) {\n            this.watches.forEach(function (c) { return _this.maybeBroadcastWatch(c); });\n        }\n    };\n    InMemoryCache.prototype.maybeBroadcastWatch = function (c) {\n        c.callback(this.diff({\n            query: c.query,\n            variables: c.variables,\n            previousResult: c.previousResult && c.previousResult(),\n            optimistic: c.optimistic,\n        }));\n    };\n    return InMemoryCache;\n}(ApolloCache));\n\nexport { InMemoryCache, defaultDataIdFromObject, StoreReader, assertIdValue, WriteError, enhanceErrorWithDocument, StoreWriter, HeuristicFragmentMatcher, IntrospectionFragmentMatcher, ObjectCache, defaultNormalizedCacheFactory$1 as defaultNormalizedCacheFactory };\n//# sourceMappingURL=bundle.esm.js.map\n"],"sourceRoot":""}