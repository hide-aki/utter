{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/react-apollo/react-apollo.esm.js","webpack:////var/www/html/utter/packages/connector/node_modules/react-apollo/react-apollo.browser.umd.js"],"names":["__webpack_require__","d","__webpack_exports__","ApolloProvider","Query","Mutation","graphql","withApollo","compose","prop_types__WEBPACK_IMPORTED_MODULE_0__","ts_invariant__WEBPACK_IMPORTED_MODULE_1__","tslib__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","apollo_client__WEBPACK_IMPORTED_MODULE_4__","hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_5__","hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_5___default","n","ApolloConsumer","props","context","Object","client","children","contextTypes","isRequired","propTypes","DocumentType","_super","_this","call","this","operations","Map","__operations_cache__","prototype","getChildContext","render","childContextTypes","cache","parser","document","variables","type","cached","get","kind","fragments","definitions","filter","x","queries","operation","mutations","subscriptions","length","Subscription","definition","variableDefinitions","payload","name","value","set","getClient","hasOwnProperty","is","y","isObject","obj","shallowEqual","objA","objB","keys","every","key","previousData","hasMounted","lastResult","startQuerySubscription","justMounted","queryObservable","getLastResult","querySubscription","initial","getQueryResult","subscribe","next","_a","loading","networkStatus","data","undefined","updateCurrentData","error","resubscribeToQuery","removeQuerySubscription","unsubscribe","forceUpdate","observable","create","assign","refetch","bind","fetchMore","updateQuery","startPolling","stopPolling","subscribeToMore","skip","currentResult","partial","errors","graphQLErrors","fetchPolicy","options","partialRefetch","oldRefetch_1","args","Promise","r","f","refetcherQueue","resolve","reject","initializeQueryObservable","fetchData","ssr","opts","displayName","onCompleted","onError","watchQuery","renderPromises","registerSSRObservable","result","componentDidMount","then","catch","componentWillReceiveProps","nextProps","nextContext","nextClient","query","componentWillUnmount","componentDidUpdate","finish","addQueryPromise","extractOptsFromProps","metadata","reactComponent","setOperations","getSSRObservable","setOptions","lastError","getLastError","resetLastResults","notifyOnNetworkStatusChange","pollInterval","initialState","called","runMutation","onMutationStart","mutationId","generateNewMutationId","mutate","response","onMutationCompleted","e","onMutationError","mutation","optimisticResponse","update","_b","_c","awaitRefetchQueries","mutateOptions","refetchQueries","Array","isArray","map","mutateVariables","state","ignoreResults","setState","callOncomplete","isMostRecentMutation","callOnError","mostRecentMutationId","verifyDocumentIsMutation","initialize","subscription","startSubscription","updateError","complete","completeSubscription","getInitialState","onSubscriptionData","subscriptionData","onSubscriptionComplete","endSubscription","shouldResubscribe","shouldNotResubscribe","renderFn","defaultMapPropsToOptions","defaultMapPropsToSkip","getDisplayName","WrappedComponent","calculateVariablesFromProps","_i","variable","variableName","variableProp","GraphQLBase","withRef","setWrappedInstance","getWrappedInstance","wrappedInstance","ref","operationOptions","alias","mapPropsToOptions","graphQLDisplayName","GraphQL","apply","arguments","_result","childProps","newResult","ownProps","withMutation","lastResultProps","mapPropsToSkip","resubscribe","shouldSkip","withSubscription","warnUnhandledError","withQuery","withDisplayName","getDisplayName$1","WithApollo","RenderPromises","queryPromises","queryInfoTrie","queryInstance","lookupQueryInfo","seen","hasPromises","size","consumeAndAwaitPromises","promises","forEach","promise","push","clear","all","varMap","has","variablesString","JSON","stringify","info","funcs","functions","reverse","firstFunction","restFunctions","slice","fnc","exports","React","PropTypes","apolloClient","hoistNonReactStatics","extendStatics","__extends","b","setPrototypeOf","__proto__","p","__","constructor","__assign","t","s","i","Trie","added","node","child","add","queryGraveyard","getMarkupFromTree","tree","renderFunction","renderToStaticMarkup","RenderPromisesProvider","object","Component","any","process","html","createElement","invariant","func","__extends$1","invariant$1","invariant$2","invariant$3","__extends$2","__assign$1","__rest","indexOf","getOwnPropertySymbols","invariant$4","ApolloError","NetworkStatus","errorPolicy","reduce","acc","string","bool","number","__extends$3","__assign$2","invariant$5","shallowEqual$1","oneOfType","arrayOf","__extends$4","shallowEqual$2","__extends$5","invariant$7","wrapperName","__extends$6","__assign$3","__rest$1","__extends$7","__assign$4","__extends$8","__assign$5","__rest$2","__extends$9","__assign$6","invariant$8","getDataFromTree","walkTree","element","visitor","newContext","item","isReactElement","Comp","defaultProps","attributes","getProps","childContext_1","isReactComponent","isComponentClass","instance_1","defineProperty","newState","getDerivedStateFromProps","UNSAFE_componentWillMount","componentWillMount","_context","Consumer","_currentValue","Provider","Children","factory"],"mappings":"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","file":"bundle.npm.react-apollo.86786cb6c238ecb815d5.js","sourcesContent":["import { object, func, node, string, bool, number, oneOfType, arrayOf, any } from 'prop-types';\nimport { invariant } from 'ts-invariant';\nimport { __extends, __assign, __rest } from 'tslib';\nimport { Component, createElement } from 'react';\nimport { ApolloError, NetworkStatus } from 'apollo-client';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nvar ApolloConsumer = function (props, context) {\n    process.env.NODE_ENV === \"production\" ? invariant(!!context.client) : invariant(!!context.client, \"Could not find \\\"client\\\" in the context of ApolloConsumer. Wrap the root component in an <ApolloProvider>\");\n    return props.children(context.client);\n};\nApolloConsumer.contextTypes = {\n    client: object.isRequired,\n};\nApolloConsumer.propTypes = {\n    children: func.isRequired,\n};\n\nvar ApolloProvider = (function (_super) {\n    __extends(ApolloProvider, _super);\n    function ApolloProvider(props, context) {\n        var _this = _super.call(this, props, context) || this;\n        _this.operations = new Map();\n        process.env.NODE_ENV === \"production\" ? invariant(props.client) : invariant(props.client, 'ApolloProvider was not passed a client instance. Make ' +\n            'sure you pass in your client via the \"client\" prop.');\n        if (!props.client.__operations_cache__) {\n            props.client.__operations_cache__ = _this.operations;\n        }\n        return _this;\n    }\n    ApolloProvider.prototype.getChildContext = function () {\n        return {\n            client: this.props.client,\n            operations: this.props.client.__operations_cache__,\n        };\n    };\n    ApolloProvider.prototype.render = function () {\n        return this.props.children;\n    };\n    ApolloProvider.propTypes = {\n        client: object.isRequired,\n        children: node.isRequired,\n    };\n    ApolloProvider.childContextTypes = {\n        client: object.isRequired,\n        operations: object,\n    };\n    return ApolloProvider;\n}(Component));\n\nvar DocumentType;\n(function (DocumentType) {\n    DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n    DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n    DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n})(DocumentType || (DocumentType = {}));\nvar cache = new Map();\nfunction parser(document) {\n    var cached = cache.get(document);\n    if (cached)\n        return cached;\n    var variables, type, name;\n    process.env.NODE_ENV === \"production\" ? invariant(!!document && !!document.kind) : invariant(!!document && !!document.kind, \"Argument of \" + document + \" passed to parser was not a valid GraphQL \" +\n        \"DocumentNode. You may need to use 'graphql-tag' or another method \" +\n        \"to convert your operation into a document\");\n    var fragments = document.definitions.filter(function (x) { return x.kind === 'FragmentDefinition'; });\n    var queries = document.definitions.filter(function (x) { return x.kind === 'OperationDefinition' && x.operation === 'query'; });\n    var mutations = document.definitions.filter(function (x) { return x.kind === 'OperationDefinition' && x.operation === 'mutation'; });\n    var subscriptions = document.definitions.filter(function (x) { return x.kind === 'OperationDefinition' && x.operation === 'subscription'; });\n    process.env.NODE_ENV === \"production\" ? invariant(\n        !fragments.length || (queries.length || mutations.length || subscriptions.length)\n    ) : invariant(!fragments.length || (queries.length || mutations.length || subscriptions.length), \"Passing only a fragment to 'graphql' is not yet supported. \" +\n        \"You must include a query, subscription or mutation as well\");\n    process.env.NODE_ENV === \"production\" ? invariant(queries.length + mutations.length + subscriptions.length <= 1) : invariant(queries.length + mutations.length + subscriptions.length <= 1, \"react-apollo only supports a query, subscription, or a mutation per HOC. \" +\n        (document + \" had \" + queries.length + \" queries, \" + subscriptions.length + \" \") +\n        (\"subscriptions and \" + mutations.length + \" mutations. \") +\n        \"You can use 'compose' to join multiple operation types to a component\");\n    type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n    if (!queries.length && !mutations.length)\n        type = DocumentType.Subscription;\n    var definitions = queries.length ? queries : mutations.length ? mutations : subscriptions;\n    process.env.NODE_ENV === \"production\" ? invariant(definitions.length === 1) : invariant(definitions.length === 1, \"react-apollo only supports one definition per HOC. \" + document + \" had \" +\n        (definitions.length + \" definitions. \") +\n        \"You can use 'compose' to join multiple operation types to a component\");\n    var definition = definitions[0];\n    variables = definition.variableDefinitions || [];\n    if (definition.name && definition.name.kind === 'Name') {\n        name = definition.name.value;\n    }\n    else {\n        name = 'data';\n    }\n    var payload = { name: name, type: type, variables: variables };\n    cache.set(document, payload);\n    return payload;\n}\n\nfunction getClient(props, context) {\n    var client = props.client || context.client;\n    process.env.NODE_ENV === \"production\" ? invariant(!!client) : invariant(!!client, 'Could not find \"client\" in the context or passed in as a prop. ' +\n        'Wrap the root component in an <ApolloProvider>, or pass an ' +\n        'ApolloClient instance in via props.');\n    return client;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction is(x, y) {\n    if (x === y) {\n        return x !== 0 || y !== 0 || 1 / x === 1 / y;\n    }\n    return x !== x && y !== y;\n}\nfunction isObject(obj) {\n    return obj !== null && typeof obj === \"object\";\n}\nfunction shallowEqual(objA, objB) {\n    if (is(objA, objB)) {\n        return true;\n    }\n    if (!isObject(objA) || !isObject(objB)) {\n        return false;\n    }\n    var keys = Object.keys(objA);\n    if (keys.length !== Object.keys(objB).length) {\n        return false;\n    }\n    return keys.every(function (key) { return hasOwnProperty.call(objB, key) && is(objA[key], objB[key]); });\n}\n\nfunction observableQueryFields(observable) {\n    var fields = {\n        variables: observable.variables,\n        refetch: observable.refetch.bind(observable),\n        fetchMore: observable.fetchMore.bind(observable),\n        updateQuery: observable.updateQuery.bind(observable),\n        startPolling: observable.startPolling.bind(observable),\n        stopPolling: observable.stopPolling.bind(observable),\n        subscribeToMore: observable.subscribeToMore.bind(observable),\n    };\n    return fields;\n}\nvar Query = (function (_super) {\n    __extends(Query, _super);\n    function Query(props, context) {\n        var _this = _super.call(this, props, context) || this;\n        _this.previousData = {};\n        _this.hasMounted = false;\n        _this.lastResult = null;\n        _this.startQuerySubscription = function (justMounted) {\n            if (justMounted === void 0) { justMounted = false; }\n            if (!justMounted) {\n                _this.lastResult = _this.queryObservable.getLastResult();\n            }\n            if (_this.querySubscription)\n                return;\n            var initial = _this.getQueryResult();\n            _this.querySubscription = _this.queryObservable.subscribe({\n                next: function (_a) {\n                    var loading = _a.loading, networkStatus = _a.networkStatus, data = _a.data;\n                    if (initial && initial.networkStatus === 7 && shallowEqual(initial.data, data)) {\n                        initial = undefined;\n                        return;\n                    }\n                    if (_this.lastResult &&\n                        _this.lastResult.loading === loading &&\n                        _this.lastResult.networkStatus === networkStatus &&\n                        shallowEqual(_this.lastResult.data, data)) {\n                        return;\n                    }\n                    initial = undefined;\n                    _this.updateCurrentData();\n                },\n                error: function (error) {\n                    _this.resubscribeToQuery();\n                    if (!error.hasOwnProperty('graphQLErrors'))\n                        throw error;\n                    _this.updateCurrentData();\n                },\n            });\n        };\n        _this.removeQuerySubscription = function () {\n            if (_this.querySubscription) {\n                _this.lastResult = _this.queryObservable.getLastResult();\n                _this.querySubscription.unsubscribe();\n                delete _this.querySubscription;\n            }\n        };\n        _this.updateCurrentData = function () {\n            if (_this.hasMounted)\n                _this.forceUpdate();\n        };\n        _this.getQueryResult = function () {\n            var data = { data: Object.create(null) };\n            Object.assign(data, observableQueryFields(_this.queryObservable));\n            if (_this.props.skip) {\n                data = __assign({}, data, { data: undefined, error: undefined, loading: false });\n            }\n            else {\n                var currentResult = _this.queryObservable.currentResult();\n                var loading = currentResult.loading, partial = currentResult.partial, networkStatus = currentResult.networkStatus, errors = currentResult.errors;\n                var error = currentResult.error;\n                if (errors && errors.length > 0) {\n                    error = new ApolloError({ graphQLErrors: errors });\n                }\n                Object.assign(data, { loading: loading, networkStatus: networkStatus, error: error });\n                if (loading) {\n                    Object.assign(data.data, _this.previousData, currentResult.data);\n                }\n                else if (error) {\n                    Object.assign(data, {\n                        data: (_this.queryObservable.getLastResult() || {}).data,\n                    });\n                }\n                else {\n                    var fetchPolicy = _this.queryObservable.options.fetchPolicy;\n                    var partialRefetch = _this.props.partialRefetch;\n                    if (partialRefetch &&\n                        Object.keys(currentResult.data).length === 0 &&\n                        partial &&\n                        fetchPolicy !== 'cache-only') {\n                        Object.assign(data, { loading: true, networkStatus: NetworkStatus.loading });\n                        data.refetch();\n                        return data;\n                    }\n                    Object.assign(data.data, currentResult.data);\n                    _this.previousData = currentResult.data;\n                }\n            }\n            if (!_this.querySubscription) {\n                var oldRefetch_1 = data.refetch;\n                data.refetch = function (args) {\n                    if (_this.querySubscription) {\n                        return oldRefetch_1(args);\n                    }\n                    else {\n                        return new Promise(function (r, f) {\n                            _this.refetcherQueue = { resolve: r, reject: f, args: args };\n                        });\n                    }\n                };\n            }\n            data.client = _this.client;\n            return data;\n        };\n        _this.client = getClient(props, context);\n        _this.initializeQueryObservable(props);\n        return _this;\n    }\n    Query.prototype.fetchData = function () {\n        if (this.props.skip)\n            return false;\n        var _a = this.props, children = _a.children, ssr = _a.ssr, displayName = _a.displayName, skip = _a.skip, client = _a.client, onCompleted = _a.onCompleted, onError = _a.onError, partialRefetch = _a.partialRefetch, opts = __rest(_a, [\"children\", \"ssr\", \"displayName\", \"skip\", \"client\", \"onCompleted\", \"onError\", \"partialRefetch\"]);\n        var fetchPolicy = opts.fetchPolicy;\n        if (ssr === false)\n            return false;\n        if (fetchPolicy === 'network-only' || fetchPolicy === 'cache-and-network') {\n            fetchPolicy = 'cache-first';\n        }\n        var observable = this.client.watchQuery(__assign({}, opts, { fetchPolicy: fetchPolicy }));\n        if (this.context && this.context.renderPromises) {\n            this.context.renderPromises.registerSSRObservable(this, observable);\n        }\n        var result = this.queryObservable.currentResult();\n        return result.loading ? observable.result() : false;\n    };\n    Query.prototype.componentDidMount = function () {\n        this.hasMounted = true;\n        if (this.props.skip)\n            return;\n        this.startQuerySubscription(true);\n        if (this.refetcherQueue) {\n            var _a = this.refetcherQueue, args = _a.args, resolve = _a.resolve, reject = _a.reject;\n            this.queryObservable.refetch(args)\n                .then(resolve)\n                .catch(reject);\n        }\n    };\n    Query.prototype.componentWillReceiveProps = function (nextProps, nextContext) {\n        if (nextProps.skip && !this.props.skip) {\n            this.removeQuerySubscription();\n            return;\n        }\n        var nextClient = getClient(nextProps, nextContext);\n        if (shallowEqual(this.props, nextProps) && this.client === nextClient) {\n            return;\n        }\n        if (this.client !== nextClient) {\n            this.client = nextClient;\n            this.removeQuerySubscription();\n            this.queryObservable = null;\n            this.previousData = {};\n            this.updateQuery(nextProps);\n        }\n        if (this.props.query !== nextProps.query) {\n            this.removeQuerySubscription();\n        }\n        this.updateQuery(nextProps);\n        if (nextProps.skip)\n            return;\n        this.startQuerySubscription();\n    };\n    Query.prototype.componentWillUnmount = function () {\n        this.removeQuerySubscription();\n        this.hasMounted = false;\n    };\n    Query.prototype.componentDidUpdate = function () {\n        var _a = this.props, onCompleted = _a.onCompleted, onError = _a.onError;\n        if (onCompleted || onError) {\n            var currentResult = this.queryObservable.currentResult();\n            var loading = currentResult.loading, error = currentResult.error, data = currentResult.data;\n            if (onCompleted && !loading && !error) {\n                onCompleted(data);\n            }\n            else if (onError && !loading && error) {\n                onError(error);\n            }\n        }\n    };\n    Query.prototype.render = function () {\n        var _this = this;\n        var context = this.context;\n        var finish = function () { return _this.props.children(_this.getQueryResult()); };\n        if (context && context.renderPromises) {\n            return context.renderPromises.addQueryPromise(this, finish);\n        }\n        return finish();\n    };\n    Query.prototype.extractOptsFromProps = function (props) {\n        this.operation = parser(props.query);\n        process.env.NODE_ENV === \"production\" ? invariant(this.operation.type === DocumentType.Query) : invariant(this.operation.type === DocumentType.Query, \"The <Query /> component requires a graphql query, but got a \" + (this.operation.type === DocumentType.Mutation ? 'mutation' : 'subscription') + \".\");\n        var displayName = props.displayName || 'Query';\n        return __assign({}, props, { displayName: displayName, context: props.context || {}, metadata: { reactComponent: { displayName: displayName } } });\n    };\n    Query.prototype.initializeQueryObservable = function (props) {\n        var opts = this.extractOptsFromProps(props);\n        this.setOperations(opts);\n        if (this.context && this.context.renderPromises) {\n            this.queryObservable = this.context.renderPromises.getSSRObservable(this);\n        }\n        if (!this.queryObservable) {\n            this.queryObservable = this.client.watchQuery(opts);\n        }\n    };\n    Query.prototype.setOperations = function (props) {\n        if (this.context.operations) {\n            this.context.operations.set(this.operation.name, {\n                query: props.query,\n                variables: props.variables,\n            });\n        }\n    };\n    Query.prototype.updateQuery = function (props) {\n        if (!this.queryObservable) {\n            this.initializeQueryObservable(props);\n        }\n        else {\n            this.setOperations(props);\n        }\n        this.queryObservable.setOptions(this.extractOptsFromProps(props))\n            .catch(function () { return null; });\n    };\n    Query.prototype.resubscribeToQuery = function () {\n        this.removeQuerySubscription();\n        var lastError = this.queryObservable.getLastError();\n        var lastResult = this.lastResult;\n        this.queryObservable.resetLastResults();\n        this.startQuerySubscription();\n        Object.assign(this.queryObservable, { lastError: lastError, lastResult: lastResult });\n    };\n    Query.contextTypes = {\n        client: object,\n        operations: object,\n        renderPromises: object,\n    };\n    Query.propTypes = {\n        client: object,\n        children: func.isRequired,\n        fetchPolicy: string,\n        notifyOnNetworkStatusChange: bool,\n        onCompleted: func,\n        onError: func,\n        pollInterval: number,\n        query: object.isRequired,\n        variables: object,\n        ssr: bool,\n        partialRefetch: bool,\n    };\n    return Query;\n}(Component));\n\nvar initialState = {\n    loading: false,\n    called: false,\n    error: undefined,\n    data: undefined,\n};\nvar Mutation = (function (_super) {\n    __extends(Mutation, _super);\n    function Mutation(props, context) {\n        var _this = _super.call(this, props, context) || this;\n        _this.hasMounted = false;\n        _this.runMutation = function (options) {\n            if (options === void 0) { options = {}; }\n            _this.onMutationStart();\n            var mutationId = _this.generateNewMutationId();\n            return _this.mutate(options)\n                .then(function (response) {\n                _this.onMutationCompleted(response, mutationId);\n                return response;\n            })\n                .catch(function (e) {\n                _this.onMutationError(e, mutationId);\n                if (!_this.props.onError)\n                    throw e;\n            });\n        };\n        _this.mutate = function (options) {\n            var _a = _this.props, mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, update = _a.update, _b = _a.context, context = _b === void 0 ? {} : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, fetchPolicy = _a.fetchPolicy;\n            var mutateOptions = __assign({}, options);\n            var refetchQueries = mutateOptions.refetchQueries || _this.props.refetchQueries;\n            if (refetchQueries && refetchQueries.length && Array.isArray(refetchQueries)) {\n                refetchQueries = refetchQueries.map(function (x) {\n                    if (typeof x === 'string' && _this.context.operations)\n                        return _this.context.operations.get(x) || x;\n                    return x;\n                });\n                delete mutateOptions.refetchQueries;\n            }\n            var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n            delete mutateOptions.variables;\n            return _this.client.mutate(__assign({ mutation: mutation,\n                optimisticResponse: optimisticResponse,\n                refetchQueries: refetchQueries,\n                awaitRefetchQueries: awaitRefetchQueries,\n                update: update,\n                context: context,\n                fetchPolicy: fetchPolicy, variables: mutateVariables }, mutateOptions));\n        };\n        _this.onMutationStart = function () {\n            if (!_this.state.loading && !_this.props.ignoreResults) {\n                _this.setState({\n                    loading: true,\n                    error: undefined,\n                    data: undefined,\n                    called: true,\n                });\n            }\n        };\n        _this.onMutationCompleted = function (response, mutationId) {\n            var _a = _this.props, onCompleted = _a.onCompleted, ignoreResults = _a.ignoreResults;\n            var data = response.data, errors = response.errors;\n            var error = errors && errors.length > 0 ? new ApolloError({ graphQLErrors: errors }) : undefined;\n            var callOncomplete = function () { return (onCompleted ? onCompleted(data) : null); };\n            if (_this.hasMounted && _this.isMostRecentMutation(mutationId) && !ignoreResults) {\n                _this.setState({ loading: false, data: data, error: error }, callOncomplete);\n            }\n            else {\n                callOncomplete();\n            }\n        };\n        _this.onMutationError = function (error, mutationId) {\n            var onError = _this.props.onError;\n            var callOnError = function () { return (onError ? onError(error) : null); };\n            if (_this.hasMounted && _this.isMostRecentMutation(mutationId)) {\n                _this.setState({ loading: false, error: error }, callOnError);\n            }\n            else {\n                callOnError();\n            }\n        };\n        _this.generateNewMutationId = function () {\n            _this.mostRecentMutationId = _this.mostRecentMutationId + 1;\n            return _this.mostRecentMutationId;\n        };\n        _this.isMostRecentMutation = function (mutationId) {\n            return _this.mostRecentMutationId === mutationId;\n        };\n        _this.verifyDocumentIsMutation = function (mutation) {\n            var operation = parser(mutation);\n            process.env.NODE_ENV === \"production\" ? invariant(operation.type === DocumentType.Mutation) : invariant(operation.type === DocumentType.Mutation, \"The <Mutation /> component requires a graphql mutation, but got a \" + (operation.type === DocumentType.Query ? 'query' : 'subscription') + \".\");\n        };\n        _this.client = getClient(props, context);\n        _this.verifyDocumentIsMutation(props.mutation);\n        _this.mostRecentMutationId = 0;\n        _this.state = initialState;\n        return _this;\n    }\n    Mutation.prototype.componentDidMount = function () {\n        this.hasMounted = true;\n    };\n    Mutation.prototype.componentWillUnmount = function () {\n        this.hasMounted = false;\n    };\n    Mutation.prototype.componentWillReceiveProps = function (nextProps, nextContext) {\n        var nextClient = getClient(nextProps, nextContext);\n        if (shallowEqual(this.props, nextProps) && this.client === nextClient) {\n            return;\n        }\n        if (this.props.mutation !== nextProps.mutation) {\n            this.verifyDocumentIsMutation(nextProps.mutation);\n        }\n        if (this.client !== nextClient) {\n            this.client = nextClient;\n            this.setState(initialState);\n        }\n    };\n    Mutation.prototype.render = function () {\n        var children = this.props.children;\n        var _a = this.state, loading = _a.loading, data = _a.data, error = _a.error, called = _a.called;\n        var result = {\n            called: called,\n            loading: loading,\n            data: data,\n            error: error,\n            client: this.client,\n        };\n        return children(this.runMutation, result);\n    };\n    Mutation.contextTypes = {\n        client: object,\n        operations: object,\n    };\n    Mutation.propTypes = {\n        mutation: object.isRequired,\n        variables: object,\n        optimisticResponse: object,\n        refetchQueries: oneOfType([\n            arrayOf(oneOfType([string, object])),\n            func,\n        ]),\n        awaitRefetchQueries: bool,\n        update: func,\n        children: func.isRequired,\n        onCompleted: func,\n        onError: func,\n        fetchPolicy: string,\n    };\n    return Mutation;\n}(Component));\n\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(props, context) {\n        var _this = _super.call(this, props, context) || this;\n        _this.initialize = function (props) {\n            if (_this.queryObservable)\n                return;\n            _this.queryObservable = _this.client.subscribe({\n                query: props.subscription,\n                variables: props.variables,\n                fetchPolicy: props.fetchPolicy,\n            });\n        };\n        _this.startSubscription = function () {\n            if (_this.querySubscription)\n                return;\n            _this.querySubscription = _this.queryObservable.subscribe({\n                next: _this.updateCurrentData,\n                error: _this.updateError,\n                complete: _this.completeSubscription\n            });\n        };\n        _this.getInitialState = function () { return ({\n            loading: true,\n            error: undefined,\n            data: undefined,\n        }); };\n        _this.updateCurrentData = function (result) {\n            var _a = _this, client = _a.client, onSubscriptionData = _a.props.onSubscriptionData;\n            if (onSubscriptionData)\n                onSubscriptionData({ client: client, subscriptionData: result });\n            _this.setState({\n                data: result.data,\n                loading: false,\n                error: undefined,\n            });\n        };\n        _this.updateError = function (error) {\n            _this.setState({\n                error: error,\n                loading: false,\n            });\n        };\n        _this.completeSubscription = function () {\n            var onSubscriptionComplete = _this.props.onSubscriptionComplete;\n            if (onSubscriptionComplete)\n                onSubscriptionComplete();\n            _this.endSubscription();\n        };\n        _this.endSubscription = function () {\n            if (_this.querySubscription) {\n                _this.querySubscription.unsubscribe();\n                delete _this.querySubscription;\n            }\n        };\n        _this.client = getClient(props, context);\n        _this.initialize(props);\n        _this.state = _this.getInitialState();\n        return _this;\n    }\n    Subscription.prototype.componentDidMount = function () {\n        this.startSubscription();\n    };\n    Subscription.prototype.componentWillReceiveProps = function (nextProps, nextContext) {\n        var nextClient = getClient(nextProps, nextContext);\n        if (shallowEqual(this.props.variables, nextProps.variables) &&\n            this.client === nextClient &&\n            this.props.subscription === nextProps.subscription) {\n            return;\n        }\n        var shouldResubscribe = nextProps.shouldResubscribe;\n        if (typeof shouldResubscribe === 'function') {\n            shouldResubscribe = !!shouldResubscribe(this.props, nextProps);\n        }\n        var shouldNotResubscribe = shouldResubscribe === false;\n        if (this.client !== nextClient) {\n            this.client = nextClient;\n        }\n        if (!shouldNotResubscribe) {\n            this.endSubscription();\n            delete this.queryObservable;\n            this.initialize(nextProps);\n            this.startSubscription();\n            this.setState(this.getInitialState());\n            return;\n        }\n        this.initialize(nextProps);\n        this.startSubscription();\n    };\n    Subscription.prototype.componentWillUnmount = function () {\n        this.endSubscription();\n    };\n    Subscription.prototype.render = function () {\n        var renderFn = this.props.children;\n        if (!renderFn)\n            return null;\n        var result = Object.assign({}, this.state, {\n            variables: this.props.variables,\n        });\n        return renderFn(result);\n    };\n    Subscription.contextTypes = {\n        client: object,\n    };\n    Subscription.propTypes = {\n        subscription: object.isRequired,\n        variables: object,\n        children: func,\n        onSubscriptionData: func,\n        onSubscriptionComplete: func,\n        shouldResubscribe: oneOfType([func, bool]),\n    };\n    return Subscription;\n}(Component));\n\nvar defaultMapPropsToOptions = function () { return ({}); };\nvar defaultMapPropsToSkip = function () { return false; };\nfunction getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\nfunction calculateVariablesFromProps(operation, props) {\n    var variables = {};\n    for (var _i = 0, _a = operation.variables; _i < _a.length; _i++) {\n        var _b = _a[_i], variable = _b.variable, type = _b.type;\n        if (!variable.name || !variable.name.value)\n            continue;\n        var variableName = variable.name.value;\n        var variableProp = props[variableName];\n        if (typeof variableProp !== 'undefined') {\n            variables[variableName] = variableProp;\n            continue;\n        }\n        if (type.kind !== 'NonNullType') {\n            variables[variableName] = null;\n        }\n    }\n    return variables;\n}\nvar GraphQLBase = (function (_super) {\n    __extends(GraphQLBase, _super);\n    function GraphQLBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this.withRef = false;\n        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n        return _this;\n    }\n    GraphQLBase.prototype.getWrappedInstance = function () {\n        process.env.NODE_ENV === \"production\" ? invariant(this.withRef) : invariant(this.withRef, \"To access the wrapped instance, you need to specify \" + \"{ withRef: true } in the options\");\n        return this.wrappedInstance;\n    };\n    GraphQLBase.prototype.setWrappedInstance = function (ref) {\n        this.wrappedInstance = ref;\n    };\n    return GraphQLBase;\n}(Component));\n\nfunction withQuery(document, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    var operation = parser(document);\n    var _a = operationOptions.options, options = _a === void 0 ? defaultMapPropsToOptions : _a, _b = operationOptions.skip, skip = _b === void 0 ? defaultMapPropsToSkip : _b, _c = operationOptions.alias, alias = _c === void 0 ? 'Apollo' : _c;\n    var mapPropsToOptions = options;\n    if (typeof mapPropsToOptions !== 'function') {\n        mapPropsToOptions = function () { return options; };\n    }\n    var mapPropsToSkip = skip;\n    if (typeof mapPropsToSkip !== 'function') {\n        mapPropsToSkip = function () { return skip; };\n    }\n    var lastResultProps;\n    return function (WrappedComponent) {\n        var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n        var GraphQL = (function (_super) {\n            __extends(GraphQL, _super);\n            function GraphQL() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            GraphQL.prototype.render = function () {\n                var _this = this;\n                var props = this.props;\n                var shouldSkip = mapPropsToSkip(props);\n                var opts = shouldSkip ? Object.create(null) : __assign({}, mapPropsToOptions(props));\n                if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n                    opts.variables = calculateVariablesFromProps(operation, props);\n                }\n                return (createElement(Query, __assign({}, opts, { displayName: graphQLDisplayName, skip: shouldSkip, query: document, warnUnhandledError: true }), function (_a) {\n                    var _ = _a.client, data = _a.data, r = __rest(_a, [\"client\", \"data\"]);\n                    var _b, _c;\n                    if (operationOptions.withRef) {\n                        _this.withRef = true;\n                        props = Object.assign({}, props, {\n                            ref: _this.setWrappedInstance,\n                        });\n                    }\n                    if (shouldSkip)\n                        return createElement(WrappedComponent, __assign({}, props));\n                    var result = Object.assign(r, data || {});\n                    var name = operationOptions.name || 'data';\n                    var childProps = (_b = {}, _b[name] = result, _b);\n                    if (operationOptions.props) {\n                        var newResult = (_c = {},\n                            _c[name] = result,\n                            _c.ownProps = props,\n                            _c);\n                        lastResultProps = operationOptions.props(newResult, lastResultProps);\n                        childProps = lastResultProps;\n                    }\n                    return createElement(WrappedComponent, __assign({}, props, childProps));\n                }));\n            };\n            GraphQL.displayName = graphQLDisplayName;\n            GraphQL.WrappedComponent = WrappedComponent;\n            return GraphQL;\n        }(GraphQLBase));\n        return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n    };\n}\n\nfunction withMutation(document, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    var operation = parser(document);\n    var _a = operationOptions.options, options = _a === void 0 ? defaultMapPropsToOptions : _a, _b = operationOptions.alias, alias = _b === void 0 ? 'Apollo' : _b;\n    var mapPropsToOptions = options;\n    if (typeof mapPropsToOptions !== 'function')\n        mapPropsToOptions = function () { return options; };\n    return function (WrappedComponent) {\n        var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n        var GraphQL = (function (_super) {\n            __extends(GraphQL, _super);\n            function GraphQL() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            GraphQL.prototype.render = function () {\n                var props = this.props;\n                var opts = mapPropsToOptions(props);\n                if (operationOptions.withRef) {\n                    this.withRef = true;\n                    props = Object.assign({}, props, {\n                        ref: this.setWrappedInstance,\n                    });\n                }\n                if (!opts.variables && operation.variables.length > 0) {\n                    opts.variables = calculateVariablesFromProps(operation, props);\n                }\n                return (createElement(Mutation, __assign({}, opts, { mutation: document, ignoreResults: true }), function (mutate, _result) {\n                    var _a, _b;\n                    var name = operationOptions.name || 'mutate';\n                    var childProps = (_a = {}, _a[name] = mutate, _a);\n                    if (operationOptions.props) {\n                        var newResult = (_b = {},\n                            _b[name] = mutate,\n                            _b.ownProps = props,\n                            _b);\n                        childProps = operationOptions.props(newResult);\n                    }\n                    return createElement(WrappedComponent, __assign({}, props, childProps));\n                }));\n            };\n            GraphQL.displayName = graphQLDisplayName;\n            GraphQL.WrappedComponent = WrappedComponent;\n            return GraphQL;\n        }(GraphQLBase));\n        return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n    };\n}\n\nfunction withSubscription(document, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    var operation = parser(document);\n    var _a = operationOptions.options, options = _a === void 0 ? defaultMapPropsToOptions : _a, _b = operationOptions.skip, skip = _b === void 0 ? defaultMapPropsToSkip : _b, _c = operationOptions.alias, alias = _c === void 0 ? 'Apollo' : _c, shouldResubscribe = operationOptions.shouldResubscribe;\n    var mapPropsToOptions = options;\n    if (typeof mapPropsToOptions !== 'function')\n        mapPropsToOptions = function () { return options; };\n    var mapPropsToSkip = skip;\n    if (typeof mapPropsToSkip !== 'function')\n        mapPropsToSkip = function () { return skip; };\n    var lastResultProps;\n    return function (WrappedComponent) {\n        var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n        var GraphQL = (function (_super) {\n            __extends(GraphQL, _super);\n            function GraphQL(props) {\n                var _this = _super.call(this, props) || this;\n                _this.state = { resubscribe: false };\n                return _this;\n            }\n            GraphQL.prototype.componentWillReceiveProps = function (nextProps) {\n                if (!shouldResubscribe)\n                    return;\n                this.setState({\n                    resubscribe: shouldResubscribe(this.props, nextProps),\n                });\n            };\n            GraphQL.prototype.render = function () {\n                var _this = this;\n                var props = this.props;\n                var shouldSkip = mapPropsToSkip(props);\n                var opts = shouldSkip ? Object.create(null) : mapPropsToOptions(props);\n                if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n                    opts.variables = calculateVariablesFromProps(operation, props);\n                }\n                return (createElement(Subscription, __assign({}, opts, { displayName: graphQLDisplayName, skip: shouldSkip, subscription: document, shouldResubscribe: this.state.resubscribe }), function (_a) {\n                    var data = _a.data, r = __rest(_a, [\"data\"]);\n                    var _b, _c;\n                    if (operationOptions.withRef) {\n                        _this.withRef = true;\n                        props = Object.assign({}, props, {\n                            ref: _this.setWrappedInstance,\n                        });\n                    }\n                    if (shouldSkip)\n                        return createElement(WrappedComponent, __assign({}, props));\n                    var result = Object.assign(r, data || {});\n                    var name = operationOptions.name || 'data';\n                    var childProps = (_b = {}, _b[name] = result, _b);\n                    if (operationOptions.props) {\n                        var newResult = (_c = {},\n                            _c[name] = result,\n                            _c.ownProps = props,\n                            _c);\n                        lastResultProps = operationOptions.props(newResult, lastResultProps);\n                        childProps = lastResultProps;\n                    }\n                    return createElement(WrappedComponent, __assign({}, props, childProps));\n                }));\n            };\n            GraphQL.displayName = graphQLDisplayName;\n            GraphQL.WrappedComponent = WrappedComponent;\n            return GraphQL;\n        }(GraphQLBase));\n        return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n    };\n}\n\nfunction graphql(document, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    switch (parser(document).type) {\n        case DocumentType.Mutation:\n            return withMutation(document, operationOptions);\n        case DocumentType.Subscription:\n            return withSubscription(document, operationOptions);\n        case DocumentType.Query:\n        default:\n            return withQuery(document, operationOptions);\n    }\n}\n\nfunction getDisplayName$1(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\nfunction withApollo(WrappedComponent, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    var withDisplayName = \"withApollo(\" + getDisplayName$1(WrappedComponent) + \")\";\n    var WithApollo = (function (_super) {\n        __extends(WithApollo, _super);\n        function WithApollo(props) {\n            var _this = _super.call(this, props) || this;\n            _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n            return _this;\n        }\n        WithApollo.prototype.getWrappedInstance = function () {\n            process.env.NODE_ENV === \"production\" ? invariant(operationOptions.withRef) : invariant(operationOptions.withRef, \"To access the wrapped instance, you need to specify \" + \"{ withRef: true } in the options\");\n            return this.wrappedInstance;\n        };\n        WithApollo.prototype.setWrappedInstance = function (ref) {\n            this.wrappedInstance = ref;\n        };\n        WithApollo.prototype.render = function () {\n            var _this = this;\n            return (createElement(ApolloConsumer, null, function (client) {\n                var props = Object.assign({}, _this.props, {\n                    client: client,\n                    ref: operationOptions.withRef ? _this.setWrappedInstance : undefined,\n                });\n                return createElement(WrappedComponent, __assign({}, props));\n            }));\n        };\n        WithApollo.displayName = withDisplayName;\n        WithApollo.WrappedComponent = WrappedComponent;\n        return WithApollo;\n    }(Component));\n    return hoistNonReactStatics(WithApollo, WrappedComponent, {});\n}\n\nfunction makeDefaultQueryInfo() {\n    return {\n        seen: false,\n        observable: null,\n    };\n}\nvar RenderPromises = (function () {\n    function RenderPromises() {\n        this.queryPromises = new Map();\n        this.queryInfoTrie = new Map();\n    }\n    RenderPromises.prototype.registerSSRObservable = function (queryInstance, observable) {\n        this.lookupQueryInfo(queryInstance).observable = observable;\n    };\n    RenderPromises.prototype.getSSRObservable = function (queryInstance) {\n        return this.lookupQueryInfo(queryInstance).observable;\n    };\n    RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n        var info = this.lookupQueryInfo(queryInstance);\n        if (!info.seen) {\n            this.queryPromises.set(queryInstance, new Promise(function (resolve) {\n                resolve(queryInstance.fetchData());\n            }));\n            return null;\n        }\n        return finish();\n    };\n    RenderPromises.prototype.hasPromises = function () {\n        return this.queryPromises.size > 0;\n    };\n    RenderPromises.prototype.consumeAndAwaitPromises = function () {\n        var _this = this;\n        var promises = [];\n        this.queryPromises.forEach(function (promise, queryInstance) {\n            _this.lookupQueryInfo(queryInstance).seen = true;\n            promises.push(promise);\n        });\n        this.queryPromises.clear();\n        return Promise.all(promises);\n    };\n    RenderPromises.prototype.lookupQueryInfo = function (queryInstance) {\n        var queryInfoTrie = this.queryInfoTrie;\n        var _a = queryInstance.props, query = _a.query, variables = _a.variables;\n        var varMap = queryInfoTrie.get(query) || new Map();\n        if (!queryInfoTrie.has(query))\n            queryInfoTrie.set(query, varMap);\n        var variablesString = JSON.stringify(variables);\n        var info = varMap.get(variablesString) || makeDefaultQueryInfo();\n        if (!varMap.has(variablesString))\n            varMap.set(variablesString, info);\n        return info;\n    };\n    return RenderPromises;\n}());\nfunction getDataFromTree(tree, context) {\n    if (context === void 0) { context = {}; }\n    return getMarkupFromTree({\n        tree: tree,\n        context: context,\n        renderFunction: require(\"react-dom/server\").renderToStaticMarkup,\n    });\n}\nfunction getMarkupFromTree(_a) {\n    var tree = _a.tree, _b = _a.context, context = _b === void 0 ? {} : _b, _c = _a.renderFunction, renderFunction = _c === void 0 ? require(\"react-dom/server\").renderToStaticMarkup : _c;\n    var renderPromises = new RenderPromises();\n    var RenderPromisesProvider = (function (_super) {\n        __extends(RenderPromisesProvider, _super);\n        function RenderPromisesProvider() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        RenderPromisesProvider.prototype.getChildContext = function () {\n            return __assign({}, context, { renderPromises: renderPromises });\n        };\n        RenderPromisesProvider.prototype.render = function () {\n            return tree;\n        };\n        RenderPromisesProvider.childContextTypes = {\n            renderPromises: object,\n        };\n        return RenderPromisesProvider;\n    }(Component));\n    Object.keys(context).forEach(function (key) {\n        RenderPromisesProvider.childContextTypes[key] = any;\n    });\n    function process() {\n        var html = renderFunction(createElement(RenderPromisesProvider));\n        return renderPromises.hasPromises()\n            ? renderPromises.consumeAndAwaitPromises().then(process)\n            : html;\n    }\n    return Promise.resolve().then(process);\n}\n\nfunction renderToStringWithData(component) {\n    return getMarkupFromTree({\n        tree: component,\n        renderFunction: require(\"react-dom/server\").renderToString,\n    });\n}\n\nfunction compose() {\n    var funcs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        funcs[_i] = arguments[_i];\n    }\n    var functions = funcs.reverse();\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var firstFunction = functions[0], restFunctions = functions.slice(1);\n        var result = firstFunction.apply(null, args);\n        restFunctions.forEach(function (fnc) {\n            result = fnc.call(null, result);\n        });\n        return result;\n    };\n}\n\nexport { ApolloConsumer, ApolloProvider, Query, Mutation, Subscription, graphql, withQuery, withMutation, withSubscription, withApollo, getDataFromTree, renderToStringWithData, compose, RenderPromises, getMarkupFromTree };\n//# sourceMappingURL=react-apollo.esm.js.map\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('prop-types'), require('apollo-client'), require('hoist-non-react-statics')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'react', 'prop-types', 'apollo-client', 'hoist-non-react-statics'], factory) :\n    (global = global || self, factory(global['react-apollo'] = {}, global.React, global.PropTypes, global.apolloClient, global.hoistNonReactStatics));\n}(this, function (exports, React, PropTypes, apolloClient, hoistNonReactStatics) { 'use strict';\n\n    hoistNonReactStatics = hoistNonReactStatics && hoistNonReactStatics.hasOwnProperty('default') ? hoistNonReactStatics['default'] : hoistNonReactStatics;\n\n    var __extends = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __assign = (undefined && undefined.__assign) || function () {\n        __assign = Object.assign || function(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                    t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n    var Trie = (function () {\n        function Trie() {\n            this.children = null;\n            this.added = false;\n        }\n        Trie.prototype.has = function () {\n            var keys = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                keys[_i] = arguments[_i];\n            }\n            var node = this;\n            return keys.every(function (key) {\n                var child = node.children && node.children.get(key);\n                return !!(child && (node = child));\n            }) && node.added;\n        };\n        Trie.prototype.add = function () {\n            var keys = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                keys[_i] = arguments[_i];\n            }\n            var node = this;\n            keys.forEach(function (key) {\n                var map = node.children || (node.children = new Map);\n                var child = map.get(key);\n                if (child) {\n                    node = child;\n                }\n                else {\n                    map.set(key, node = new Trie());\n                }\n            });\n            node.added = true;\n        };\n        return Trie;\n    }());\n    var RenderPromises = (function () {\n        function RenderPromises() {\n            this.queryPromises = new Map();\n            this.queryGraveyard = new Trie();\n        }\n        RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n            var _a = queryInstance.props, query = _a.query, variables = _a.variables;\n            if (!this.queryGraveyard.has(query, JSON.stringify(variables))) {\n                this.queryPromises.set(queryInstance, new Promise(function (resolve) {\n                    resolve(queryInstance.fetchData());\n                }));\n                return null;\n            }\n            return finish();\n        };\n        RenderPromises.prototype.hasPromises = function () {\n            return this.queryPromises.size > 0;\n        };\n        RenderPromises.prototype.consumeAndAwaitPromises = function () {\n            var _this = this;\n            var promises = [];\n            this.queryPromises.forEach(function (promise, queryInstance) {\n                var _a = queryInstance.props, query = _a.query, variables = _a.variables;\n                _this.queryGraveyard.add(query, JSON.stringify(variables));\n                promises.push(promise);\n            });\n            this.queryPromises.clear();\n            return Promise.all(promises);\n        };\n        return RenderPromises;\n    }());\n    function getDataFromTree(tree, context) {\n        if (context === void 0) { context = {}; }\n        return getMarkupFromTree({\n            tree: tree,\n            context: context,\n            renderFunction: require(\"react-dom/server\").renderToStaticMarkup,\n        });\n    }\n    function getMarkupFromTree(_a) {\n        var tree = _a.tree, _b = _a.context, context = _b === void 0 ? {} : _b, _c = _a.renderFunction, renderFunction = _c === void 0 ? require(\"react-dom/server\").renderToStaticMarkup : _c;\n        var renderPromises = new RenderPromises();\n        var RenderPromisesProvider = (function (_super) {\n            __extends(RenderPromisesProvider, _super);\n            function RenderPromisesProvider() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            RenderPromisesProvider.prototype.getChildContext = function () {\n                return __assign({}, context, { renderPromises: renderPromises });\n            };\n            RenderPromisesProvider.prototype.render = function () {\n                return tree;\n            };\n            RenderPromisesProvider.childContextTypes = {\n                renderPromises: PropTypes.object,\n            };\n            return RenderPromisesProvider;\n        }(React.Component));\n        Object.keys(context).forEach(function (key) {\n            RenderPromisesProvider.childContextTypes[key] = PropTypes.any;\n        });\n        function process() {\n            var html = renderFunction(React.createElement(RenderPromisesProvider));\n            return renderPromises.hasPromises()\n                ? renderPromises.consumeAndAwaitPromises().then(process)\n                : html;\n        }\n        return Promise.resolve().then(process);\n    }\n\n    var invariant = require('invariant');\n    var ApolloConsumer = function (props, context) {\n        invariant(!!context.client, \"Could not find \\\"client\\\" in the context of ApolloConsumer. Wrap the root component in an <ApolloProvider>\");\n        return props.children(context.client);\n    };\n    ApolloConsumer.contextTypes = {\n        client: PropTypes.object.isRequired,\n    };\n    ApolloConsumer.propTypes = {\n        children: PropTypes.func.isRequired,\n    };\n\n    var __extends$1 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var invariant$1 = require('invariant');\n    var ApolloProvider = (function (_super) {\n        __extends$1(ApolloProvider, _super);\n        function ApolloProvider(props, context) {\n            var _this = _super.call(this, props, context) || this;\n            _this.operations = new Map();\n            invariant$1(props.client, 'ApolloProvider was not passed a client instance. Make ' +\n                'sure you pass in your client via the \"client\" prop.');\n            if (!props.client.__operations_cache__) {\n                props.client.__operations_cache__ = _this.operations;\n            }\n            return _this;\n        }\n        ApolloProvider.prototype.getChildContext = function () {\n            return {\n                client: this.props.client,\n                operations: this.props.client.__operations_cache__,\n            };\n        };\n        ApolloProvider.prototype.render = function () {\n            return this.props.children;\n        };\n        ApolloProvider.propTypes = {\n            client: PropTypes.object.isRequired,\n            children: PropTypes.node.isRequired,\n        };\n        ApolloProvider.childContextTypes = {\n            client: PropTypes.object.isRequired,\n            operations: PropTypes.object,\n        };\n        return ApolloProvider;\n    }(React.Component));\n\n    var invariant$2 = require('invariant');\n    var DocumentType;\n    (function (DocumentType) {\n        DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n        DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n        DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n    })(DocumentType || (DocumentType = {}));\n    var cache = new Map();\n    function parser(document) {\n        var cached = cache.get(document);\n        if (cached)\n            return cached;\n        var variables, type, name;\n        invariant$2(!!document && !!document.kind, \"Argument of \" + document + \" passed to parser was not a valid GraphQL \" +\n            \"DocumentNode. You may need to use 'graphql-tag' or another method \" +\n            \"to convert your operation into a document\");\n        var fragments = document.definitions.filter(function (x) { return x.kind === 'FragmentDefinition'; });\n        var queries = document.definitions.filter(function (x) { return x.kind === 'OperationDefinition' && x.operation === 'query'; });\n        var mutations = document.definitions.filter(function (x) { return x.kind === 'OperationDefinition' && x.operation === 'mutation'; });\n        var subscriptions = document.definitions.filter(function (x) { return x.kind === 'OperationDefinition' && x.operation === 'subscription'; });\n        invariant$2(!fragments.length || (queries.length || mutations.length || subscriptions.length), \"Passing only a fragment to 'graphql' is not yet supported. \" +\n            \"You must include a query, subscription or mutation as well\");\n        invariant$2(queries.length + mutations.length + subscriptions.length <= 1, \"react-apollo only supports a query, subscription, or a mutation per HOC. \" +\n            (document + \" had \" + queries.length + \" queries, \" + subscriptions.length + \" \") +\n            (\"subscriptions and \" + mutations.length + \" mutations. \") +\n            \"You can use 'compose' to join multiple operation types to a component\");\n        type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n        if (!queries.length && !mutations.length)\n            type = DocumentType.Subscription;\n        var definitions = queries.length ? queries : mutations.length ? mutations : subscriptions;\n        invariant$2(definitions.length === 1, \"react-apollo only supports one defintion per HOC. \" + document + \" had \" +\n            (definitions.length + \" definitions. \") +\n            \"You can use 'compose' to join multiple operation types to a component\");\n        var definition = definitions[0];\n        variables = definition.variableDefinitions || [];\n        if (definition.name && definition.name.kind === 'Name') {\n            name = definition.name.value;\n        }\n        else {\n            name = 'data';\n        }\n        var payload = { name: name, type: type, variables: variables };\n        cache.set(document, payload);\n        return payload;\n    }\n\n    var invariant$3 = require('invariant');\n    function getClient(props, context) {\n        var client = props.client || context.client;\n        invariant$3(!!client, 'Could not find \"client\" in the context or passed in as a prop. ' +\n            'Wrap the root component in an <ApolloProvider>, or pass an ' +\n            'ApolloClient instance in via props.');\n        return client;\n    }\n\n    var __extends$2 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __assign$1 = (undefined && undefined.__assign) || function () {\n        __assign$1 = Object.assign || function(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                    t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign$1.apply(this, arguments);\n    };\n    var __rest = (undefined && undefined.__rest) || function (s, e) {\n        var t = {};\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n            t[p] = s[p];\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n                t[p[i]] = s[p[i]];\n        return t;\n    };\n    var shallowEqual = require('fbjs/lib/shallowEqual');\n    var invariant$4 = require('invariant');\n    function compact(obj) {\n        return Object.keys(obj).reduce(function (acc, key) {\n            if (obj[key] !== undefined) {\n                acc[key] = obj[key];\n            }\n            return acc;\n        }, {});\n    }\n    function observableQueryFields(observable) {\n        var fields = {\n            variables: observable.variables,\n            refetch: observable.refetch.bind(observable),\n            fetchMore: observable.fetchMore.bind(observable),\n            updateQuery: observable.updateQuery.bind(observable),\n            startPolling: observable.startPolling.bind(observable),\n            stopPolling: observable.stopPolling.bind(observable),\n            subscribeToMore: observable.subscribeToMore.bind(observable),\n        };\n        return fields;\n    }\n    var Query = (function (_super) {\n        __extends$2(Query, _super);\n        function Query(props, context) {\n            var _this = _super.call(this, props, context) || this;\n            _this.previousData = {};\n            _this.hasMounted = false;\n            _this.startQuerySubscription = function () {\n                if (_this.querySubscription)\n                    return;\n                var initial = _this.getQueryResult();\n                _this.querySubscription = _this.queryObservable.subscribe({\n                    next: function (_a) {\n                        var data = _a.data;\n                        if (initial && initial.networkStatus === 7 && shallowEqual(initial.data, data)) {\n                            initial = undefined;\n                            return;\n                        }\n                        initial = undefined;\n                        _this.updateCurrentData();\n                    },\n                    error: function (error) {\n                        _this.resubscribeToQuery();\n                        if (!error.hasOwnProperty('graphQLErrors'))\n                            throw error;\n                        _this.updateCurrentData();\n                    },\n                });\n            };\n            _this.removeQuerySubscription = function () {\n                if (_this.querySubscription) {\n                    _this.querySubscription.unsubscribe();\n                    delete _this.querySubscription;\n                }\n            };\n            _this.updateCurrentData = function () {\n                if (_this.hasMounted)\n                    _this.forceUpdate();\n            };\n            _this.getQueryResult = function () {\n                var data = { data: Object.create(null) };\n                Object.assign(data, observableQueryFields(_this.queryObservable));\n                if (_this.props.skip) {\n                    data = __assign$1({}, data, { data: undefined, error: undefined, loading: false });\n                }\n                else {\n                    var currentResult = _this.queryObservable.currentResult();\n                    var loading = currentResult.loading, partial = currentResult.partial, networkStatus = currentResult.networkStatus, errors = currentResult.errors;\n                    var error = currentResult.error;\n                    if (errors && errors.length > 0) {\n                        error = new apolloClient.ApolloError({ graphQLErrors: errors });\n                    }\n                    Object.assign(data, { loading: loading, networkStatus: networkStatus, error: error });\n                    if (loading) {\n                        Object.assign(data.data, _this.previousData, currentResult.data);\n                    }\n                    else if (error) {\n                        Object.assign(data, {\n                            data: (_this.queryObservable.getLastResult() || {}).data,\n                        });\n                    }\n                    else {\n                        var fetchPolicy = _this.queryObservable.options.fetchPolicy;\n                        var partialRefetch = _this.props.partialRefetch;\n                        if (partialRefetch &&\n                            Object.keys(currentResult.data).length === 0 &&\n                            partial &&\n                            fetchPolicy !== 'cache-only') {\n                            Object.assign(data, { loading: true, networkStatus: apolloClient.NetworkStatus.loading });\n                            data.refetch();\n                            return data;\n                        }\n                        Object.assign(data.data, currentResult.data);\n                        _this.previousData = currentResult.data;\n                    }\n                }\n                if (!_this.querySubscription) {\n                    var oldRefetch_1 = data.refetch;\n                    data.refetch = function (args) {\n                        if (_this.querySubscription) {\n                            return oldRefetch_1(args);\n                        }\n                        else {\n                            return new Promise(function (r, f) {\n                                _this.refetcherQueue = { resolve: r, reject: f, args: args };\n                            });\n                        }\n                    };\n                }\n                data.client = _this.client;\n                return data;\n            };\n            _this.client = getClient(props, context);\n            _this.initializeQueryObservable(props);\n            return _this;\n        }\n        Query.prototype.fetchData = function () {\n            if (this.props.skip)\n                return false;\n            var _a = this.props, children = _a.children, ssr = _a.ssr, displayName = _a.displayName, skip = _a.skip, client = _a.client, onCompleted = _a.onCompleted, onError = _a.onError, partialRefetch = _a.partialRefetch, opts = __rest(_a, [\"children\", \"ssr\", \"displayName\", \"skip\", \"client\", \"onCompleted\", \"onError\", \"partialRefetch\"]);\n            var fetchPolicy = opts.fetchPolicy;\n            if (ssr === false)\n                return false;\n            if (fetchPolicy === 'network-only' || fetchPolicy === 'cache-and-network') {\n                fetchPolicy = 'cache-first';\n            }\n            var observable = this.client.watchQuery(__assign$1({}, opts, { fetchPolicy: fetchPolicy }));\n            var result = this.queryObservable.currentResult();\n            return result.loading ? observable.result() : false;\n        };\n        Query.prototype.componentDidMount = function () {\n            this.hasMounted = true;\n            if (this.props.skip)\n                return;\n            this.startQuerySubscription();\n            if (this.refetcherQueue) {\n                var _a = this.refetcherQueue, args = _a.args, resolve = _a.resolve, reject = _a.reject;\n                this.queryObservable.refetch(args)\n                    .then(resolve)\n                    .catch(reject);\n            }\n        };\n        Query.prototype.componentWillReceiveProps = function (nextProps, nextContext) {\n            if (nextProps.skip && !this.props.skip) {\n                this.removeQuerySubscription();\n                return;\n            }\n            var nextClient = getClient(nextProps, nextContext);\n            if (shallowEqual(this.props, nextProps) && this.client === nextClient) {\n                return;\n            }\n            if (this.client !== nextClient) {\n                this.client = nextClient;\n                this.removeQuerySubscription();\n                this.queryObservable = null;\n                this.previousData = {};\n                this.updateQuery(nextProps);\n            }\n            if (this.props.query !== nextProps.query) {\n                this.removeQuerySubscription();\n            }\n            this.updateQuery(nextProps);\n            if (nextProps.skip)\n                return;\n            this.startQuerySubscription();\n        };\n        Query.prototype.componentWillUnmount = function () {\n            this.removeQuerySubscription();\n            this.hasMounted = false;\n        };\n        Query.prototype.componentDidUpdate = function () {\n            var _a = this.props, onCompleted = _a.onCompleted, onError = _a.onError;\n            if (onCompleted || onError) {\n                var currentResult = this.queryObservable.currentResult();\n                var loading = currentResult.loading, error = currentResult.error, data = currentResult.data;\n                if (onCompleted && !loading && !error) {\n                    onCompleted(data);\n                }\n                else if (onError && !loading && error) {\n                    onError(error);\n                }\n            }\n        };\n        Query.prototype.render = function () {\n            var _this = this;\n            var context = this.context;\n            var finish = function () { return _this.props.children(_this.getQueryResult()); };\n            if (context && context.renderPromises) {\n                return context.renderPromises.addQueryPromise(this, finish);\n            }\n            return finish();\n        };\n        Query.prototype.extractOptsFromProps = function (props) {\n            var variables = props.variables, pollInterval = props.pollInterval, fetchPolicy = props.fetchPolicy, errorPolicy = props.errorPolicy, notifyOnNetworkStatusChange = props.notifyOnNetworkStatusChange, query = props.query, _a = props.displayName, displayName = _a === void 0 ? 'Query' : _a, _b = props.context, context = _b === void 0 ? {} : _b;\n            this.operation = parser(query);\n            invariant$4(this.operation.type === DocumentType.Query, \"The <Query /> component requires a graphql query, but got a \" + (this.operation.type === DocumentType.Mutation ? 'mutation' : 'subscription') + \".\");\n            return compact({\n                variables: variables,\n                pollInterval: pollInterval,\n                query: query,\n                fetchPolicy: fetchPolicy,\n                errorPolicy: errorPolicy,\n                notifyOnNetworkStatusChange: notifyOnNetworkStatusChange,\n                metadata: { reactComponent: { displayName: displayName } },\n                context: context,\n            });\n        };\n        Query.prototype.initializeQueryObservable = function (props) {\n            var opts = this.extractOptsFromProps(props);\n            this.setOperations(opts);\n            this.queryObservable = this.client.watchQuery(opts);\n        };\n        Query.prototype.setOperations = function (props) {\n            if (this.context.operations) {\n                this.context.operations.set(this.operation.name, {\n                    query: props.query,\n                    variables: props.variables,\n                });\n            }\n        };\n        Query.prototype.updateQuery = function (props) {\n            if (!this.queryObservable) {\n                this.initializeQueryObservable(props);\n            }\n            else {\n                this.setOperations(props);\n            }\n            this.queryObservable.setOptions(this.extractOptsFromProps(props))\n                .catch(function () { return null; });\n        };\n        Query.prototype.resubscribeToQuery = function () {\n            this.removeQuerySubscription();\n            var lastError = this.queryObservable.getLastError();\n            var lastResult = this.queryObservable.getLastResult();\n            this.queryObservable.resetLastResults();\n            this.startQuerySubscription();\n            Object.assign(this.queryObservable, { lastError: lastError, lastResult: lastResult });\n        };\n        Query.contextTypes = {\n            client: PropTypes.object,\n            operations: PropTypes.object,\n            renderPromises: PropTypes.object,\n        };\n        Query.propTypes = {\n            client: PropTypes.object,\n            children: PropTypes.func.isRequired,\n            fetchPolicy: PropTypes.string,\n            notifyOnNetworkStatusChange: PropTypes.bool,\n            onCompleted: PropTypes.func,\n            onError: PropTypes.func,\n            pollInterval: PropTypes.number,\n            query: PropTypes.object.isRequired,\n            variables: PropTypes.object,\n            ssr: PropTypes.bool,\n            partialRefetch: PropTypes.bool,\n        };\n        return Query;\n    }(React.Component));\n\n    var __extends$3 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __assign$2 = (undefined && undefined.__assign) || function () {\n        __assign$2 = Object.assign || function(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                    t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign$2.apply(this, arguments);\n    };\n    var invariant$5 = require('invariant');\n    var shallowEqual$1 = require('fbjs/lib/shallowEqual');\n    var initialState = {\n        loading: false,\n        called: false,\n        error: undefined,\n        data: undefined,\n    };\n    var Mutation = (function (_super) {\n        __extends$3(Mutation, _super);\n        function Mutation(props, context) {\n            var _this = _super.call(this, props, context) || this;\n            _this.hasMounted = false;\n            _this.runMutation = function (options) {\n                if (options === void 0) { options = {}; }\n                _this.onMutationStart();\n                var mutationId = _this.generateNewMutationId();\n                return _this.mutate(options)\n                    .then(function (response) {\n                    _this.onMutationCompleted(response, mutationId);\n                    return response;\n                })\n                    .catch(function (e) {\n                    _this.onMutationError(e, mutationId);\n                    if (!_this.props.onError)\n                        throw e;\n                });\n            };\n            _this.mutate = function (options) {\n                var _a = _this.props, mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, update = _a.update, _b = _a.context, context = _b === void 0 ? {} : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, fetchPolicy = _a.fetchPolicy;\n                var mutateOptions = __assign$2({}, options);\n                var refetchQueries = mutateOptions.refetchQueries || _this.props.refetchQueries;\n                if (refetchQueries && refetchQueries.length && Array.isArray(refetchQueries)) {\n                    refetchQueries = refetchQueries.map(function (x) {\n                        if (typeof x === 'string' && _this.context.operations)\n                            return _this.context.operations.get(x) || x;\n                        return x;\n                    });\n                    delete mutateOptions.refetchQueries;\n                }\n                var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n                delete mutateOptions.variables;\n                return _this.client.mutate(__assign$2({ mutation: mutation,\n                    optimisticResponse: optimisticResponse,\n                    refetchQueries: refetchQueries,\n                    awaitRefetchQueries: awaitRefetchQueries,\n                    update: update,\n                    context: context,\n                    fetchPolicy: fetchPolicy, variables: mutateVariables }, mutateOptions));\n            };\n            _this.onMutationStart = function () {\n                if (!_this.state.loading && !_this.props.ignoreResults) {\n                    _this.setState({\n                        loading: true,\n                        error: undefined,\n                        data: undefined,\n                        called: true,\n                    });\n                }\n            };\n            _this.onMutationCompleted = function (response, mutationId) {\n                var _a = _this.props, onCompleted = _a.onCompleted, ignoreResults = _a.ignoreResults;\n                var data = response.data, errors = response.errors;\n                var error = errors && errors.length > 0 ? new apolloClient.ApolloError({ graphQLErrors: errors }) : undefined;\n                var callOncomplete = function () { return (onCompleted ? onCompleted(data) : null); };\n                if (_this.hasMounted && _this.isMostRecentMutation(mutationId) && !ignoreResults) {\n                    _this.setState({ loading: false, data: data, error: error }, callOncomplete);\n                }\n                else {\n                    callOncomplete();\n                }\n            };\n            _this.onMutationError = function (error, mutationId) {\n                var onError = _this.props.onError;\n                var callOnError = function () { return (onError ? onError(error) : null); };\n                if (_this.hasMounted && _this.isMostRecentMutation(mutationId)) {\n                    _this.setState({ loading: false, error: error }, callOnError);\n                }\n                else {\n                    callOnError();\n                }\n            };\n            _this.generateNewMutationId = function () {\n                _this.mostRecentMutationId = _this.mostRecentMutationId + 1;\n                return _this.mostRecentMutationId;\n            };\n            _this.isMostRecentMutation = function (mutationId) {\n                return _this.mostRecentMutationId === mutationId;\n            };\n            _this.verifyDocumentIsMutation = function (mutation) {\n                var operation = parser(mutation);\n                invariant$5(operation.type === DocumentType.Mutation, \"The <Mutation /> component requires a graphql mutation, but got a \" + (operation.type === DocumentType.Query ? 'query' : 'subscription') + \".\");\n            };\n            _this.client = getClient(props, context);\n            _this.verifyDocumentIsMutation(props.mutation);\n            _this.mostRecentMutationId = 0;\n            _this.state = initialState;\n            return _this;\n        }\n        Mutation.prototype.componentDidMount = function () {\n            this.hasMounted = true;\n        };\n        Mutation.prototype.componentWillUnmount = function () {\n            this.hasMounted = false;\n        };\n        Mutation.prototype.componentWillReceiveProps = function (nextProps, nextContext) {\n            var nextClient = getClient(nextProps, nextContext);\n            if (shallowEqual$1(this.props, nextProps) && this.client === nextClient) {\n                return;\n            }\n            if (this.props.mutation !== nextProps.mutation) {\n                this.verifyDocumentIsMutation(nextProps.mutation);\n            }\n            if (this.client !== nextClient) {\n                this.client = nextClient;\n                this.setState(initialState);\n            }\n        };\n        Mutation.prototype.render = function () {\n            var children = this.props.children;\n            var _a = this.state, loading = _a.loading, data = _a.data, error = _a.error, called = _a.called;\n            var result = {\n                called: called,\n                loading: loading,\n                data: data,\n                error: error,\n                client: this.client,\n            };\n            return children(this.runMutation, result);\n        };\n        Mutation.contextTypes = {\n            client: PropTypes.object,\n            operations: PropTypes.object,\n        };\n        Mutation.propTypes = {\n            mutation: PropTypes.object.isRequired,\n            variables: PropTypes.object,\n            optimisticResponse: PropTypes.object,\n            refetchQueries: PropTypes.oneOfType([\n                PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])),\n                PropTypes.func,\n            ]),\n            awaitRefetchQueries: PropTypes.bool,\n            update: PropTypes.func,\n            children: PropTypes.func.isRequired,\n            onCompleted: PropTypes.func,\n            onError: PropTypes.func,\n            fetchPolicy: PropTypes.string,\n        };\n        return Mutation;\n    }(React.Component));\n\n    var __extends$4 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var shallowEqual$2 = require('fbjs/lib/shallowEqual');\n    var invariant$6 = require('invariant');\n    var Subscription = (function (_super) {\n        __extends$4(Subscription, _super);\n        function Subscription(props, context) {\n            var _this = _super.call(this, props, context) || this;\n            _this.initialize = function (props) {\n                if (_this.queryObservable)\n                    return;\n                _this.queryObservable = _this.client.subscribe({\n                    query: props.subscription,\n                    variables: props.variables,\n                    fetchPolicy: props.fetchPolicy,\n                });\n            };\n            _this.startSubscription = function () {\n                if (_this.querySubscription)\n                    return;\n                _this.querySubscription = _this.queryObservable.subscribe({\n                    next: _this.updateCurrentData,\n                    error: _this.updateError,\n                });\n            };\n            _this.getInitialState = function () { return ({\n                loading: true,\n                error: undefined,\n                data: undefined,\n            }); };\n            _this.updateCurrentData = function (result) {\n                var _a = _this, client = _a.client, onSubscriptionData = _a.props.onSubscriptionData;\n                if (onSubscriptionData)\n                    onSubscriptionData({ client: client, subscriptionData: result });\n                _this.setState({\n                    data: result.data,\n                    loading: false,\n                    error: undefined,\n                });\n            };\n            _this.updateError = function (error) {\n                _this.setState({\n                    error: error,\n                    loading: false,\n                });\n            };\n            _this.endSubscription = function () {\n                if (_this.querySubscription) {\n                    _this.querySubscription.unsubscribe();\n                    delete _this.querySubscription;\n                }\n            };\n            _this.client = getClient(props, context);\n            _this.initialize(props);\n            _this.state = _this.getInitialState();\n            return _this;\n        }\n        Subscription.prototype.componentDidMount = function () {\n            this.startSubscription();\n        };\n        Subscription.prototype.componentWillReceiveProps = function (nextProps, nextContext) {\n            var nextClient = getClient(nextProps, nextContext);\n            if (shallowEqual$2(this.props.variables, nextProps.variables) &&\n                this.client === nextClient &&\n                this.props.subscription === nextProps.subscription) {\n                return;\n            }\n            var shouldResubscribe = nextProps.shouldResubscribe;\n            if (typeof shouldResubscribe === 'function') {\n                shouldResubscribe = !!shouldResubscribe(this.props, nextProps);\n            }\n            var shouldNotResubscribe = shouldResubscribe === false;\n            if (this.client !== nextClient) {\n                this.client = nextClient;\n            }\n            if (!shouldNotResubscribe) {\n                this.endSubscription();\n                delete this.queryObservable;\n                this.initialize(nextProps);\n                this.startSubscription();\n                this.setState(this.getInitialState());\n                return;\n            }\n            this.initialize(nextProps);\n            this.startSubscription();\n        };\n        Subscription.prototype.componentWillUnmount = function () {\n            this.endSubscription();\n        };\n        Subscription.prototype.render = function () {\n            var renderFn = this.props.children;\n            if (!renderFn)\n                return null;\n            var result = Object.assign({}, this.state, {\n                variables: this.props.variables,\n            });\n            return renderFn(result);\n        };\n        Subscription.contextTypes = {\n            client: PropTypes.object,\n        };\n        Subscription.propTypes = {\n            subscription: PropTypes.object.isRequired,\n            variables: PropTypes.object,\n            children: PropTypes.func,\n            onSubscriptionData: PropTypes.func,\n            shouldResubscribe: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n        };\n        return Subscription;\n    }(React.Component));\n\n    var __extends$5 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var invariant$7 = require('invariant');\n    var defaultMapPropsToOptions = function () { return ({}); };\n    var defaultMapPropsToSkip = function () { return false; };\n    function getDisplayName(WrappedComponent) {\n        return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    }\n    function calculateVariablesFromProps(operation, props, graphQLDisplayName, wrapperName) {\n        var variables = {};\n        for (var _i = 0, _a = operation.variables; _i < _a.length; _i++) {\n            var _b = _a[_i], variable = _b.variable, type = _b.type;\n            if (!variable.name || !variable.name.value)\n                continue;\n            var variableName = variable.name.value;\n            var variableProp = props[variableName];\n            if (typeof variableProp !== 'undefined') {\n                variables[variableName] = variableProp;\n                continue;\n            }\n            if (type.kind !== 'NonNullType') {\n                variables[variableName] = null;\n                continue;\n            }\n            if (operation.type === DocumentType.Mutation)\n                return;\n            invariant$7(typeof variableProp !== 'undefined', \"The operation '\" + operation.name + \"' wrapping '\" + wrapperName + \"' \" +\n                (\"is expecting a variable: '\" + variable.name.value + \"' but it was not found in the props \") +\n                (\"passed to '\" + graphQLDisplayName + \"'\"));\n        }\n        return variables;\n    }\n    var GraphQLBase = (function (_super) {\n        __extends$5(GraphQLBase, _super);\n        function GraphQLBase(props) {\n            var _this = _super.call(this, props) || this;\n            _this.withRef = false;\n            _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n            return _this;\n        }\n        GraphQLBase.prototype.getWrappedInstance = function () {\n            invariant$7(this.withRef, \"To access the wrapped instance, you need to specify \" + \"{ withRef: true } in the options\");\n            return this.wrappedInstance;\n        };\n        GraphQLBase.prototype.setWrappedInstance = function (ref) {\n            this.wrappedInstance = ref;\n        };\n        return GraphQLBase;\n    }(React.Component));\n\n    var __extends$6 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __assign$3 = (undefined && undefined.__assign) || function () {\n        __assign$3 = Object.assign || function(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                    t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign$3.apply(this, arguments);\n    };\n    var __rest$1 = (undefined && undefined.__rest) || function (s, e) {\n        var t = {};\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n            t[p] = s[p];\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n                t[p[i]] = s[p[i]];\n        return t;\n    };\n    function withQuery(document, operationOptions) {\n        if (operationOptions === void 0) { operationOptions = {}; }\n        var operation = parser(document);\n        var _a = operationOptions.options, options = _a === void 0 ? defaultMapPropsToOptions : _a, _b = operationOptions.skip, skip = _b === void 0 ? defaultMapPropsToSkip : _b, _c = operationOptions.alias, alias = _c === void 0 ? 'Apollo' : _c;\n        var mapPropsToOptions = options;\n        if (typeof mapPropsToOptions !== 'function') {\n            mapPropsToOptions = function () { return options; };\n        }\n        var mapPropsToSkip = skip;\n        if (typeof mapPropsToSkip !== 'function') {\n            mapPropsToSkip = function () { return skip; };\n        }\n        var lastResultProps;\n        return function (WrappedComponent) {\n            var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n            var GraphQL = (function (_super) {\n                __extends$6(GraphQL, _super);\n                function GraphQL() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                GraphQL.prototype.render = function () {\n                    var _this = this;\n                    var props = this.props;\n                    var shouldSkip = mapPropsToSkip(props);\n                    var opts = shouldSkip ? Object.create(null) : __assign$3({}, mapPropsToOptions(props));\n                    if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n                        opts.variables = calculateVariablesFromProps(operation, props, graphQLDisplayName, getDisplayName(WrappedComponent));\n                    }\n                    return (React.createElement(Query, __assign$3({}, opts, { displayName: graphQLDisplayName, skip: shouldSkip, query: document, warnUnhandledError: true }), function (_a) {\n                        var _ = _a.client, data = _a.data, r = __rest$1(_a, [\"client\", \"data\"]);\n                        var _b, _c;\n                        if (operationOptions.withRef) {\n                            _this.withRef = true;\n                            props = Object.assign({}, props, {\n                                ref: _this.setWrappedInstance,\n                            });\n                        }\n                        if (shouldSkip)\n                            return React.createElement(WrappedComponent, __assign$3({}, props));\n                        var result = Object.assign(r, data || {});\n                        var name = operationOptions.name || 'data';\n                        var childProps = (_b = {}, _b[name] = result, _b);\n                        if (operationOptions.props) {\n                            var newResult = (_c = {},\n                                _c[name] = result,\n                                _c.ownProps = props,\n                                _c);\n                            lastResultProps = operationOptions.props(newResult, lastResultProps);\n                            childProps = lastResultProps;\n                        }\n                        return React.createElement(WrappedComponent, __assign$3({}, props, childProps));\n                    }));\n                };\n                GraphQL.displayName = graphQLDisplayName;\n                GraphQL.WrappedComponent = WrappedComponent;\n                return GraphQL;\n            }(GraphQLBase));\n            return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n        };\n    }\n\n    var __extends$7 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __assign$4 = (undefined && undefined.__assign) || function () {\n        __assign$4 = Object.assign || function(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                    t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign$4.apply(this, arguments);\n    };\n    function withMutation(document, operationOptions) {\n        if (operationOptions === void 0) { operationOptions = {}; }\n        var operation = parser(document);\n        var _a = operationOptions.options, options = _a === void 0 ? defaultMapPropsToOptions : _a, _b = operationOptions.alias, alias = _b === void 0 ? 'Apollo' : _b;\n        var mapPropsToOptions = options;\n        if (typeof mapPropsToOptions !== 'function')\n            mapPropsToOptions = function () { return options; };\n        return function (WrappedComponent) {\n            var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n            var GraphQL = (function (_super) {\n                __extends$7(GraphQL, _super);\n                function GraphQL() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                GraphQL.prototype.render = function () {\n                    var props = this.props;\n                    var opts = mapPropsToOptions(props);\n                    if (operationOptions.withRef) {\n                        this.withRef = true;\n                        props = Object.assign({}, props, {\n                            ref: this.setWrappedInstance,\n                        });\n                    }\n                    if (!opts.variables && operation.variables.length > 0) {\n                        opts.variables = calculateVariablesFromProps(operation, props, graphQLDisplayName, getDisplayName(WrappedComponent));\n                    }\n                    return (React.createElement(Mutation, __assign$4({}, opts, { mutation: document, ignoreResults: true }), function (mutate, _result) {\n                        var _a, _b;\n                        var name = operationOptions.name || 'mutate';\n                        var childProps = (_a = {}, _a[name] = mutate, _a);\n                        if (operationOptions.props) {\n                            var newResult = (_b = {},\n                                _b[name] = mutate,\n                                _b.ownProps = props,\n                                _b);\n                            childProps = operationOptions.props(newResult);\n                        }\n                        return React.createElement(WrappedComponent, __assign$4({}, props, childProps));\n                    }));\n                };\n                GraphQL.displayName = graphQLDisplayName;\n                GraphQL.WrappedComponent = WrappedComponent;\n                return GraphQL;\n            }(GraphQLBase));\n            return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n        };\n    }\n\n    var __extends$8 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __assign$5 = (undefined && undefined.__assign) || function () {\n        __assign$5 = Object.assign || function(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                    t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign$5.apply(this, arguments);\n    };\n    var __rest$2 = (undefined && undefined.__rest) || function (s, e) {\n        var t = {};\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n            t[p] = s[p];\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n                t[p[i]] = s[p[i]];\n        return t;\n    };\n    function withSubscription(document, operationOptions) {\n        if (operationOptions === void 0) { operationOptions = {}; }\n        var operation = parser(document);\n        var _a = operationOptions.options, options = _a === void 0 ? defaultMapPropsToOptions : _a, _b = operationOptions.skip, skip = _b === void 0 ? defaultMapPropsToSkip : _b, _c = operationOptions.alias, alias = _c === void 0 ? 'Apollo' : _c, shouldResubscribe = operationOptions.shouldResubscribe;\n        var mapPropsToOptions = options;\n        if (typeof mapPropsToOptions !== 'function')\n            mapPropsToOptions = function () { return options; };\n        var mapPropsToSkip = skip;\n        if (typeof mapPropsToSkip !== 'function')\n            mapPropsToSkip = function () { return skip; };\n        var lastResultProps;\n        return function (WrappedComponent) {\n            var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n            var GraphQL = (function (_super) {\n                __extends$8(GraphQL, _super);\n                function GraphQL(props) {\n                    var _this = _super.call(this, props) || this;\n                    _this.state = { resubscribe: false };\n                    return _this;\n                }\n                GraphQL.prototype.componentWillReceiveProps = function (nextProps) {\n                    if (!shouldResubscribe)\n                        return;\n                    this.setState({\n                        resubscribe: shouldResubscribe(this.props, nextProps),\n                    });\n                };\n                GraphQL.prototype.render = function () {\n                    var _this = this;\n                    var props = this.props;\n                    var shouldSkip = mapPropsToSkip(props);\n                    var opts = shouldSkip ? Object.create(null) : mapPropsToOptions(props);\n                    if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n                        opts.variables = calculateVariablesFromProps(operation, props, graphQLDisplayName, getDisplayName(WrappedComponent));\n                    }\n                    return (React.createElement(Subscription, __assign$5({}, opts, { displayName: graphQLDisplayName, skip: shouldSkip, subscription: document, shouldResubscribe: this.state.resubscribe }), function (_a) {\n                        var data = _a.data, r = __rest$2(_a, [\"data\"]);\n                        var _b, _c;\n                        if (operationOptions.withRef) {\n                            _this.withRef = true;\n                            props = Object.assign({}, props, {\n                                ref: _this.setWrappedInstance,\n                            });\n                        }\n                        if (shouldSkip)\n                            return React.createElement(WrappedComponent, __assign$5({}, props));\n                        var result = Object.assign(r, data || {});\n                        var name = operationOptions.name || 'data';\n                        var childProps = (_b = {}, _b[name] = result, _b);\n                        if (operationOptions.props) {\n                            var newResult = (_c = {},\n                                _c[name] = result,\n                                _c.ownProps = props,\n                                _c);\n                            lastResultProps = operationOptions.props(newResult, lastResultProps);\n                            childProps = lastResultProps;\n                        }\n                        return React.createElement(WrappedComponent, __assign$5({}, props, childProps));\n                    }));\n                };\n                GraphQL.displayName = graphQLDisplayName;\n                GraphQL.WrappedComponent = WrappedComponent;\n                return GraphQL;\n            }(GraphQLBase));\n            return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n        };\n    }\n\n    function graphql(document, operationOptions) {\n        if (operationOptions === void 0) { operationOptions = {}; }\n        switch (parser(document).type) {\n            case DocumentType.Mutation:\n                return withMutation(document, operationOptions);\n            case DocumentType.Subscription:\n                return withSubscription(document, operationOptions);\n            case DocumentType.Query:\n            default:\n                return withQuery(document, operationOptions);\n        }\n    }\n\n    var __extends$9 = (undefined && undefined.__extends) || (function () {\n        var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n            return extendStatics(d, b);\n        };\n        return function (d, b) {\n            extendStatics(d, b);\n            function __() { this.constructor = d; }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n    })();\n    var __assign$6 = (undefined && undefined.__assign) || function () {\n        __assign$6 = Object.assign || function(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                    t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign$6.apply(this, arguments);\n    };\n    var invariant$8 = require('invariant');\n    function getDisplayName$1(WrappedComponent) {\n        return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    }\n    function withApollo(WrappedComponent, operationOptions) {\n        if (operationOptions === void 0) { operationOptions = {}; }\n        var withDisplayName = \"withApollo(\" + getDisplayName$1(WrappedComponent) + \")\";\n        var WithApollo = (function (_super) {\n            __extends$9(WithApollo, _super);\n            function WithApollo(props) {\n                var _this = _super.call(this, props) || this;\n                _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n                return _this;\n            }\n            WithApollo.prototype.getWrappedInstance = function () {\n                invariant$8(operationOptions.withRef, \"To access the wrapped instance, you need to specify \" + \"{ withRef: true } in the options\");\n                return this.wrappedInstance;\n            };\n            WithApollo.prototype.setWrappedInstance = function (ref) {\n                this.wrappedInstance = ref;\n            };\n            WithApollo.prototype.render = function () {\n                var _this = this;\n                return (React.createElement(ApolloConsumer, null, function (client) {\n                    var props = Object.assign({}, _this.props, {\n                        client: client,\n                        ref: operationOptions.withRef ? _this.setWrappedInstance : undefined,\n                    });\n                    return React.createElement(WrappedComponent, __assign$6({}, props));\n                }));\n            };\n            WithApollo.displayName = withDisplayName;\n            WithApollo.WrappedComponent = WrappedComponent;\n            return WithApollo;\n        }(React.Component));\n        return hoistNonReactStatics(WithApollo, WrappedComponent, {});\n    }\n\n    function getProps(element) {\n        return element.props || element.attributes;\n    }\n    function isReactElement(element) {\n        return !!element.type;\n    }\n    function isComponentClass(Comp) {\n        return Comp.prototype && (Comp.prototype.render || Comp.prototype.isReactComponent);\n    }\n    function providesChildContext(instance) {\n        return !!instance.getChildContext;\n    }\n    function walkTree(element, context, visitor, newContext) {\n        if (newContext === void 0) { newContext = new Map(); }\n        if (!element) {\n            return;\n        }\n        if (Array.isArray(element)) {\n            element.forEach(function (item) { return walkTree(item, context, visitor, newContext); });\n            return;\n        }\n        if (isReactElement(element)) {\n            if (typeof element.type === 'function') {\n                var Comp = element.type;\n                var props = Object.assign({}, Comp.defaultProps, getProps(element));\n                var childContext_1 = context;\n                var child = void 0;\n                if (isComponentClass(Comp)) {\n                    var instance_1 = new Comp(props, context);\n                    Object.defineProperty(instance_1, 'props', {\n                        value: instance_1.props || props,\n                    });\n                    instance_1.context = instance_1.context || context;\n                    instance_1.state = instance_1.state || null;\n                    instance_1.setState = function (newState) {\n                        if (typeof newState === 'function') {\n                            newState = newState(instance_1.state, instance_1.props, instance_1.context);\n                        }\n                        instance_1.state = Object.assign({}, instance_1.state, newState);\n                    };\n                    if (Comp.getDerivedStateFromProps) {\n                        var result = Comp.getDerivedStateFromProps(instance_1.props, instance_1.state);\n                        if (result !== null) {\n                            instance_1.state = Object.assign({}, instance_1.state, result);\n                        }\n                    }\n                    else if (instance_1.UNSAFE_componentWillMount) {\n                        instance_1.UNSAFE_componentWillMount();\n                    }\n                    else if (instance_1.componentWillMount) {\n                        instance_1.componentWillMount();\n                    }\n                    if (providesChildContext(instance_1)) {\n                        childContext_1 = Object.assign({}, context, instance_1.getChildContext());\n                    }\n                    if (visitor(element, instance_1, newContext, context, childContext_1) === false) {\n                        return;\n                    }\n                    child = instance_1.render();\n                }\n                else {\n                    if (visitor(element, null, newContext, context) === false) {\n                        return;\n                    }\n                    child = Comp(props, context);\n                }\n                if (child) {\n                    if (Array.isArray(child)) {\n                        child.forEach(function (item) { return walkTree(item, childContext_1, visitor, newContext); });\n                    }\n                    else {\n                        walkTree(child, childContext_1, visitor, newContext);\n                    }\n                }\n            }\n            else if (element.type._context || element.type.Consumer) {\n                if (visitor(element, null, newContext, context) === false) {\n                    return;\n                }\n                var child = void 0;\n                if (!!element.type._context) {\n                    newContext = new Map(newContext);\n                    newContext.set(element.type, element.props.value);\n                    child = element.props.children;\n                }\n                else {\n                    var value = element.type._currentValue;\n                    if (newContext.has(element.type.Provider)) {\n                        value = newContext.get(element.type.Provider);\n                    }\n                    child = element.props.children(value);\n                }\n                if (child) {\n                    if (Array.isArray(child)) {\n                        child.forEach(function (item) { return walkTree(item, context, visitor, newContext); });\n                    }\n                    else {\n                        walkTree(child, context, visitor, newContext);\n                    }\n                }\n            }\n            else {\n                if (visitor(element, null, newContext, context) === false) {\n                    return;\n                }\n                if (element.props && element.props.children) {\n                    React.Children.forEach(element.props.children, function (child) {\n                        if (child) {\n                            walkTree(child, context, visitor, newContext);\n                        }\n                    });\n                }\n            }\n        }\n        else if (typeof element === 'string' || typeof element === 'number') {\n            visitor(element, null, newContext, context);\n        }\n    }\n\n    var compose = require('lodash.flowright');\n\n    exports.compose = compose;\n    exports.getDataFromTree = getDataFromTree;\n    exports.ApolloConsumer = ApolloConsumer;\n    exports.ApolloProvider = ApolloProvider;\n    exports.Query = Query;\n    exports.Mutation = Mutation;\n    exports.Subscription = Subscription;\n    exports.graphql = graphql;\n    exports.withQuery = withQuery;\n    exports.withMutation = withMutation;\n    exports.withSubscription = withSubscription;\n    exports.withApollo = withApollo;\n    exports.RenderPromises = RenderPromises;\n    exports.getMarkupFromTree = getMarkupFromTree;\n    exports.walkTree = walkTree;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=react-apollo.browser.umd.js.map\n"],"sourceRoot":""}