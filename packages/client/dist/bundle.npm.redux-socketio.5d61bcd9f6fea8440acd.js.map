{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/redux-socketio/dist/index.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","sliceIterator","TypeError","default","socket","_ref","dispatch","getState","action","promise","type","types","rest","obj","keys","indexOf","_objectWithoutProperties","_types","REQUEST","SUCCESS","FAILURE","then","result","catch","error"],"mappings":"6FAEAA,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAGA,IAAAC,EAAAJ,OAAAK,QAAA,SAAAC,GAAmD,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BV,OAAAY,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,GAE/OS,EAAA,WAA4a,gBAAAC,EAAAT,GAA2B,GAAAU,MAAAC,QAAAF,GAA0B,OAAAA,EAAc,GAAAG,OAAAC,YAAApB,OAAAgB,GAA2C,OAAxf,SAAAA,EAAAT,GAAiC,IAAAc,EAAA,GAAeC,GAAA,EAAeC,GAAA,EAAgBC,OAAAC,EAAoB,IAAM,QAAAC,EAAAC,EAAAX,EAAAG,OAAAC,cAA0CE,GAAAI,EAAAC,EAAAC,QAAAC,QAA4CR,EAAAS,KAAAJ,EAAAvB,QAAqBI,GAAAc,EAAAZ,SAAAF,GAAlCe,GAAA,IAAyE,MAAAS,GAAcR,GAAA,EAAWC,EAAAO,EAAY,QAAU,KAAMT,GAAAK,EAAA,QAAAA,EAAA,SAA2C,QAAU,GAAAJ,EAAA,MAAAC,GAAsB,OAAAH,EAA6HW,CAAAhB,EAAAT,GAAuC,UAAA0B,UAAA,yDAAjkB,GAIA/B,EAAAgC,QAAA,SAAAC,GACA,gBAAAC,GACA,IAAAC,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,SACA,gBAAAV,GACA,gBAAAW,GACA,sBAAAA,EACA,OAAAA,EAAAF,EAAAC,GAGA,IAAAE,EAAAD,EAAAC,QACAC,EAAAF,EAAAE,KACAC,EAAAH,EAAAG,MACAC,EAfA,SAAAC,EAAAC,GAA8C,IAAAvC,EAAA,GAAiB,QAAAC,KAAAqC,EAAqBC,EAAAC,QAAAvC,IAAA,GAAoCP,OAAAY,UAAAC,eAAAC,KAAA8B,EAAArC,KAA6DD,EAAAC,GAAAqC,EAAArC,IAAsB,OAAAD,EAe3MyC,CAAAR,EAAA,4BAEA,cAAAE,IAAAD,EACA,OAAAZ,EAAAW,GAGA,IAAAS,EAAAjC,EAAA2B,EAAA,GACAO,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAIA,OAFApB,EAAAxB,EAAA,GAAwBuC,EAAA,CAASF,KAAAQ,KAEjCT,EAAAL,GAAAiB,KAAA,SAAAC,GACA,OAAAzB,EAAAxB,EAAA,GAAiCuC,EAAA,CAASU,SAAAZ,KAAAS,OACjCI,MAAA,SAAAC,GACT,OAAA3B,EAAAxB,EAAA,GAAiCuC,EAAA,CAASY,QAAAd,KAAAU","file":"bundle.npm.redux-socketio.5d61bcd9f6fea8440acd.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nexports.default = function (socket) {\n  return function (_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        if (typeof action === 'function') {\n          return action(dispatch, getState);\n        }\n\n        var promise = action.promise,\n            type = action.type,\n            types = action.types,\n            rest = _objectWithoutProperties(action, ['promise', 'type', 'types']);\n\n        if (type !== 'socket' || !promise) {\n          return next(action);\n        }\n\n        var _types = _slicedToArray(types, 3),\n            REQUEST = _types[0],\n            SUCCESS = _types[1],\n            FAILURE = _types[2];\n\n        next(_extends({}, rest, { type: REQUEST }));\n\n        return promise(socket).then(function (result) {\n          return next(_extends({}, rest, { result: result, type: SUCCESS }));\n        }).catch(function (error) {\n          return next(_extends({}, rest, { error: error, type: FAILURE }));\n        });\n      };\n    };\n  };\n};"],"sourceRoot":""}