{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/socket.io-client/lib/url.js","webpack:////var/www/html/utter/node_modules/socket.io-client/node_modules/debug/src/debug.js","webpack:////var/www/html/utter/node_modules/socket.io-client/lib/on.js","webpack:////var/www/html/utter/node_modules/socket.io-client/node_modules/debug/src/browser.js","webpack:////var/www/html/utter/node_modules/socket.io-client/lib/manager.js","webpack:////var/www/html/utter/node_modules/socket.io-client/lib/index.js","webpack:////var/www/html/utter/node_modules/socket.io-client/lib/socket.js","webpack:////var/www/html/utter/node_modules/socket.io-client/node_modules/ms/index.js"],"names":["parseuri","__webpack_require__","debug","module","exports","uri","loc","obj","location","protocol","host","charAt","test","port","path","indexOf","id","href","createDebug","namespace","prevTime","enabled","self","curr","Date","ms","diff","prev","args","Array","arguments","length","i","coerce","unshift","index","replace","match","format","formatter","formatters","val","call","splice","formatArgs","log","console","bind","apply","useColors","color","hash","charCodeAt","colors","Math","abs","selectColor","destroy","init","instances","push","this","Error","stack","message","disable","enable","namespaces","save","names","skips","split","len","RegExp","substr","instance","name","humanize","ev","fn","on","removeListener","process","load","r","storage","e","Object","NODE_ENV","DEBUG","Function","prototype","c","lastC","removeItem","window","type","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","$1","chrome","local","localStorage","localstorage","j","v","JSON","stringify","err","eio","Socket","Emitter","parser","Backoff","has","hasOwnProperty","Manager","opts","undefined","nsps","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","min","max","jitter","timeout","readyState","connecting","lastPing","encoding","packetBuffer","_parser","encoder","Encoder","decoder","Decoder","autoConnect","open","emitAll","nsp","emit","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","connect","socket","skipReconnect","openSub","onopen","errorSub","data","cleanup","timer","setTimeout","close","clearTimeout","onping","onpong","ondata","add","ondecoded","packet","onerror","onConnecting","query","encode","encodedPackets","write","options","processPacketQueue","pack","shift","subsLength","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","url","lookup","cache","managers","io","parsed","source","sameNamespace","forceNew","multiplex","toArray","parseqs","hasBin","events","connect_error","connect_timeout","error","reconnect_attempt","reconnect_failed","reconnect_error","ping","pong","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","subEvents","send","binary","BINARY_EVENT","EVENT","compress","pop","CONNECT","onpacket","rootNamespaceError","ERROR","onconnect","onevent","ACK","BINARY_ACK","onack","DISCONNECT","ondisconnect","ack","sent","emitBuffered","s","m","h","d","y","plural","n","floor","ceil","str","String","exec","parseFloat","parse","isNaN","long","round","fmtShort"],"mappings":"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","file":"bundle.npm.socket.io-client.b9283a6c5ab923bd6a19.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || (typeof location !== 'undefined' && location);\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n"],"sourceRoot":""}