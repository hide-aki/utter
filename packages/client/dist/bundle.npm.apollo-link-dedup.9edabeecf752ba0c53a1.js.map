{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/apollo-link-dedup/node_modules/zen-observable-ts/lib/bundle.esm.js","webpack:////var/www/html/utter/node_modules/apollo-link-dedup/node_modules/apollo-link/lib/bundle.esm.js","webpack:////var/www/html/utter/node_modules/apollo-link-dedup/lib/bundle.esm.js"],"names":["bundle_esm","a","_super","LinkError","message","link","_this","call","this","Object","tslib_es6","Error","isTerminating","request","length","createOperation","starting","operation","context","defineProperty","enumerable","value","next","printer","query","JSON","stringify","variables","operationName","getKey","passthrough","op","forward","of","toLink","handler","bundle_esm_ApolloLink","empty","from","links","map","reduce","x","y","concat","split","test","left","right","leftLink","rightLink","ApolloLink","prototype","first","second","firstLink","nextLink","invariant_esm","execute","transformedOperation","extensions","lib_bundle_esm","transformOperation","OPERATION_FIELDS","_i","_a","keys","key","indexOf","validateOperation","__webpack_require__","d","__webpack_exports__","bundle_esm_DedupLink","DedupLink","apply","arguments","inFlightRequestObservables","Map","subscribers","getContext","forceFetch","toKey","cleanup","operationKey","delete","get","subscription_1","singleObserver_1","sharedObserver","observer","prev","error","complete","set","bind","subscribe","result","previous","forEach","err","unsubscribe"],"mappings":"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","file":"bundle.npm.apollo-link-dedup.9edabeecf752ba0c53a1.js","sourcesContent":["import zenObservable from 'zen-observable';\n\nvar Observable = zenObservable;\n\nexport default Observable;\nexport { Observable };\n//# sourceMappingURL=bundle.esm.js.map\n","import Observable from 'zen-observable-ts';\nexport { default as Observable } from 'zen-observable-ts';\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { __extends, __assign } from 'tslib';\nimport { print } from 'graphql/language/printer';\nimport { getOperationName } from 'apollo-utilities';\nexport { getOperationName } from 'apollo-utilities';\n\nfunction validateOperation(operation) {\n    var OPERATION_FIELDS = [\n        'query',\n        'operationName',\n        'variables',\n        'extensions',\n        'context',\n    ];\n    for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (OPERATION_FIELDS.indexOf(key) < 0) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(2) : new InvariantError(\"illegal argument: \" + key);\n        }\n    }\n    return operation;\n}\nvar LinkError = (function (_super) {\n    __extends(LinkError, _super);\n    function LinkError(message, link) {\n        var _this = _super.call(this, message) || this;\n        _this.link = link;\n        return _this;\n    }\n    return LinkError;\n}(Error));\nfunction isTerminating(link) {\n    return link.request.length <= 1;\n}\nfunction toPromise(observable) {\n    var completed = false;\n    return new Promise(function (resolve, reject) {\n        observable.subscribe({\n            next: function (data) {\n                if (completed) {\n                    process.env.NODE_ENV === \"production\" || invariant.warn(\"Promise Wrapper does not support multiple results from Observable\");\n                }\n                else {\n                    completed = true;\n                    resolve(data);\n                }\n            },\n            error: reject,\n        });\n    });\n}\nvar makePromise = toPromise;\nfunction fromPromise(promise) {\n    return new Observable(function (observer) {\n        promise\n            .then(function (value) {\n            observer.next(value);\n            observer.complete();\n        })\n            .catch(observer.error.bind(observer));\n    });\n}\nfunction fromError(errorValue) {\n    return new Observable(function (observer) {\n        observer.error(errorValue);\n    });\n}\nfunction transformOperation(operation) {\n    var transformedOperation = {\n        variables: operation.variables || {},\n        extensions: operation.extensions || {},\n        operationName: operation.operationName,\n        query: operation.query,\n    };\n    if (!transformedOperation.operationName) {\n        transformedOperation.operationName =\n            typeof transformedOperation.query !== 'string'\n                ? getOperationName(transformedOperation.query)\n                : '';\n    }\n    return transformedOperation;\n}\nfunction createOperation(starting, operation) {\n    var context = __assign({}, starting);\n    var setContext = function (next) {\n        if (typeof next === 'function') {\n            context = __assign({}, context, next(context));\n        }\n        else {\n            context = __assign({}, context, next);\n        }\n    };\n    var getContext = function () { return (__assign({}, context)); };\n    Object.defineProperty(operation, 'setContext', {\n        enumerable: false,\n        value: setContext,\n    });\n    Object.defineProperty(operation, 'getContext', {\n        enumerable: false,\n        value: getContext,\n    });\n    Object.defineProperty(operation, 'toKey', {\n        enumerable: false,\n        value: function () { return getKey(operation); },\n    });\n    return operation;\n}\nfunction getKey(operation) {\n    return print(operation.query) + \"|\" + JSON.stringify(operation.variables) + \"|\" + operation.operationName;\n}\n\nfunction passthrough(op, forward) {\n    return forward ? forward(op) : Observable.of();\n}\nfunction toLink(handler) {\n    return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\nfunction empty() {\n    return new ApolloLink(function () { return Observable.of(); });\n}\nfunction from(links) {\n    if (links.length === 0)\n        return empty();\n    return links.map(toLink).reduce(function (x, y) { return x.concat(y); });\n}\nfunction split(test, left, right) {\n    var leftLink = toLink(left);\n    var rightLink = toLink(right || new ApolloLink(passthrough));\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n        return new ApolloLink(function (operation) {\n            return test(operation)\n                ? leftLink.request(operation) || Observable.of()\n                : rightLink.request(operation) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return test(operation)\n                ? leftLink.request(operation, forward) || Observable.of()\n                : rightLink.request(operation, forward) || Observable.of();\n        });\n    }\n}\nvar concat = function (first, second) {\n    var firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n        process.env.NODE_ENV === \"production\" || invariant.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\", firstLink));\n        return firstLink;\n    }\n    var nextLink = toLink(second);\n    if (isTerminating(nextLink)) {\n        return new ApolloLink(function (operation) {\n            return firstLink.request(operation, function (op) { return nextLink.request(op) || Observable.of(); }) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return (firstLink.request(operation, function (op) {\n                return nextLink.request(op, forward) || Observable.of();\n            }) || Observable.of());\n        });\n    }\n};\nvar ApolloLink = (function () {\n    function ApolloLink(request) {\n        if (request)\n            this.request = request;\n    }\n    ApolloLink.prototype.split = function (test, left, right) {\n        return this.concat(split(test, left, right || new ApolloLink(passthrough)));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        return concat(this, next);\n    };\n    ApolloLink.prototype.request = function (operation, forward) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError('request is not implemented');\n    };\n    ApolloLink.empty = empty;\n    ApolloLink.from = from;\n    ApolloLink.split = split;\n    ApolloLink.execute = execute;\n    return ApolloLink;\n}());\nfunction execute(link, operation) {\n    return (link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of());\n}\n\nexport { createOperation, makePromise, toPromise, fromPromise, fromError, empty, from, split, concat, ApolloLink, execute };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __extends } from 'tslib';\nimport { Observable, ApolloLink } from 'apollo-link';\n\nvar DedupLink = (function (_super) {\n    __extends(DedupLink, _super);\n    function DedupLink() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.inFlightRequestObservables = new Map();\n        _this.subscribers = new Map();\n        return _this;\n    }\n    DedupLink.prototype.request = function (operation, forward) {\n        var _this = this;\n        if (operation.getContext().forceFetch) {\n            return forward(operation);\n        }\n        var key = operation.toKey();\n        var cleanup = function (operationKey) {\n            _this.inFlightRequestObservables.delete(operationKey);\n            var prev = _this.subscribers.get(operationKey);\n            return prev;\n        };\n        if (!this.inFlightRequestObservables.get(key)) {\n            var singleObserver_1 = forward(operation);\n            var subscription_1;\n            var sharedObserver = new Observable(function (observer) {\n                var prev = _this.subscribers.get(key);\n                if (!prev)\n                    prev = { next: [], error: [], complete: [] };\n                _this.subscribers.set(key, {\n                    next: prev.next.concat([observer.next.bind(observer)]),\n                    error: prev.error.concat([observer.error.bind(observer)]),\n                    complete: prev.complete.concat([observer.complete.bind(observer)]),\n                });\n                if (!subscription_1) {\n                    subscription_1 = singleObserver_1.subscribe({\n                        next: function (result) {\n                            var previous = cleanup(key);\n                            _this.subscribers.delete(key);\n                            if (previous) {\n                                previous.next.forEach(function (next) { return next(result); });\n                                previous.complete.forEach(function (complete) { return complete(); });\n                            }\n                        },\n                        error: function (error) {\n                            var previous = cleanup(key);\n                            _this.subscribers.delete(key);\n                            if (previous)\n                                previous.error.forEach(function (err) { return err(error); });\n                        },\n                    });\n                }\n                return function () {\n                    if (subscription_1)\n                        subscription_1.unsubscribe();\n                    _this.inFlightRequestObservables.delete(key);\n                };\n            });\n            this.inFlightRequestObservables.set(key, sharedObserver);\n        }\n        return this.inFlightRequestObservables.get(key);\n    };\n    return DedupLink;\n}(ApolloLink));\n\nexport { DedupLink };\n//# sourceMappingURL=bundle.esm.js.map\n"],"sourceRoot":""}