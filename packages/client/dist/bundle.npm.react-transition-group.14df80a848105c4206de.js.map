{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/react-transition-group/utils/PropTypes.js","webpack:////var/www/html/utter/node_modules/react-transition-group/utils/ChildMapping.js","webpack:////var/www/html/utter/node_modules/react-transition-group/CSSTransition.js","webpack:////var/www/html/utter/node_modules/react-transition-group/Transition.js","webpack:////var/www/html/utter/node_modules/react-transition-group/TransitionGroup.js","webpack:////var/www/html/utter/node_modules/react-transition-group/ReplaceTransition.js","webpack:////var/www/html/utter/node_modules/react-transition-group/index.js"],"names":["exports","__esModule","classNamesShape","timeoutsShape","obj","__webpack_require__","getChildMapping","mergeChildMappings","getInitialChildMapping","props","onExited","children","child","_react","cloneElement","bind","in","appear","getProp","enter","exit","getNextChildMapping","nextProps","prevChildMapping","nextChildMapping","Object","keys","forEach","key","isValidElement","hasPrev","hasNext","prevChild","isLeaving","mapFn","result","create","Children","map","c","mapper","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","length","push","childMapping","nextKey","pendingNextKey","prop","default","newObj","prototype","hasOwnProperty","call","desc","defineProperty","getOwnPropertyDescriptor","get","set","_interopRequireWildcard","_addClass","_interopRequireDefault","_removeClass","_Transition","_extends","assign","target","arguments","source","apply","this","addClass","node","classes","split","removeClass","CSSTransition","_React$Component","subClass","superClass","_this","_len","args","Array","_key","concat","onEnter","appearing","className","getClassNames","removeClasses","onEntering","activeClassName","reflowAndAddClass","onEntered","doneClassName","onExit","onExiting","type","classNames","constructor","__proto__","_proto","_this$getClassNames7","scrollTop","render","createElement","Component","propTypes","_default","module","EXITING","ENTERED","ENTERING","EXITED","UNMOUNTED","PropTypes","_reactDom","_reactLifecyclesCompat","Transition","context","initialStatus","parentGroup","transitionGroup","isMounting","appearStatus","unmountOnExit","mountOnEnter","state","status","nextCallback","getChildContext","getDerivedStateFromProps","_ref","prevState","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","timeout","undefined","mounting","findDOMNode","performEnter","performExit","setState","_this2","timeouts","enterTimeout","safeSetState","onTransitionEnd","_this3","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","addEndListener","setTimeout","_this$props","childProps","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","only","noop","contextTypes","object","childContextTypes","defaultProps","polyfill","_propTypes","_ChildMapping","_assertThisInitialized","self","ReferenceError","values","k","TransitionGroup","handleExited","firstRender","appeared","mounted","currentChildMapping","component","childFactory","isRequired","_TransitionGroup","ReplaceTransition","_args","handleEnter","_len2","_key2","handleLifecycle","handleEntering","_len3","_key3","handleEntered","_len4","_key4","handleExit","_len5","_key5","handleExiting","_len6","_key6","_len7","_key7","idx","originalArgs","_child$props","toArray","inProp","_React$Children$toArr","first","second","_CSSTransition","_ReplaceTransition"],"mappings":"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","file":"bundle.npm.react-transition-group.14df80a848105c4206de.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.classNamesShape = exports.timeoutsShape = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar timeoutsShape = process.env.NODE_ENV !== 'production' ? _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n  enter: _propTypes.default.number,\n  exit: _propTypes.default.number,\n  appear: _propTypes.default.number\n}).isRequired]) : null;\nexports.timeoutsShape = timeoutsShape;\nvar classNamesShape = process.env.NODE_ENV !== 'production' ? _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({\n  enter: _propTypes.default.string,\n  exit: _propTypes.default.string,\n  active: _propTypes.default.string\n}), _propTypes.default.shape({\n  enter: _propTypes.default.string,\n  enterDone: _propTypes.default.string,\n  enterActive: _propTypes.default.string,\n  exit: _propTypes.default.string,\n  exitDone: _propTypes.default.string,\n  exitActive: _propTypes.default.string\n})]) : null;\nexports.classNamesShape = classNamesShape;","\"use strict\";\n\nexports.__esModule = true;\nexports.getChildMapping = getChildMapping;\nexports.mergeChildMappings = mergeChildMappings;\nexports.getInitialChildMapping = getInitialChildMapping;\nexports.getNextChildMapping = getNextChildMapping;\n\nvar _react = require(\"react\");\n\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\nfunction getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) _react.Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\n\nfunction mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nfunction getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return (0, _react.cloneElement)(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\n\nfunction getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!(0, _react.isValidElement)(child)) return;\n    var hasPrev = key in prevChildMapping;\n    var hasNext = key in nextChildMapping;\n    var prevChild = prevChildMapping[key];\n    var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = (0, _react.cloneElement)(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = (0, _react.cloneElement)(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = (0, _react.cloneElement)(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _addClass = _interopRequireDefault(require(\"dom-helpers/class/addClass\"));\n\nvar _removeClass = _interopRequireDefault(require(\"dom-helpers/class/removeClass\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Transition = _interopRequireDefault(require(\"./Transition\"));\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _addClass.default)(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _removeClass.default)(node, c);\n  });\n};\n/**\n * A `Transition` component using CSS transitions and animations.\n * It's inspired by the excellent [ng-animate](http://www.nganimate.org/) library.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` stages of the transition. The first class is applied and then a\n * second \"active\" class in order to activate the css animation. After the animation,\n * matching `done` class names are applied to persist the animation state.\n *\n * When the `in` prop is toggled to `true` the Component will get\n * the `example-enter` CSS class and the `example-enter-active` CSS class\n * added in the next tick. This is a convention based on the `classNames` prop.\n */\n\n\nvar CSSTransition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.onEnter = function (node, appearing) {\n      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          className = _this$getClassNames.className;\n\n      _this.removeClasses(node, 'exit');\n\n      addClass(node, className);\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node, appearing);\n      }\n    };\n\n    _this.onEntering = function (node, appearing) {\n      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          activeClassName = _this$getClassNames2.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node, appearing);\n      }\n    };\n\n    _this.onEntered = function (node, appearing) {\n      var _this$getClassNames3 = _this.getClassNames('enter'),\n          doneClassName = _this$getClassNames3.doneClassName;\n\n      _this.removeClasses(node, appearing ? 'appear' : 'enter');\n\n      addClass(node, doneClassName);\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(node, appearing);\n      }\n    };\n\n    _this.onExit = function (node) {\n      var _this$getClassNames4 = _this.getClassNames('exit'),\n          className = _this$getClassNames4.className;\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      addClass(node, className);\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    };\n\n    _this.onExiting = function (node) {\n      var _this$getClassNames5 = _this.getClassNames('exit'),\n          activeClassName = _this$getClassNames5.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(node);\n      }\n    };\n\n    _this.onExited = function (node) {\n      var _this$getClassNames6 = _this.getClassNames('exit'),\n          doneClassName = _this$getClassNames6.doneClassName;\n\n      _this.removeClasses(node, 'exit');\n\n      addClass(node, doneClassName);\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var className = typeof classNames !== 'string' ? classNames[type] : classNames + '-' + type;\n      var activeClassName = typeof classNames !== 'string' ? classNames[type + 'Active'] : className + '-active';\n      var doneClassName = typeof classNames !== 'string' ? classNames[type + 'Done'] : className + '-done';\n      return {\n        className: className,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$getClassNames7 = this.getClassNames(type),\n        className = _this$getClassNames7.className,\n        activeClassName = _this$getClassNames7.activeClassName,\n        doneClassName = _this$getClassNames7.doneClassName;\n\n    className && removeClass(node, className);\n    activeClassName && removeClass(node, activeClassName);\n    doneClassName && removeClass(node, doneClassName);\n  };\n\n  _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {\n    // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n    if (className) {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n      /* eslint-enable no-unused-expressions */\n\n      addClass(node, className);\n    }\n  };\n\n  _proto.render = function render() {\n    var props = _extends({}, this.props);\n\n    delete props.classNames;\n    return _react.default.createElement(_Transition.default, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(_react.default.Component);\n\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, _Transition.default.propTypes, {\n  /**\n   * The animation classNames applied to the component as it enters, exits or has finished the transition.\n   * A single name can be provided and it will be suffixed for each stage: e.g.\n   *\n   * `classNames=\"fade\"` applies `fade-enter`, `fade-enter-active`, `fade-enter-done`,\n   * `fade-exit`, `fade-exit-active`, `fade-exit-done`, `fade-appear`, and `fade-appear-active`.\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply spread\n   * them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: _PropTypes.classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nvar _default = CSSTransition;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar UNMOUNTED = 'unmounted';\nexports.UNMOUNTED = UNMOUNTED;\nvar EXITED = 'exited';\nexports.EXITED = EXITED;\nvar ENTERING = 'entering';\nexports.ENTERING = ENTERING;\nvar ENTERED = 'entered';\nexports.ENTERED = ENTERED;\nvar EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the components.\n * It's up to you to give meaning and effect to those states. For example we can\n * add styles to a component when it enters or exits:\n *\n * ```jsx\n * import Transition from 'react-transition-group/Transition';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 0 },\n *   entered:  { opacity: 1 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {(state) => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * As noted the `Transition` component doesn't _do_ anything by itself to its child component.\n * What it does do is track transition states over time so you can update the\n * component (such as by adding styles or classes) when it changes states.\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component begins the\n * \"Enter\" stage. During this stage, the component will shift from its current transition state,\n * to `'entering'` for the duration of the transition and then to the `'entered'` stage once\n * it's complete. Let's take the following example:\n *\n * ```jsx\n * state = { in: false };\n *\n * toggleEnterState = () => {\n *   this.setState({ in: true });\n * }\n *\n * render() {\n *   return (\n *     <div>\n *       <Transition in={this.state.in} timeout={500} />\n *       <button onClick={this.toggleEnterState}>Click to Enter</button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state and\n * stay there for 500ms (the value of `timeout`) before it finally switches to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from `'exiting'` to `'exited'`.\n *\n * ## Timing\n *\n * Timing is often the trickiest part of animation, mistakes can result in slight delays\n * that are hard to pin down. A common example is when you want to add an exit transition,\n * you should set the desired final styles when the state is `'exiting'`. That's when the\n * transition to those styles will start and, if you matched the `timeout` prop with the\n * CSS Transition duration, it will end exactly when the state changes to `'exited'`.\n *\n * > **Note**: For simpler transitions the `Transition` component might be enough, but\n * > take into account that it's platform-agnostic, while the `CSSTransition` component\n * > [forces reflows](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * > in order to make more complex transitions more predictable. For example, even though\n * > classes `example-enter` and `example-enter-active` are applied immediately one after\n * > another, you can still transition from one to the other because of the forced reflow\n * > (read [this issue](https://github.com/reactjs/react-transition-group/issues/159#issuecomment-322761171)\n * > for more info). Take this into account when choosing between `Transition` and\n * > `CSSTransition`.\n */\n\nexports.EXITING = EXITING;\n\nvar Transition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  var _proto = Transition.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: null // allows for nested Transitions\n\n    };\n  };\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  }; // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      var node = _reactDom.default.findDOMNode(this);\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n\n    this.props.onEnter(node, appearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(node, appearing);\n\n      _this2.onTransitionEnd(node, enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit(node) {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n    if (!exit) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n\n    this.props.onExit(node);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(node);\n\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n\n    if (node) {\n      if (this.props.addEndListener) {\n        this.props.addEndListener(node, this.nextCallback);\n      }\n\n      if (timeout != null) {\n        setTimeout(this.nextCallback, timeout);\n      }\n    } else {\n      setTimeout(this.nextCallback, 0);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\n\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n\n    if (typeof children === 'function') {\n      return children(status, childProps);\n    }\n\n    var child = _react.default.Children.only(children);\n\n    return _react.default.cloneElement(child, childProps);\n  };\n\n  return Transition;\n}(_react.default.Component);\n\nTransition.contextTypes = {\n  transitionGroup: PropTypes.object\n};\nTransition.childContextTypes = {\n  transitionGroup: function transitionGroup() {}\n};\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A `function` child can be used instead of a React element.\n   * This function is called with the current transition status\n   * ('entering', 'entered', 'exiting', 'exited', 'unmounted'), which can be used\n   * to apply context specific props to a component.\n   *\n   * ```jsx\n   * <Transition timeout={150}>\n   *   {(status) => (\n   *     <MyComponent className={`fade fade-${status}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\n   * If you want to transition on the first mount set `appear` to `true`, and the\n   * component will transition in as soon as the `<Transition>` mounts.\n   *\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided\n   *\n   * You may specify a single timeout for all transitions like: `timeout={500}`,\n   * or individually like:\n   *\n   * ```jsx\n   * timeout={{\n   *  enter: 300,\n   *  exit: 500,\n   *  appear: 500,\n   * }}\n   * ```\n   *\n   * If the value of appear is not set, then the value from enter is taken.\n   *\n   * @type {number | { enter?: number, exit?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = process.env.NODE_ENV !== \"production\" ? _PropTypes.timeoutsShape : {};;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func // Name the function so it is clearer in the documentation\n\n} : {};\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\n\nvar _default = (0, _reactLifecyclesCompat.polyfill)(Transition);\n\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _ChildMapping = require(\"./utils/ChildMapping\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n  /**\n   * The `<TransitionGroup>` component manages a set of transition components\n   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n   * components, `<TransitionGroup>` is a state machine for managing the mounting\n   * and unmounting of components over time.\n   *\n   * Consider the example below. As items are removed or added to the TodoList the\n   * `in` prop is toggled automatically by the `<TransitionGroup>`.\n   *\n   * Note that `<TransitionGroup>`  does not define any animation behavior!\n   * Exactly _how_ a list item animates is up to the individual transition\n   * component. This means you can mix and match animations across different list\n   * items.\n   */\n\n};\n\nvar TransitionGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this))); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: {\n        isMounting: !this.appeared\n      }\n    };\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n    this.mounted = true;\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  };\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return children;\n    }\n\n    return _react.default.createElement(Component, props, children);\n  };\n\n  return TransitionGroup;\n}(_react.default.Component);\n\nTransitionGroup.childContextTypes = {\n  transitionGroup: _propTypes.default.object.isRequired\n};\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: _propTypes.default.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: _propTypes.default.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: _propTypes.default.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: _propTypes.default.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: _propTypes.default.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\n\nvar _default = (0, _reactLifecyclesCompat.polyfill)(TransitionGroup);\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _TransitionGroup = _interopRequireDefault(require(\"./TransitionGroup\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * The `<ReplaceTransition>` component is a specialized `Transition` component\n * that animates between two children.\n *\n * ```jsx\n * <ReplaceTransition in>\n *   <Fade><div>I appear first</div></Fade>\n *   <Fade><div>I replace the above</div></Fade>\n * </ReplaceTransition>\n * ```\n */\nvar ReplaceTransition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ReplaceTransition, _React$Component);\n\n  function ReplaceTransition() {\n    var _this;\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;\n\n    _this.handleEnter = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _this.handleLifecycle('onEnter', 0, args);\n    };\n\n    _this.handleEntering = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return _this.handleLifecycle('onEntering', 0, args);\n    };\n\n    _this.handleEntered = function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return _this.handleLifecycle('onEntered', 0, args);\n    };\n\n    _this.handleExit = function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      return _this.handleLifecycle('onExit', 1, args);\n    };\n\n    _this.handleExiting = function () {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      return _this.handleLifecycle('onExiting', 1, args);\n    };\n\n    _this.handleExited = function () {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      return _this.handleLifecycle('onExited', 1, args);\n    };\n\n    return _this;\n  }\n\n  var _proto = ReplaceTransition.prototype;\n\n  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {\n    var _child$props;\n\n    var children = this.props.children;\n\n    var child = _react.default.Children.toArray(children)[idx];\n\n    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);\n    if (this.props[handler]) this.props[handler]((0, _reactDom.findDOMNode)(this));\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        inProp = _this$props.in,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\"]);\n\n    var _React$Children$toArr = _react.default.Children.toArray(children),\n        first = _React$Children$toArr[0],\n        second = _React$Children$toArr[1];\n\n    delete props.onEnter;\n    delete props.onEntering;\n    delete props.onEntered;\n    delete props.onExit;\n    delete props.onExiting;\n    delete props.onExited;\n    return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {\n      key: 'first',\n      onEnter: this.handleEnter,\n      onEntering: this.handleEntering,\n      onEntered: this.handleEntered\n    }) : _react.default.cloneElement(second, {\n      key: 'second',\n      onEnter: this.handleExit,\n      onEntering: this.handleExiting,\n      onEntered: this.handleExited\n    }));\n  };\n\n  return ReplaceTransition;\n}(_react.default.Component);\n\nReplaceTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  in: _propTypes.default.bool.isRequired,\n  children: function children(props, propName) {\n    if (_react.default.Children.count(props[propName]) !== 2) return new Error(\"\\\"\" + propName + \"\\\" must be exactly two transition components.\");\n    return null;\n  }\n} : {};\nvar _default = ReplaceTransition;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nvar _CSSTransition = _interopRequireDefault(require(\"./CSSTransition\"));\n\nvar _ReplaceTransition = _interopRequireDefault(require(\"./ReplaceTransition\"));\n\nvar _TransitionGroup = _interopRequireDefault(require(\"./TransitionGroup\"));\n\nvar _Transition = _interopRequireDefault(require(\"./Transition\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = {\n  Transition: _Transition.default,\n  TransitionGroup: _TransitionGroup.default,\n  ReplaceTransition: _ReplaceTransition.default,\n  CSSTransition: _CSSTransition.default\n};"],"sourceRoot":""}