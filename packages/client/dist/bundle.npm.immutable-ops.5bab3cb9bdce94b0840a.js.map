{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/immutable-ops/node_modules/ramda/src/curryN.js","webpack:////var/www/html/utter/node_modules/immutable-ops/node_modules/ramda/src/curry.js","webpack:////var/www/html/utter/node_modules/immutable-ops/node_modules/ramda/src/__.js","webpack:////var/www/html/utter/node_modules/immutable-ops/lib/index.js","webpack:////var/www/html/utter/node_modules/immutable-ops/node_modules/ramda/src/internal/_curry2.js","webpack:////var/www/html/utter/node_modules/immutable-ops/node_modules/ramda/src/internal/_isPlaceholder.js","webpack:////var/www/html/utter/node_modules/immutable-ops/node_modules/ramda/src/internal/_curry1.js","webpack:////var/www/html/utter/node_modules/immutable-ops/node_modules/ramda/src/internal/_curryN.js","webpack:////var/www/html/utter/node_modules/immutable-ops/node_modules/ramda/src/internal/_arity.js"],"names":["_arity","__webpack_require__","_curry1","_curry2","_curryN","module","exports","length","fn","curryN","@@functional/placeholder","Object","defineProperty","value","ops","getBatchToken","undefined","_toConsumableArray3","_interopRequireDefault","_assign2","_defineProperty2","_symbol2","_typeof3","canMutate","getImmutableOps","_2","obj","__esModule","default","forOwn","key","hasOwnProperty","OWNER_ID_TAG","ownerID","newOwnerID","prepareNewObject","instance","configurable","enumerable","addOwnerID","forceArray","arg","Array","PATH_SEPARATOR","normalizePath","pathArg","indexOf","split","mutableSet","mutableMerge","isDeep","_mergeObjs","baseObj","mergeObjs","forEach","mergeObj","assignValue","apply","concat","mutableShallowMerge","bind","mutableDeepMerge","mutableOmit","_keys","_shouldMergeKey","other","immutableMerge","hasChanges","nextObject","willChange","mergeValue","currentValue","recursiveMergeResult","immutableDeepMerge","immutableArrSet","index","arr","newArr","copied","i","fastArrayCopy","mutableArrFilter","func","currIndex","originalIndex","splice","mutableArrSplice","deleteCount","_vals","vals","mutableArrInsert","immutableArrSplice","slice","immutableArrInsert","immutableOperations","merge","deepMerge","omit","keysInObj","filter","newObj","setIn","_pathArg","acc","currRef","valueInPath","pathLen","rootObj","curr","idx","currType","_newObj","pathRepr","Error","insert","push","set","isArrayLike","mutableOperations","originalPathArg","done","immutableOps","mutableOps","batchOps","mutable","batch","batched","_token","_fn","token","immutableOpsBoundToToken","__","_isPlaceholder","f2","a","b","arguments","_b","_a","f1","this","received","combined","argsIdx","left","combinedIdx","result","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9"],"mappings":"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","file":"bundle.npm.immutable-ops.5bab3cb9bdce94b0840a.js","sourcesContent":["var _arity = require('./internal/_arity');\nvar _curry1 = require('./internal/_curry1');\nvar _curry2 = require('./internal/_curry2');\nvar _curryN = require('./internal/_curryN');\n\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value `R.__` may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n * following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nmodule.exports = _curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\n","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\n\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value `R.__` may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n * following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nmodule.exports = _curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nmodule.exports = {'@@functional/placeholder': true};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ops = exports.getBatchToken = undefined;\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _defineProperty = require('babel-runtime/core-js/object/define-property');\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nvar _symbol = require('babel-runtime/core-js/symbol');\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nexports.canMutate = canMutate;\nexports.getImmutableOps = getImmutableOps;\n\nvar _curry = require('ramda/src/curry');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nvar _ = require('ramda/src/__');\n\nvar _2 = _interopRequireDefault(_);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction forOwn(obj, fn) {\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            fn(obj[key], key);\n        }\n    }\n}\n\nfunction isArrayLike(value) {\n    return value && (typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) === 'object' && typeof value.length === 'number' && value.length >= 0 && value.length % 1 === 0;\n}\n\nvar OWNER_ID_TAG = '@@_______immutableOpsOwnerID';\n\nfunction fastArrayCopy(arr) {\n    var copied = new Array(arr.length);\n    for (var i = 0; i < arr.length; i++) {\n        copied[i] = arr[i];\n    }\n    return copied;\n}\n\nfunction canMutate(obj, ownerID) {\n    if (!ownerID) return false;\n    return obj[OWNER_ID_TAG] === ownerID;\n}\n\nvar newOwnerID = typeof _symbol2.default === 'function' ? function () {\n    return (0, _symbol2.default)('ownerID');\n} : function () {\n    return {};\n};\n\nvar getBatchToken = exports.getBatchToken = newOwnerID;\n\nfunction addOwnerID(obj, ownerID) {\n    (0, _defineProperty2.default)(obj, OWNER_ID_TAG, {\n        value: ownerID,\n        configurable: true,\n        enumerable: false\n    });\n\n    return obj;\n}\n\nfunction prepareNewObject(instance, ownerID) {\n    if (ownerID) {\n        addOwnerID(instance, ownerID);\n    }\n    return instance;\n}\n\nfunction forceArray(arg) {\n    if (!(arg instanceof Array)) {\n        return [arg];\n    }\n    return arg;\n}\n\nvar PATH_SEPARATOR = '.';\n\nfunction normalizePath(pathArg) {\n    if (typeof pathArg === 'string') {\n        if (pathArg.indexOf(PATH_SEPARATOR) === -1) {\n            return [pathArg];\n        }\n        return pathArg.split(PATH_SEPARATOR);\n    }\n\n    return pathArg;\n}\n\nfunction mutableSet(key, value, obj) {\n    obj[key] = value;\n    return obj;\n}\n\nfunction mutableSetIn(_pathArg, value, obj) {\n    var originalPathArg = normalizePath(_pathArg);\n\n    var pathLen = originalPathArg.length;\n\n    var done = false;\n    var idx = 0;\n    var acc = obj;\n    var curr = originalPathArg[idx];\n\n    while (!done) {\n        if (idx === pathLen - 1) {\n            acc[curr] = value;\n            done = true;\n        } else {\n            var currType = (0, _typeof3.default)(acc[curr]);\n\n            if (currType === 'undefined') {\n                var newObj = {};\n                prepareNewObject(newObj, null);\n                acc[curr] = newObj;\n            } else if (currType !== 'object') {\n                var pathRepr = originalPathArg[idx - 1] + '.' + curr;\n                throw new Error('A non-object value was encountered when traversing setIn path at ' + pathRepr + '.');\n            }\n            acc = acc[curr];\n            idx++;\n            curr = originalPathArg[idx];\n        }\n    }\n\n    return obj;\n}\n\nfunction valueInPath(_pathArg, obj) {\n    var pathArg = normalizePath(_pathArg);\n\n    var acc = obj;\n    for (var i = 0; i < pathArg.length; i++) {\n        var curr = pathArg[i];\n        var currRef = acc[curr];\n        if (i === pathArg.length - 1) {\n            return currRef;\n        }\n\n        if ((typeof currRef === 'undefined' ? 'undefined' : (0, _typeof3.default)(currRef)) === 'object') {\n            acc = currRef;\n        } else {\n            return undefined;\n        }\n    }\n}\n\nfunction immutableSetIn(ownerID, _pathArg, value, obj) {\n    var pathArg = normalizePath(_pathArg);\n\n    var currentValue = valueInPath(pathArg, obj);\n    if (value === currentValue) return obj;\n\n    var pathLen = pathArg.length;\n\n    var acc = void 0;\n    if (canMutate(obj, ownerID)) {\n        acc = obj;\n    } else {\n        acc = (0, _assign2.default)(prepareNewObject({}, ownerID), obj);\n    }\n\n    var rootObj = acc;\n\n    pathArg.forEach(function (curr, idx) {\n        if (idx === pathLen - 1) {\n            acc[curr] = value;\n            return;\n        }\n\n        var currRef = acc[curr];\n        var currType = typeof currRef === 'undefined' ? 'undefined' : (0, _typeof3.default)(currRef);\n\n        if (currType === 'object') {\n            if (canMutate(currRef, ownerID)) {\n                acc = currRef;\n            } else {\n                var newObj = prepareNewObject({}, ownerID);\n                acc[curr] = (0, _assign2.default)(newObj, currRef);\n                acc = newObj;\n            }\n            return;\n        }\n\n        if (currType === 'undefined') {\n            var _newObj = prepareNewObject({}, ownerID);\n            acc[curr] = _newObj;\n            acc = _newObj;\n            return;\n        }\n\n        var pathRepr = pathArg[idx - 1] + '.' + curr;\n        throw new Error('A non-object value was encountered when traversing setIn path at ' + pathRepr + '.');\n    });\n\n    return rootObj;\n}\n\nfunction mutableMerge(isDeep, _mergeObjs, baseObj) {\n    var mergeObjs = forceArray(_mergeObjs);\n\n    if (isDeep) {\n        mergeObjs.forEach(function (mergeObj) {\n            forOwn(mergeObj, function (value, key) {\n                if (isDeep && baseObj.hasOwnProperty(key)) {\n                    var assignValue = void 0;\n                    if ((typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) === 'object') {\n                        assignValue = mutableMerge(isDeep, [value], baseObj[key]);\n                    } else {\n                        assignValue = value;\n                    }\n\n                    baseObj[key] = assignValue;\n                } else {\n                    baseObj[key] = value;\n                }\n            });\n        });\n    } else {\n        _assign2.default.apply(Object, [baseObj].concat((0, _toConsumableArray3.default)(mergeObjs)));\n    }\n\n    return baseObj;\n}\n\nvar mutableShallowMerge = mutableMerge.bind(null, false);\nvar mutableDeepMerge = mutableMerge.bind(null, true);\n\nfunction mutableOmit(_keys, obj) {\n    var keys = forceArray(_keys);\n    keys.forEach(function (key) {\n        delete obj[key];\n    });\n    return obj;\n}\n\nfunction _shouldMergeKey(obj, other, key) {\n    return obj[key] !== other[key];\n}\n\nfunction immutableMerge(isDeep, ownerID, _mergeObjs, obj) {\n    if (canMutate(obj, ownerID)) return mutableMerge(isDeep, _mergeObjs, obj);\n    var mergeObjs = forceArray(_mergeObjs);\n\n    var hasChanges = false;\n    var nextObject = obj;\n\n    var willChange = function willChange() {\n        if (!hasChanges) {\n            hasChanges = true;\n            nextObject = (0, _assign2.default)({}, obj);\n            prepareNewObject(nextObject, ownerID);\n        }\n    };\n\n    mergeObjs.forEach(function (mergeObj) {\n        forOwn(mergeObj, function (mergeValue, key) {\n            if (isDeep && obj.hasOwnProperty(key)) {\n                var currentValue = nextObject[key];\n                if ((typeof mergeValue === 'undefined' ? 'undefined' : (0, _typeof3.default)(mergeValue)) === 'object' && !(mergeValue instanceof Array)) {\n                    if (_shouldMergeKey(nextObject, mergeObj, key)) {\n                        var recursiveMergeResult = immutableMerge(isDeep, ownerID, mergeValue, currentValue);\n\n                        if (recursiveMergeResult !== currentValue) {\n                            willChange();\n                            nextObject[key] = recursiveMergeResult;\n                        }\n                    }\n                    return true; // continue forOwn\n                }\n            }\n            if (_shouldMergeKey(nextObject, mergeObj, key)) {\n                willChange();\n                nextObject[key] = mergeValue;\n            }\n        });\n    });\n\n    return nextObject;\n}\n\nvar immutableDeepMerge = immutableMerge.bind(null, true);\nvar immutableShallowMerge = immutableMerge.bind(null, false);\n\nfunction immutableArrSet(ownerID, index, value, arr) {\n    if (canMutate(arr, ownerID)) return mutableSet(index, value, arr);\n\n    if (arr[index] === value) return arr;\n\n    var newArr = fastArrayCopy(arr);\n    newArr[index] = value;\n    prepareNewObject(newArr, ownerID);\n\n    return newArr;\n}\n\nfunction immutableSet(ownerID, key, value, obj) {\n    if (isArrayLike(obj)) return immutableArrSet(ownerID, key, value, obj);\n    if (canMutate(obj, ownerID)) return mutableSet(key, value, obj);\n\n    if (obj[key] === value) return obj;\n\n    var newObj = (0, _assign2.default)({}, obj);\n    prepareNewObject(newObj, ownerID);\n    newObj[key] = value;\n    return newObj;\n}\n\nfunction immutableOmit(ownerID, _keys, obj) {\n    if (canMutate(obj, ownerID)) return mutableOmit(_keys, obj);\n\n    var keys = forceArray(_keys);\n    var keysInObj = keys.filter(function (key) {\n        return obj.hasOwnProperty(key);\n    });\n\n    // None of the keys were in the object, so we can return `obj`.\n    if (keysInObj.length === 0) return obj;\n\n    var newObj = (0, _assign2.default)({}, obj);\n    keysInObj.forEach(function (key) {\n        delete newObj[key];\n    });\n    prepareNewObject(newObj, ownerID);\n    return newObj;\n}\n\nfunction mutableArrPush(_vals, arr) {\n    var vals = forceArray(_vals);\n    arr.push.apply(arr, (0, _toConsumableArray3.default)(vals));\n    return arr;\n}\n\nfunction mutableArrFilter(func, arr) {\n    var currIndex = 0;\n    var originalIndex = 0;\n    while (currIndex < arr.length) {\n        var item = arr[currIndex];\n        if (!func(item, originalIndex)) {\n            arr.splice(currIndex, 1);\n        } else {\n            currIndex++;\n        }\n        originalIndex++;\n    }\n\n    return arr;\n}\n\nfunction mutableArrSplice(index, deleteCount, _vals, arr) {\n    var vals = forceArray(_vals);\n    arr.splice.apply(arr, [index, deleteCount].concat((0, _toConsumableArray3.default)(vals)));\n    return arr;\n}\n\nfunction mutableArrInsert(index, _vals, arr) {\n    return mutableArrSplice(index, 0, _vals, arr);\n}\n\nfunction immutableArrSplice(ownerID, index, deleteCount, _vals, arr) {\n    if (canMutate(arr, ownerID)) return mutableArrSplice(index, deleteCount, _vals, arr);\n\n    var vals = forceArray(_vals);\n    var newArr = arr.slice();\n    prepareNewObject(newArr, ownerID);\n    newArr.splice.apply(newArr, [index, deleteCount].concat((0, _toConsumableArray3.default)(vals)));\n\n    return newArr;\n}\n\nfunction immutableArrInsert(ownerID, index, _vals, arr) {\n    if (canMutate(arr, ownerID)) return mutableArrInsert(index, _vals, arr);\n    return immutableArrSplice(ownerID, index, 0, _vals, arr);\n}\n\nfunction immutableArrPush(ownerID, vals, arr) {\n    return immutableArrInsert(ownerID, arr.length, vals, arr);\n}\n\nfunction immutableArrFilter(ownerID, func, arr) {\n    if (canMutate(arr, ownerID)) return mutableArrFilter(func, arr);\n    var newArr = arr.filter(func);\n\n    if (newArr.length === arr.length) return arr;\n\n    prepareNewObject(newArr, ownerID);\n    return newArr;\n}\n\nvar immutableOperations = {\n    // object operations\n    merge: immutableShallowMerge,\n    deepMerge: immutableDeepMerge,\n    omit: immutableOmit,\n    setIn: immutableSetIn,\n\n    // array operations\n    insert: immutableArrInsert,\n    push: immutableArrPush,\n    filter: immutableArrFilter,\n    splice: immutableArrSplice,\n\n    // both\n    set: immutableSet\n};\n\nvar mutableOperations = {\n    // object operations\n    merge: mutableShallowMerge,\n    deepMerge: mutableDeepMerge,\n    omit: mutableOmit,\n    setIn: mutableSetIn,\n\n    // array operations\n    insert: mutableArrInsert,\n    push: mutableArrPush,\n    filter: mutableArrFilter,\n    splice: mutableArrSplice,\n\n    // both\n    set: mutableSet\n};\n\nfunction getImmutableOps() {\n    var immutableOps = (0, _assign2.default)({}, immutableOperations);\n    forOwn(immutableOps, function (value, key) {\n        immutableOps[key] = (0, _curry2.default)(value.bind(null, null));\n    });\n\n    var mutableOps = (0, _assign2.default)({}, mutableOperations);\n    forOwn(mutableOps, function (value, key) {\n        mutableOps[key] = (0, _curry2.default)(value);\n    });\n\n    var batchOps = (0, _assign2.default)({}, immutableOperations);\n    forOwn(batchOps, function (value, key) {\n        batchOps[key] = (0, _curry2.default)(value);\n    });\n\n    function batched(_token, _fn) {\n        var token = void 0;\n        var fn = void 0;\n\n        if (typeof _token === 'function') {\n            fn = _token;\n            token = getBatchToken();\n        } else {\n            token = _token;\n            fn = _fn;\n        }\n\n        var immutableOpsBoundToToken = (0, _assign2.default)({}, immutableOperations);\n        forOwn(immutableOpsBoundToToken, function (value, key) {\n            immutableOpsBoundToToken[key] = (0, _curry2.default)(value.bind(null, token));\n        });\n        return fn(immutableOpsBoundToToken);\n    }\n\n    return (0, _assign2.default)(immutableOps, {\n        mutable: mutableOps,\n        batch: batchOps,\n        batched: batched,\n        __: _2.default,\n        getBatchToken: getBatchToken\n    });\n}\n\nvar ops = exports.ops = getImmutableOps();\n\nexports.default = ops;","var _curry1 = require('./_curry1');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2\n             : _curry1(function(_b) { return fn(a, _b); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b); })\n             : fn(a, b);\n    }\n  };\n};\n","module.exports = function _isPlaceholder(a) {\n  return a != null &&\n         typeof a === 'object' &&\n         a['@@functional/placeholder'] === true;\n};\n","var _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n};\n","var _arity = require('./_arity');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curryN(length, received, fn) {\n  return function() {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length &&\n          (!_isPlaceholder(received[combinedIdx]) ||\n           argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined)\n                     : _arity(left, _curryN(length, combined, fn));\n  };\n};\n","module.exports = function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0: return function() { return fn.apply(this, arguments); };\n    case 1: return function(a0) { return fn.apply(this, arguments); };\n    case 2: return function(a0, a1) { return fn.apply(this, arguments); };\n    case 3: return function(a0, a1, a2) { return fn.apply(this, arguments); };\n    case 4: return function(a0, a1, a2, a3) { return fn.apply(this, arguments); };\n    case 5: return function(a0, a1, a2, a3, a4) { return fn.apply(this, arguments); };\n    case 6: return function(a0, a1, a2, a3, a4, a5) { return fn.apply(this, arguments); };\n    case 7: return function(a0, a1, a2, a3, a4, a5, a6) { return fn.apply(this, arguments); };\n    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) { return fn.apply(this, arguments); };\n    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) { return fn.apply(this, arguments); };\n    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) { return fn.apply(this, arguments); };\n    default: throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n};\n"],"sourceRoot":""}