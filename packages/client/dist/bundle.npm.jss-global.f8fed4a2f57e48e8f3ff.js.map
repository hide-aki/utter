{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/jss-global/lib/index.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","onCreateRule","name","styles","options","propKey","GlobalContainerRule","substr","prefixKey","GlobalPrefixedRule","parent","type","global","selector","onProcessRule","rule","style","rules","sheet","addRule","addScope","handleNestedGlobalContainerRule","prop","handlePrefixedGlobalRule","_jss","__webpack_require__","_classCallCheck","instance","TypeError","this","RuleList","add","process","get","jss","plugins","indexOf","toString","createRule","separatorRegExp","scope","parts","split","scoped","trim"],"mappings":"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","file":"bundle.npm.jss-global.f8fed4a2f57e48e8f3ff.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports['default'] = jssGlobal;\n\nvar _jss = require('jss');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar propKey = '@global';\nvar prefixKey = '@global ';\n\nvar GlobalContainerRule = function () {\n  function GlobalContainerRule(key, styles, options) {\n    _classCallCheck(this, GlobalContainerRule);\n\n    this.type = 'global';\n\n    this.key = key;\n    this.options = options;\n    this.rules = new _jss.RuleList(_extends({}, options, {\n      parent: this\n    }));\n\n    for (var selector in styles) {\n      this.rules.add(selector, styles[selector], { selector: selector });\n    }\n\n    this.rules.process();\n  }\n\n  /**\n   * Get a rule.\n   */\n\n\n  _createClass(GlobalContainerRule, [{\n    key: 'getRule',\n    value: function getRule(name) {\n      return this.rules.get(name);\n    }\n\n    /**\n     * Create and register rule, run plugins.\n     */\n\n  }, {\n    key: 'addRule',\n    value: function addRule(name, style, options) {\n      var rule = this.rules.add(name, style, options);\n      this.options.jss.plugins.onProcessRule(rule);\n      return rule;\n    }\n\n    /**\n     * Get index of a rule.\n     */\n\n  }, {\n    key: 'indexOf',\n    value: function indexOf(rule) {\n      return this.rules.indexOf(rule);\n    }\n\n    /**\n     * Generates a CSS string.\n     */\n\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return this.rules.toString();\n    }\n  }]);\n\n  return GlobalContainerRule;\n}();\n\nvar GlobalPrefixedRule = function () {\n  function GlobalPrefixedRule(name, style, options) {\n    _classCallCheck(this, GlobalPrefixedRule);\n\n    this.name = name;\n    this.options = options;\n    var selector = name.substr(prefixKey.length);\n    this.rule = options.jss.createRule(selector, style, _extends({}, options, {\n      parent: this,\n      selector: selector\n    }));\n  }\n\n  _createClass(GlobalPrefixedRule, [{\n    key: 'toString',\n    value: function toString(options) {\n      return this.rule.toString(options);\n    }\n  }]);\n\n  return GlobalPrefixedRule;\n}();\n\nvar separatorRegExp = /\\s*,\\s*/g;\n\nfunction addScope(selector, scope) {\n  var parts = selector.split(separatorRegExp);\n  var scoped = '';\n  for (var i = 0; i < parts.length; i++) {\n    scoped += scope + ' ' + parts[i].trim();\n    if (parts[i + 1]) scoped += ', ';\n  }\n  return scoped;\n}\n\nfunction handleNestedGlobalContainerRule(rule) {\n  var options = rule.options,\n      style = rule.style;\n\n  var rules = style[propKey];\n\n  if (!rules) return;\n\n  for (var name in rules) {\n    options.sheet.addRule(name, rules[name], _extends({}, options, {\n      selector: addScope(name, rule.selector)\n    }));\n  }\n\n  delete style[propKey];\n}\n\nfunction handlePrefixedGlobalRule(rule) {\n  var options = rule.options,\n      style = rule.style;\n\n  for (var prop in style) {\n    if (prop.substr(0, propKey.length) !== propKey) continue;\n\n    var selector = addScope(prop.substr(propKey.length), rule.selector);\n    options.sheet.addRule(selector, style[prop], _extends({}, options, {\n      selector: selector\n    }));\n    delete style[prop];\n  }\n}\n\n/**\n * Convert nested rules to separate, remove them from original styles.\n *\n * @param {Rule} rule\n * @api public\n */\nfunction jssGlobal() {\n  function onCreateRule(name, styles, options) {\n    if (name === propKey) {\n      return new GlobalContainerRule(name, styles, options);\n    }\n\n    if (name[0] === '@' && name.substr(0, prefixKey.length) === prefixKey) {\n      return new GlobalPrefixedRule(name, styles, options);\n    }\n\n    var parent = options.parent;\n\n\n    if (parent) {\n      if (parent.type === 'global' || parent.options.parent.type === 'global') {\n        options.global = true;\n      }\n    }\n\n    if (options.global) options.selector = name;\n\n    return null;\n  }\n\n  function onProcessRule(rule) {\n    if (rule.type !== 'style') return;\n\n    handleNestedGlobalContainerRule(rule);\n    handlePrefixedGlobalRule(rule);\n  }\n\n  return { onCreateRule: onCreateRule, onProcessRule: onProcessRule };\n}"],"sourceRoot":""}