{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/property-expr/index.js"],"names":["Cache","maxSize","this","_maxSize","clear","prototype","_size","_values","get","key","set","value","hasOwnProperty","SPLIT_REGEX","DIGIT_REGEX","LEAD_DIGIT_REGEX","SPEC_CHAR_REGEX","CLEAN_QUOTES_REGEX","contentSecurityPolicy","pathCache","setCache","getCache","Function","error","normalizePath","path","split","map","part","replace","match","expr","expression","safe","param","charAt","isLast","result","parts","forEach","isBracket","isArray","idx","length","Array","join","makeSafe","iter","thisArg","len","shouldBeQuoted","isQuoted","test","call","str","indexOf","hasLeadingNumber","hasSpecialChars","module","exports","setter","data","index","setterFallback","getter","getterFallback","segments","reduce","cb"],"mappings":"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","file":"bundle.npm.property-expr.27c626c2ad61f140e251.js","sourcesContent":["/**\n * Based on Kendo UI Core expression code <https://github.com/telerik/kendo-ui-core#license-information>\n */\n'use strict'\n\nfunction Cache(maxSize) {\n  this._maxSize = maxSize\n  this.clear()\n}\nCache.prototype.clear = function() {\n  this._size = 0\n  this._values = {}\n}\nCache.prototype.get = function(key) {\n  return this._values[key]\n}\nCache.prototype.set = function(key, value) {\n  this._size >= this._maxSize && this.clear()\n  if (!this._values.hasOwnProperty(key)) {\n    this._size++\n  }\n  return this._values[key] = value\n}\n\nvar SPLIT_REGEX = /[^.^\\]^[]+|(?=\\[\\]|\\.\\.)/g,\n  DIGIT_REGEX = /^\\d+$/,\n  LEAD_DIGIT_REGEX = /^\\d/,\n  SPEC_CHAR_REGEX = /[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g,\n  CLEAN_QUOTES_REGEX = /^\\s*(['\"]?)(.*?)(\\1)\\s*$/,\n  MAX_CACHE_SIZE = 512\n\nvar contentSecurityPolicy = false,\n  pathCache = new Cache(MAX_CACHE_SIZE),\n  setCache = new Cache(MAX_CACHE_SIZE),\n  getCache = new Cache(MAX_CACHE_SIZE)\n\ntry {\n  new Function('')\n} catch (error) {\n  contentSecurityPolicy = true\n}\n\nmodule.exports = {\n  Cache: Cache,\n\n  expr: expr,\n\n  split: split,\n\n  normalizePath: normalizePath,\n\n  setter: contentSecurityPolicy\n    ? function(path) {\n      var parts = normalizePath(path)\n      return function(data, value) {\n        return setterFallback(parts, data, value)\n      }\n    }\n    : function(path) {\n      return setCache.get(path) || setCache.set(\n        path,\n        new Function(\n          'data, value',\n          expr(path, 'data') + ' = value'\n        )\n      )\n    },\n\n  getter: contentSecurityPolicy\n    ? function(path, safe) {\n      var parts = normalizePath(path)\n      return function(data) {\n        return getterFallback(parts, safe, data)\n      }\n    }\n    : function(path, safe) {\n      var key = path + '_' + safe\n      return getCache.get(key) || getCache.set(\n        key,\n        new Function('data', 'return ' + expr(path, safe, 'data'))\n      )\n    },\n\n  join: function(segments) {\n    return segments.reduce(function(path, part) {\n      return (\n        path +\n        (isQuoted(part) || DIGIT_REGEX.test(part)\n          ? '[' + part + ']'\n          : (path ? '.' : '') + part)\n      )\n    }, '')\n  },\n\n  forEach: function(path, cb, thisArg) {\n    forEach(split(path), cb, thisArg)\n  }\n}\n\nfunction setterFallback(parts, data, value) {\n  var index = 0,\n    len = parts.length\n  while (index < len - 1) {\n    data = data[parts[index++]]\n  }\n  data[parts[index]] = value\n}\n\nfunction getterFallback(parts, safe, data) {\n  var index = 0,\n    len = parts.length\n  while (index < len) {\n    if (data != null || !safe) {\n      data = data[parts[index++]]\n    } else {\n      return\n    }\n  }\n  return data\n}\n\nfunction normalizePath(path) {\n  return pathCache.get(path) || pathCache.set(\n    path,\n    split(path).map(function(part) {\n      return part.replace(CLEAN_QUOTES_REGEX, '$2')\n    })\n  )\n}\n\nfunction split(path) {\n  return path.match(SPLIT_REGEX)\n}\n\nfunction expr(expression, safe, param) {\n  expression = expression || ''\n\n  if (typeof safe === 'string') {\n    param = safe\n    safe = false\n  }\n\n  param = param || 'data'\n\n  if (expression && expression.charAt(0) !== '[') expression = '.' + expression\n\n  return safe ? makeSafe(expression, param) : param + expression\n}\n\nfunction forEach(parts, iter, thisArg) {\n  var len = parts.length,\n    part,\n    idx,\n    isArray,\n    isBracket\n\n  for (idx = 0; idx < len; idx++) {\n    part = parts[idx]\n\n    if (part) {\n      if (shouldBeQuoted(part)) {\n        part = '\"' + part + '\"'\n      }\n\n      isBracket = isQuoted(part)\n      isArray = !isBracket && /^\\d+$/.test(part)\n\n      iter.call(thisArg, part, isBracket, isArray, idx, parts)\n    }\n  }\n}\n\nfunction isQuoted(str) {\n  return (\n    typeof str === 'string' && str && [\"'\", '\"'].indexOf(str.charAt(0)) !== -1\n  )\n}\n\nfunction makeSafe(path, param) {\n  var result = param,\n    parts = split(path),\n    isLast\n\n  forEach(parts, function(part, isBracket, isArray, idx, parts) {\n    isLast = idx === parts.length - 1\n\n    part = isBracket || isArray ? '[' + part + ']' : '.' + part\n\n    result += part + (!isLast ? ' || {})' : ')')\n  })\n\n  return new Array(parts.length + 1).join('(') + result\n}\n\nfunction hasLeadingNumber(part) {\n  return part.match(LEAD_DIGIT_REGEX) && !part.match(DIGIT_REGEX)\n}\n\nfunction hasSpecialChars(part) {\n  return SPEC_CHAR_REGEX.test(part)\n}\n\nfunction shouldBeQuoted(part) {\n  return !isQuoted(part) && (hasLeadingNumber(part) || hasSpecialChars(part))\n}\n"],"sourceRoot":""}