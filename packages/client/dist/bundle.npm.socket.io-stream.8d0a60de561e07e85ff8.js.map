{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/socket.io-stream/lib/index.js","webpack:////var/www/html/utter/node_modules/socket.io-stream/lib/socket.js","webpack:////var/www/html/utter/node_modules/socket.io-stream/index.js","webpack:////var/www/html/utter/node_modules/socket.io-stream/lib/blob-read-stream.js","webpack:////var/www/html/utter/node_modules/socket.io-stream/lib/uuid.js","webpack:////var/www/html/utter/node_modules/socket.io-stream/lib/parser.js","webpack:////var/www/html/utter/node_modules/socket.io-stream/node_modules/debug/browser.js","webpack:////var/www/html/utter/node_modules/socket.io-stream/lib/iostream.js","webpack:////var/www/html/utter/node_modules/socket.io-stream/node_modules/ms/index.js","webpack:////var/www/html/utter/node_modules/socket.io-stream/node_modules/debug/debug.js"],"names":["Buffer","Socket","__webpack_require__","IOStream","BlobReadStream","exports","module","sio","options","forceBase64","_streamSocket","createStream","createBlobReadStream","blob","global","util","EventEmitter","bind","parser","debug","emit","prototype","on","slice","Array","this","call","streams","encoder","Encoder","decoder","Decoder","eventName","event","events","inherits","$emit","type","indexOf","apply","arguments","_stream","listener","_onstream","self","args","ack","length","decode","encode","concat","_read","id","size","_write","chunk","encoding","callback","isBuffer","toString","toArrayBuffer","buffer","_end","_error","err","message","TypeError","onstream","_onread","stream","_onwrite","ArrayBuffer","Uint8Array","_onend","_onerror","Error","remote","_ondisconnect","destroy","_onencode","socket","destroyed","_ondecode","cleanup","Readable","fileReader","webkitSlice","mozSlice","start","sync","synchronous","FileReaderSync","FileReader","onload","onerror","end","bufferChunk","readAsArrayBuffer","push","_onload","e","target","result","error","b","a","Math","random","replace","v","encodeStream","isArray","encodeArray","encodeObject","$stream","arr","i","len","obj","k","hasOwnProperty","decodeStream","decodeArray","decodeObject","load","r","storage","log","console","Function","formatArgs","useColors","namespace","humanize","diff","c","color","index","lastC","match","splice","save","namespaces","removeItem","document","documentElement","style","window","firebug","exception","table","navigator","userAgent","toLowerCase","parseInt","RegExp","$1","chrome","local","localStorage","localstorage","colors","formatters","j","JSON","stringify","enable","Duplex","uuid","super_","pushBuffer","writeBuffer","_readable","_writable","allowHalfOpen","_onfinish","readable","writable","shift","write","ret","_done","_writableState","ended","_readableState","endEmitted","read","finished","s","m","h","d","y","plural","ms","n","name","floor","ceil","val","str","exec","parseFloat","parse","long","round","short","disabled","enabled","curr","Date","prevTime","prev","prevColor","coerce","format","formatter","logFn","fn","stack","disable","split","skips","substr","names","test"],"mappings":"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","file":"bundle.npm.socket.io-stream.8d0a60de561e07e85ff8.js","sourcesContent":["var Socket = require('./socket');\nvar IOStream = require('./iostream');\nvar BlobReadStream = require('./blob-read-stream');\n\n\nexports = module.exports = lookup;\n\n/**\n * Expose Node Buffer for browser.\n *\n * @api public\n */\nexports.Buffer = Buffer;\n\n/**\n * Expose Socket constructor.\n *\n * @api public\n */\nexports.Socket = Socket;\n\n/**\n * Expose IOStream constructor.\n *\n * @api public\n */\nexports.IOStream = IOStream;\n\n/**\n * Forces base 64 encoding when emitting. Must be set to true for Socket.IO v0.9 or lower.\n *\n * @api public\n */\nexports.forceBase64 = false;\n\n/**\n * Look up an existing Socket.\n *\n * @param {socket.io#Socket} socket.io\n * @param {Object} options\n * @return {Socket} Socket instance\n * @api public\n */\nfunction lookup(sio, options) {\n  options = options || {};\n  if (null == options.forceBase64) {\n    options.forceBase64 = exports.forceBase64;\n  }\n\n  if (!sio._streamSocket) {\n    sio._streamSocket = new Socket(sio, options);\n  }\n  return sio._streamSocket;\n}\n\n/**\n * Creates a new duplex stream.\n *\n * @param {Object} options\n * @return {IOStream} duplex stream\n * @api public\n */\nexports.createStream = function(options) {\n  return new IOStream(options);\n};\n\n/**\n * Creates a new readable stream for Blob/File on browser.\n *\n * @param {Blob} blob\n * @param {Object} options\n * @return {BlobReadStream} stream\n * @api public\n */\nexports.createBlobReadStream = function(blob, options) {\n  return new BlobReadStream(blob, options);\n};\n","var util = require('util');\nvar EventEmitter = require('events').EventEmitter;\nvar bind = require('component-bind');\nvar IOStream = require('./iostream');\nvar parser = require('./parser');\nvar debug = require('debug')('socket.io-stream:socket');\nvar emit = EventEmitter.prototype.emit;\nvar on = EventEmitter.prototype.on;\nvar slice = Array.prototype.slice;\n\n\nexports = module.exports = Socket;\n\n/**\n * Base event name for messaging.\n *\n * @api public\n */\nexports.event = '$stream';\n\nexports.events = [\n  'error',\n  'newListener',\n  'removeListener'\n];\n\nutil.inherits(Socket, EventEmitter);\n\n/**\n * Bidirectional stream socket which wraps Socket.IO.\n *\n * @param {socket.io#Socket} socket.io\n * @api public\n */\nfunction Socket(sio, options) {\n  if (!(this instanceof Socket)) {\n    return new Socket(sio, options);\n  }\n\n  EventEmitter.call(this);\n\n  options = options || {};\n\n  this.sio = sio;\n  this.forceBase64 = !!options.forceBase64;\n  this.streams = {};\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n\n  var eventName = exports.event;\n  sio.on(eventName, bind(this, emit));\n  sio.on(eventName + '-read', bind(this, '_onread'));\n  sio.on(eventName + '-write', bind(this, '_onwrite'));\n  sio.on(eventName + '-end', bind(this, '_onend'));\n  sio.on(eventName + '-error', bind(this, '_onerror'));\n  sio.on('error', bind(this, emit, 'error'));\n  sio.on('disconnect', bind(this, '_ondisconnect'));\n\n  this.encoder.on('stream', bind(this, '_onencode'));\n  this.decoder.on('stream', bind(this, '_ondecode'));\n}\n\n/**\n * Original emit function.\n *\n * @api private\n */\nSocket.prototype.$emit = emit;\n\n/**\n * Emits streams to this corresponding server/client.\n *\n * @return {Socket} self\n * @api public\n */\nSocket.prototype.emit = function(type) {\n  if (~exports.events.indexOf(type)) {\n    return emit.apply(this, arguments);\n  }\n  this._stream.apply(this, arguments);\n  return this;\n};\n\nSocket.prototype.on = function(type, listener) {\n  if (~exports.events.indexOf(type)) {\n    return on.apply(this, arguments);\n  }\n\n  this._onstream(type, listener);\n  return this;\n};\n\n/**\n * Sends a new stream request.\n *\n * @param {String} event type\n * @api private\n */\nSocket.prototype._stream = function(type) {\n  debug('sending new streams');\n\n  var self = this;\n  var args = slice.call(arguments, 1);\n  var ack = args[args.length - 1];\n  if ('function' == typeof ack) {\n    args[args.length - 1] = function() {\n      var args = slice.call(arguments);\n      args = self.decoder.decode(args);\n      ack.apply(this, args);\n    };\n  }\n\n  args = this.encoder.encode(args);\n  var sio = this.sio;\n  sio.emit.apply(sio, [exports.event, type].concat(args));\n};\n\n/**\n * Notifies the read event.\n *\n * @api private\n */\nSocket.prototype._read = function(id, size) {\n  this.sio.emit(exports.event + '-read', id, size);\n};\n\n/**\n * Requests to write a chunk.\n *\n * @api private\n */\nSocket.prototype._write = function(id, chunk, encoding, callback) {\n  if (Buffer.isBuffer(chunk)) {\n    if (this.forceBase64) {\n      encoding = 'base64';\n      chunk = chunk.toString(encoding);\n    } else if (!global.Buffer) {\n      // socket.io can't handle Buffer when using browserify.\n      if (chunk.toArrayBuffer) {\n        chunk = chunk.toArrayBuffer();\n      } else {\n        chunk = chunk.buffer;\n      }\n    }\n  }\n  this.sio.emit(exports.event + '-write', id, chunk, encoding, callback);\n};\n\nSocket.prototype._end = function(id) {\n  this.sio.emit(exports.event + '-end', id);\n};\n\nSocket.prototype._error = function(id, err) {\n  this.sio.emit(exports.event + '-error', id, err.message || err);\n};\n\n/**\n * Handles a new stream request.\n *\n * @param {String} event type\n * @param {Function} listener\n *\n * @api private\n */\nSocket.prototype._onstream = function(type, listener) {\n  if ('function' != typeof listener) {\n    throw TypeError('listener must be a function');\n  }\n\n  function onstream() {\n    debug('new streams');\n    var self = this;\n    var args = slice.call(arguments);\n    var ack = args[args.length - 1];\n    if ('function' == typeof ack) {\n      args[args.length - 1] = function() {\n        var args = slice.call(arguments);\n        args = self.encoder.encode(args);\n        ack.apply(this, args);\n      };\n    }\n\n    args = this.decoder.decode(args);\n    listener.apply(this, args);\n  }\n\n  // for removeListener\n  onstream.listener = listener;\n\n  on.call(this, type, onstream);\n};\n\nSocket.prototype._onread = function(id, size) {\n  debug('read: \"%s\"', id);\n\n  var stream = this.streams[id];\n  if (stream) {\n    stream._onread(size);\n  } else {\n    debug('ignore invalid stream id');\n  }\n};\n\nSocket.prototype._onwrite = function(id, chunk, encoding, callback) {\n  debug('write: \"%s\"', id);\n\n  var stream = this.streams[id];\n  if (!stream) {\n    callback('invalid stream id: ' + id);\n    return;\n  }\n\n  if (global.ArrayBuffer && chunk instanceof ArrayBuffer) {\n    // make sure that chunk is a buffer for stream\n    chunk = new Buffer(new Uint8Array(chunk));\n  }\n  stream._onwrite(chunk, encoding, callback);\n};\n\nSocket.prototype._onend = function(id) {\n  debug('end: \"%s\"', id);\n\n  var stream = this.streams[id];\n  if (!stream) {\n    debug('ignore non-existent stream id: \"%s\"', id);\n    return;\n  }\n\n  stream._end();\n};\n\nSocket.prototype._onerror = function(id, message) {\n  debug('error: \"%s\", \"%s\"', id, message);\n\n  var stream = this.streams[id];\n  if (!stream) {\n    debug('invalid stream id: \"%s\"', id);\n    return;\n  }\n\n  var err = new Error(message);\n  err.remote = true;\n  stream.emit('error', err);\n};\n\nSocket.prototype._ondisconnect = function() {\n  var stream;\n  for (var id in this.streams) {\n    stream = this.streams[id];\n    stream.destroy();\n\n    // Close streams when the underlaying\n    // socket.io connection is closed (regardless why)\n    stream.emit('close');\n    stream.emit('error', new Error('Connection aborted'));\n  }\n};\n\nSocket.prototype._onencode = function(stream) {\n  if (stream.socket || stream.destroyed) {\n    throw new Error('stream has already been sent.');\n  }\n\n  var id = stream.id;\n  if (this.streams[id]) {\n    throw new Error('Encoded stream already exists: ' + id);\n  }\n\n  this.streams[id] = stream;\n  stream.socket = this;\n};\n\nSocket.prototype._ondecode = function(stream) {\n  var id = stream.id;\n  if (this.streams[id]) {\n    this._error(id, new Error('Decoded stream already exists: ' + id));\n    return;\n  }\n\n  this.streams[id] = stream;\n  stream.socket = this;\n};\n\nSocket.prototype.cleanup = function(id) {\n  delete this.streams[id];\n};\n\n","\nmodule.exports = require('./lib');\n\n","var util = require('util');\nvar Readable = require('stream').Readable;\nvar bind = require('component-bind');\n\n\nmodule.exports = BlobReadStream;\n\nutil.inherits(BlobReadStream, Readable);\n\n/**\n * Readable stream for Blob and File on browser.\n *\n * @param {Object} options\n * @api private\n */\nfunction BlobReadStream(blob, options) {\n  if (!(this instanceof BlobReadStream)) {\n    return new BlobReadStream(blob, options);\n  }\n\n  Readable.call(this, options);\n\n  options = options || {};\n  this.blob = blob;\n  this.slice = blob.slice || blob.webkitSlice || blob.mozSlice;\n  this.start = 0;\n  this.sync = options.synchronous || false;\n\n  var fileReader;\n\n  if (options.synchronous) {\n    fileReader = this.fileReader = new FileReaderSync();\n  } else {\n    fileReader = this.fileReader = new FileReader();\n  }\n\n  fileReader.onload = bind(this, '_onload');\n  fileReader.onerror = bind(this, '_onerror');\n}\n\nBlobReadStream.prototype._read = function(size) {\n  var start = this.start;\n  var end = this.start = this.start + size;\n  var chunk = this.slice.call(this.blob, start, end);\n\n  if (chunk.size) {\n    if (this.sync) {\n      var bufferChunk = new Buffer(new Uint8Array(this.fileReader.readAsArrayBuffer(chunk)));\n      this.push(bufferChunk);\n    } else {\n      this.fileReader.readAsArrayBuffer(chunk);\n    }\n  } else {\n    this.push(null);\n  }\n}\n\nBlobReadStream.prototype._onload = function(e) {\n  var chunk = new Buffer(new Uint8Array(e.target.result));\n  this.push(chunk);\n};\n\nBlobReadStream.prototype._onerror = function(e) {\n  var err = e.target.error;\n  this.emit('error', err);\n};\n\n","// UUID function from https://gist.github.com/jed/982883\n// More lightweight than node-uuid\nfunction b(\n  a                  // placeholder\n){\n  return a           // if the placeholder was passed, return\n    ? (              // a random number from 0 to 15\n      a ^            // unless b is 8,\n      Math.random()  // in which case\n      * 16           // a random number from\n      >> a/4         // 8 to 11\n      ).toString(16) // in hexadecimal\n    : (              // or otherwise a concatenated string:\n      [1e7] +        // 10000000 +\n      -1e3 +         // -1000 +\n      -4e3 +         // -4000 +\n      -8e3 +         // -80000000 +\n      -1e11          // -100000000000,\n      ).replace(     // replacing\n        /[018]/g,    // zeroes, ones, and eights with\n        b            // random hex digits\n      )\n}\n\nmodule.exports = b;\n","var util = require('util');\nvar EventEmitter = require('events').EventEmitter;\nvar IOStream = require('./iostream');\nvar slice = Array.prototype.slice;\n\nexports.Encoder = Encoder;\nexports.Decoder = Decoder;\n\nutil.inherits(Encoder, EventEmitter);\n\nfunction Encoder() {\n  EventEmitter.call(this);\n}\n\n/**\n * Encode streams to placeholder objects.\n *\n * @api public\n */\nEncoder.prototype.encode = function(v) {\n  if (v instanceof IOStream) {\n    return this.encodeStream(v);\n  } else if (util.isArray(v)) {\n    return this.encodeArray(v);\n  } else if (v && 'object' == typeof v) {\n    return this.encodeObject(v);\n  }\n  return v;\n}\n\nEncoder.prototype.encodeStream = function(stream) {\n  this.emit('stream', stream);\n\n  // represent a stream in an object.\n  var v = { $stream: stream.id };\n  if (stream.options) {\n    v.options = stream.options;\n  }\n  return v;\n}\n\nEncoder.prototype.encodeArray = function(arr) {\n  var v = [];\n  for (var i = 0, len = arr.length; i < len; i++) {\n    v.push(this.encode(arr[i]));\n  }\n  return v;\n}\n\nEncoder.prototype.encodeObject = function(obj) {\n  var v = {};\n  for (var k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      v[k] = this.encode(obj[k]);\n    }\n  }\n  return v;\n}\n\nutil.inherits(Decoder, EventEmitter);\n\nfunction Decoder() {\n  EventEmitter.call(this);\n}\n\n/**\n * Decode placeholder objects to streams.\n *\n * @api public\n */\nDecoder.prototype.decode = function(v) {\n  if (v && v.$stream) {\n    return this.decodeStream(v);\n  } else if (util.isArray(v)) {\n    return this.decodeArray(v);\n  } else if (v && 'object' == typeof v) {\n    return this.decodeObject(v);\n  }\n  return v;\n}\n\nDecoder.prototype.decodeStream = function(obj) {\n  var stream = new IOStream(obj.options);\n  stream.id = obj.$stream;\n  this.emit('stream', stream);\n  return stream;\n}\n\nDecoder.prototype.decodeArray = function(arr) {\n  var v = [];\n  for (var i = 0, len = arr.length; i < len; i++) {\n    v.push(this.decode(arr[i]));\n  }\n  return v;\n}\n\nDecoder.prototype.decodeObject = function(obj) {\n  var v = {};\n  for (var k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      v[k] = this.decode(obj[k]);\n    }\n  }\n  return v;\n}\n","\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","var util = require('util');\nvar Duplex = require('stream').Duplex;\nvar bind = require('component-bind');\nvar uuid = require('./uuid');\nvar debug = require('debug')('socket.io-stream:iostream');\n\n\nmodule.exports = IOStream;\n\nutil.inherits(IOStream, Duplex);\n\n/**\n * Duplex\n *\n * @param {Object} options\n * @api private\n */\nfunction IOStream(options) {\n  if (!(this instanceof IOStream)) {\n    return new IOStream(options);\n  }\n\n  IOStream.super_.call(this, options);\n\n  this.options = options;\n  this.id = uuid();\n  this.socket = null;\n\n  // Buffers\n  this.pushBuffer = [];\n  this.writeBuffer = [];\n\n  // Op states\n  this._readable = false;\n  this._writable = false;\n  this.destroyed = false;\n\n  // default to *not* allowing half open sockets\n  this.allowHalfOpen = options && options.allowHalfOpen || false;\n\n  this.on('finish', this._onfinish);\n  this.on('end', this._onend);\n  this.on('error', this._onerror);\n}\n\n/**\n * Ensures that no more I/O activity happens on this stream.\n * Not necessary in the usual case.\n *\n * @api public\n */\nIOStream.prototype.destroy = function() {\n  debug('destroy');\n\n  if (this.destroyed) {\n    debug('already destroyed');\n    return;\n  }\n\n  this.readable = this.writable = false;\n\n  if (this.socket) {\n    debug('clean up');\n    this.socket.cleanup(this.id);\n    this.socket = null;\n  }\n\n  this.destroyed = true;\n};\n\n/**\n * Local read\n *\n * @api private\n */\nIOStream.prototype._read = function(size) {\n  var push;\n\n  // We can not read from the socket if it's destroyed obviously ...\n  if (this.destroyed) return;\n\n  if (this.pushBuffer.length) {\n    // flush buffer and end if it exists.\n    while (push = this.pushBuffer.shift()) {\n      if (!push()) break;\n    }\n    return;\n  }\n\n  this._readable = true;\n\n  // Go get data from remote stream\n  // Calls\n  // ._onread remotely\n  // then\n  // ._onwrite locally\n  this.socket._read(this.id, size);\n};\n\n\n/**\n * Read from remote stream\n *\n * @api private\n */\nIOStream.prototype._onread = function(size) {\n  var write = this.writeBuffer.shift();\n  if (write) return write();\n\n  this._writable = true;\n};\n\n/**\n * Write local data to remote stream\n * Calls\n * remtote ._onwrite\n *\n * @api private\n */\nIOStream.prototype._write = function(chunk, encoding, callback) {\n  var self = this;\n\n  function write() {\n    // We can not write to the socket if it's destroyed obviously ...\n    if (self.destroyed) return;\n\n    self._writable = false;\n    self.socket._write(self.id, chunk, encoding, callback);\n  }\n\n  if (this._writable) {\n    write();\n  } else {\n    this.writeBuffer.push(write);\n  }\n};\n\n/**\n * Write the data fetched remotely\n * so that we can now read locally\n *\n * @api private\n */\nIOStream.prototype._onwrite = function(chunk, encoding, callback) {\n  var self = this;\n\n  function push() {\n    self._readable = false;\n    var ret = self.push(chunk || '', encoding);\n    callback();\n    return ret;\n  }\n\n  if (this._readable) {\n    push();\n  } else {\n    this.pushBuffer.push(push);\n  }\n};\n\n/**\n * When ending send 'end' event to remote stream\n *\n * @api private\n */\nIOStream.prototype._end = function() {\n  if (this.pushBuffer.length) {\n    // end after flushing buffer.\n    this.pushBuffer.push(bind(this, '_done'));\n  } else {\n    this._done();\n  }\n};\n\n/**\n * Remote stream just ended\n *\n * @api private\n */\nIOStream.prototype._done = function() {\n  this._readable = false;\n\n  // signal the end of the data.\n  return this.push(null);\n};\n\n/**\n * the user has called .end(), and all the bytes have been\n * sent out to the other side.\n * If allowHalfOpen is false, or if the readable side has\n * ended already, then destroy.\n * If allowHalfOpen is true, then we need to set writable false,\n * so that only the writable side will be cleaned up.\n *\n * @api private\n */\nIOStream.prototype._onfinish = function() {\n  debug('_onfinish');\n  // Local socket just finished\n  // send 'end' event to remote\n  if (this.socket) {\n    this.socket._end(this.id);\n  }\n\n  this.writable = false;\n  this._writableState.ended = true;\n\n  if (!this.readable || this._readableState.ended) {\n    debug('_onfinish: ended, destroy %s', this._readableState);\n    return this.destroy();\n  }\n\n  debug('_onfinish: not ended');\n\n  if (!this.allowHalfOpen) {\n    this.push(null);\n\n    // just in case we're waiting for an EOF.\n    if (this.readable && !this._readableState.endEmitted) {\n      this.read(0);\n    }\n  }\n};\n\n/**\n * the EOF has been received, and no more bytes are coming.\n * if the writable side has ended already, then clean everything\n * up.\n *\n * @api private\n */\nIOStream.prototype._onend = function() {\n  debug('_onend');\n  this.readable = false;\n  this._readableState.ended = true;\n\n  if (!this.writable || this._writableState.finished) {\n    debug('_onend: %s', this._writableState);\n    return this.destroy();\n  }\n\n  debug('_onend: not finished');\n\n  if (!this.allowHalfOpen) {\n    this.end();\n  }\n};\n\n/**\n * When error in local stream\n * notyify remote\n * if err.remote = true\n * then error happened on remote stream\n *\n * @api private\n */\nIOStream.prototype._onerror = function(err) {\n  // check if the error came from remote stream.\n  if (!err.remote && this.socket) {\n    // notify the error to the corresponding remote stream.\n    this.socket._error(this.id, err);\n  }\n\n  this.destroy();\n};\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n"],"sourceRoot":""}