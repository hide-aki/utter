{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/apollo-link/lib/bundle.esm.js"],"names":["__webpack_require__","r","__webpack_exports__","d","createOperation","makePromise","toPromise","fromPromise","fromError","empty","from","split","concat","ApolloLink","execute","zen_observable_ts__WEBPACK_IMPORTED_MODULE_0__","ts_invariant__WEBPACK_IMPORTED_MODULE_1__","tslib__WEBPACK_IMPORTED_MODULE_2__","graphql_language_printer__WEBPACK_IMPORTED_MODULE_3__","apollo_utilities__WEBPACK_IMPORTED_MODULE_4__","_super","LinkError","message","link","_this","call","this","Object","Error","isTerminating","request","length","observable","completed","Promise","resolve","reject","subscribe","next","data","error","promise","observer","then","value","complete","catch","bind","errorValue","starting","operation","context","defineProperty","enumerable","query","JSON","stringify","variables","operationName","getKey","passthrough","op","forward","of","toLink","handler","links","map","reduce","x","y","test","left","right","leftLink","rightLink","first","second","firstLink","nextLink","prototype","transformedOperation","extensions","transformOperation","OPERATION_FIELDS","_i","_a","keys","key","indexOf","validateOperation"],"mappings":"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","file":"bundle.npm.apollo-link.9edabeecf752ba0c53a1.js","sourcesContent":["import Observable from 'zen-observable-ts';\nexport { default as Observable } from 'zen-observable-ts';\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { __extends, __assign } from 'tslib';\nimport { print } from 'graphql/language/printer';\nimport { getOperationName } from 'apollo-utilities';\nexport { getOperationName } from 'apollo-utilities';\n\nfunction validateOperation(operation) {\n    var OPERATION_FIELDS = [\n        'query',\n        'operationName',\n        'variables',\n        'extensions',\n        'context',\n    ];\n    for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (OPERATION_FIELDS.indexOf(key) < 0) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(2) : new InvariantError(\"illegal argument: \" + key);\n        }\n    }\n    return operation;\n}\nvar LinkError = (function (_super) {\n    __extends(LinkError, _super);\n    function LinkError(message, link) {\n        var _this = _super.call(this, message) || this;\n        _this.link = link;\n        return _this;\n    }\n    return LinkError;\n}(Error));\nfunction isTerminating(link) {\n    return link.request.length <= 1;\n}\nfunction toPromise(observable) {\n    var completed = false;\n    return new Promise(function (resolve, reject) {\n        observable.subscribe({\n            next: function (data) {\n                if (completed) {\n                    process.env.NODE_ENV === \"production\" || invariant.warn(\"Promise Wrapper does not support multiple results from Observable\");\n                }\n                else {\n                    completed = true;\n                    resolve(data);\n                }\n            },\n            error: reject,\n        });\n    });\n}\nvar makePromise = toPromise;\nfunction fromPromise(promise) {\n    return new Observable(function (observer) {\n        promise\n            .then(function (value) {\n            observer.next(value);\n            observer.complete();\n        })\n            .catch(observer.error.bind(observer));\n    });\n}\nfunction fromError(errorValue) {\n    return new Observable(function (observer) {\n        observer.error(errorValue);\n    });\n}\nfunction transformOperation(operation) {\n    var transformedOperation = {\n        variables: operation.variables || {},\n        extensions: operation.extensions || {},\n        operationName: operation.operationName,\n        query: operation.query,\n    };\n    if (!transformedOperation.operationName) {\n        transformedOperation.operationName =\n            typeof transformedOperation.query !== 'string'\n                ? getOperationName(transformedOperation.query)\n                : '';\n    }\n    return transformedOperation;\n}\nfunction createOperation(starting, operation) {\n    var context = __assign({}, starting);\n    var setContext = function (next) {\n        if (typeof next === 'function') {\n            context = __assign({}, context, next(context));\n        }\n        else {\n            context = __assign({}, context, next);\n        }\n    };\n    var getContext = function () { return (__assign({}, context)); };\n    Object.defineProperty(operation, 'setContext', {\n        enumerable: false,\n        value: setContext,\n    });\n    Object.defineProperty(operation, 'getContext', {\n        enumerable: false,\n        value: getContext,\n    });\n    Object.defineProperty(operation, 'toKey', {\n        enumerable: false,\n        value: function () { return getKey(operation); },\n    });\n    return operation;\n}\nfunction getKey(operation) {\n    return print(operation.query) + \"|\" + JSON.stringify(operation.variables) + \"|\" + operation.operationName;\n}\n\nfunction passthrough(op, forward) {\n    return forward ? forward(op) : Observable.of();\n}\nfunction toLink(handler) {\n    return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\nfunction empty() {\n    return new ApolloLink(function () { return Observable.of(); });\n}\nfunction from(links) {\n    if (links.length === 0)\n        return empty();\n    return links.map(toLink).reduce(function (x, y) { return x.concat(y); });\n}\nfunction split(test, left, right) {\n    var leftLink = toLink(left);\n    var rightLink = toLink(right || new ApolloLink(passthrough));\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n        return new ApolloLink(function (operation) {\n            return test(operation)\n                ? leftLink.request(operation) || Observable.of()\n                : rightLink.request(operation) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return test(operation)\n                ? leftLink.request(operation, forward) || Observable.of()\n                : rightLink.request(operation, forward) || Observable.of();\n        });\n    }\n}\nvar concat = function (first, second) {\n    var firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n        process.env.NODE_ENV === \"production\" || invariant.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\", firstLink));\n        return firstLink;\n    }\n    var nextLink = toLink(second);\n    if (isTerminating(nextLink)) {\n        return new ApolloLink(function (operation) {\n            return firstLink.request(operation, function (op) { return nextLink.request(op) || Observable.of(); }) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return (firstLink.request(operation, function (op) {\n                return nextLink.request(op, forward) || Observable.of();\n            }) || Observable.of());\n        });\n    }\n};\nvar ApolloLink = (function () {\n    function ApolloLink(request) {\n        if (request)\n            this.request = request;\n    }\n    ApolloLink.prototype.split = function (test, left, right) {\n        return this.concat(split(test, left, right || new ApolloLink(passthrough)));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        return concat(this, next);\n    };\n    ApolloLink.prototype.request = function (operation, forward) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError('request is not implemented');\n    };\n    ApolloLink.empty = empty;\n    ApolloLink.from = from;\n    ApolloLink.split = split;\n    ApolloLink.execute = execute;\n    return ApolloLink;\n}());\nfunction execute(link, operation) {\n    return (link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of());\n}\n\nexport { createOperation, makePromise, toPromise, fromPromise, fromError, empty, from, split, concat, ApolloLink, execute };\n//# sourceMappingURL=bundle.esm.js.map\n"],"sourceRoot":""}