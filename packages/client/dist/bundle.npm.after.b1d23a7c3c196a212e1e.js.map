{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/after/index.js"],"names":["noop","module","exports","count","callback","err_cb","bail","proxy","err","result","Error"],"mappings":"6EA2BA,SAAAA,KA3BAC,EAAAC,QAEA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,GAAA,EAIA,OAHAD,KAAAL,EACAO,EAAAJ,QAEA,IAAAA,EAAAC,IAAAG,EAEA,SAAAA,EAAAC,EAAAC,GACA,GAAAF,EAAAJ,OAAA,EACA,UAAAO,MAAA,iCAEAH,EAAAJ,MAGAK,GACAF,GAAA,EACAF,EAAAI,GAEAJ,EAAAC,GACS,IAAAE,EAAAJ,OAAAG,GACTF,EAAA,KAAAK","file":"bundle.npm.after.b1d23a7c3c196a212e1e.js","sourcesContent":["module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n"],"sourceRoot":""}