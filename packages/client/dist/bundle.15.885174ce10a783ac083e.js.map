{"version":3,"sources":["webpack:///./data/language-data.js"],"names":["module","enterModule","__webpack_require__","d","__webpack_exports__","groupedOptions","reactHotLoaderGlobal","northAmericaOptions","value","label","southAmericaOptions","australiaOptions","europeOptions","germanOptions","asiaOptions","chineseOptions","japaneseOptions","indianOptions","arabicOptions","middleEastOptions","slavicOptions","africaOptions","classicsOptions","nativeAmericanOptions","className","constructedOptions","options","reactHotLoader","leaveModule","default","register"],"mappings":"6FAAA,SAAAA,GAAA,IACAC,EADAC,EAAAC,EAAAC,EAAA,sBAAAC,KACAJ,GAAA,oBAAAK,0CAA0FJ,EAAQ,SAAkBD,cACpHA,EAAAD,GAGA,WACA,IAAAC,GAAA,oBAAAK,0CAA0FJ,EAAQ,SAAkBD,YACpHA,KAAAD,GAFA,GAKO,MAAAO,EAAA,EACPC,MAAA,aACAC,MAAA,eAEOC,EAAA,EACPF,MAAA,kBACAC,MAAA,qBACC,CACDD,MAAA,mBACAC,MAAA,sBACC,CACDD,MAAA,oBACAC,MAAA,wBAEOE,EAAA,EACPH,MAAA,aACAC,MAAA,uBAEOG,EAAA,EACPJ,MAAA,aACAC,MAAA,gBACC,CACDD,MAAA,oBACAC,MAAA,uBACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,sBACAC,MAAA,yBACC,CACDD,MAAA,QACAC,MAAA,SACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,QACAC,MAAA,SACC,CACDD,MAAA,YACAC,MAAA,aACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,WACAC,MAAA,YACC,CACDD,MAAA,WACAC,MAAA,YACC,CACDD,MAAA,mBACAC,MAAA,oBACC,CACDD,MAAA,mBACAC,MAAA,oBACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,WACAC,MAAA,YACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,WACAC,MAAA,YACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,YACAC,MAAA,aACC,CACDD,MAAA,YACAC,MAAA,aACC,CACDD,MAAA,QACAC,MAAA,SACC,CACDD,MAAA,QACAC,MAAA,SACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,aACAC,MAAA,cACC,CACDD,MAAA,gBACAC,MAAA,iBACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,OACAC,MAAA,QACC,CACDD,MAAA,WACAC,MAAA,YACC,CACDD,MAAA,WACAC,MAAA,YACC,CACDD,MAAA,QACAC,MAAA,SACC,CACDD,MAAA,aACAC,MAAA,cACC,CACDD,MAAA,iBACAC,MAAA,kBACC,CACDD,MAAA,iBACAC,MAAA,kBACC,CACDD,MAAA,MACAC,MAAA,OACC,CACDD,MAAA,QACAC,MAAA,SACC,CACDD,MAAA,YACAC,MAAA,aACC,CACDD,MAAA,QACAC,MAAA,UAEOI,EAAA,EACPL,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,wBACAC,MAAA,yBACC,CACDD,MAAA,eACAC,MAAA,iBAEOK,EAAA,EACPN,MAAA,aACAC,MAAA,cACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,OACAC,MAAA,QACC,CACDD,MAAA,aACAC,MAAA,cACC,CACDD,MAAA,YACAC,MAAA,aACC,CACDD,MAAA,cACAC,MAAA,eACC,CACDD,MAAA,WACAC,MAAA,YACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,OACAC,MAAA,QACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,WACAC,MAAA,YACC,CACDD,MAAA,WACAC,MAAA,YACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,QACAC,MAAA,SACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,MACAC,MAAA,OACC,CACDD,MAAA,KACAC,MAAA,MACC,CACDD,MAAA,QACAC,MAAA,SACC,CACDD,MAAA,QACAC,MAAA,SACC,CACDD,MAAA,cACAC,MAAA,eACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,UACAC,MAAA,YAEOM,EAAA,EACPP,MAAA,qBACAC,MAAA,sBACC,CACDD,MAAA,sBACAC,MAAA,uBACC,CACDD,MAAA,uBACAC,MAAA,0BACC,CACDD,MAAA,YACAC,MAAA,aACC,CACDD,MAAA,qBACAC,MAAA,sBACC,CACDD,MAAA,iBACAC,MAAA,kBACC,CACDD,MAAA,aACAC,MAAA,cACC,CACDD,MAAA,QACAC,MAAA,UAEOO,EAAA,EACPR,MAAA,WACAC,MAAA,YACC,CACDD,MAAA,QACAC,MAAA,SACC,CACDD,MAAA,qBACAC,MAAA,yBAEOQ,EAAA,EACPT,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,WACAC,MAAA,YACC,CACDD,MAAA,QACAC,MAAA,SACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,OACAC,MAAA,QACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,YACAC,MAAA,aACC,CACDD,MAAA,OACAC,MAAA,QACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,WACAC,MAAA,YACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,QACAC,MAAA,UAEOS,EAAA,EACPV,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,kBACAC,MAAA,mBACC,CACDD,MAAA,2BACAC,MAAA,4BACC,CACDD,MAAA,kBACAC,MAAA,mBACC,CACDD,MAAA,sBACAC,MAAA,uBACC,CACDD,MAAA,eACAC,MAAA,gBACC,CACDD,MAAA,mBACAC,MAAA,oBACC,CACDD,MAAA,wCACAC,MAAA,2CACC,CACDD,MAAA,gCACAC,MAAA,kCAEOU,EAAA,EACPX,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,UACAC,MAAA,YAEOW,EAAA,EACPZ,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,WACAC,MAAA,YACC,CACDD,MAAA,QACAC,MAAA,SACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,YACAC,MAAA,aACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,YACAC,MAAA,aACC,CACDD,MAAA,YACAC,MAAA,aACC,CACDD,MAAA,aACAC,MAAA,cACC,CACDD,MAAA,cACAC,MAAA,eACC,CACDD,MAAA,aACAC,MAAA,cACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,eACAC,MAAA,iBAEOY,EAAA,EACPb,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,YACAC,MAAA,aACC,CACDD,MAAA,OACAC,MAAA,QACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,QACAC,MAAA,SACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,cACAC,MAAA,eACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,WACAC,MAAA,YACC,CACDD,MAAA,WACAC,MAAA,YACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,SACAC,MAAA,UACC,CACDD,MAAA,UACAC,MAAA,WACC,CACDD,MAAA,QACAC,MAAA,SACC,CACDD,MAAA,OACAC,MAAA,SAEOa,EAAA,EACPd,MAAA,QACAC,MAAA,SACC,CACDD,MAAA,gBACAC,MAAA,kBAEOc,EAAA,EACPf,MAAA,WACAC,MAAA,WACAe,UAAA,kBACC,CACDhB,MAAA,aACAC,MAAA,aACAe,UAAA,kBACC,CACDhB,MAAA,UACAC,MAAA,UACAe,UAAA,kBACC,CACDhB,MAAA,UACAC,MAAA,UACAe,UAAA,kBACC,CACDhB,MAAA,qBACAC,MAAA,qBACAe,UAAA,kBACC,CACDhB,MAAA,cACAC,MAAA,cACAe,UAAA,kBACC,CACDhB,MAAA,UACAC,MAAA,UACAe,UAAA,kBACC,CACDhB,MAAA,YACAC,MAAA,YACAe,UAAA,kBACC,CACDhB,MAAA,SACAC,MAAA,SACAe,UAAA,kBACC,CACDhB,MAAA,WACAC,MAAA,WACAe,UAAA,kBACC,CACDhB,MAAA,UACAC,MAAA,UACAe,UAAA,mBAEOC,EAAA,EACPjB,MAAA,YACAC,MAAA,YACAe,UAAA,kBACC,CACDhB,MAAA,eACAC,MAAA,eACAe,UAAA,kBACC,CACDhB,MAAA,UACAC,MAAA,UACAe,UAAA,kBACC,CACDhB,MAAA,SACAC,MAAA,SACAe,UAAA,mBAEOnB,EAAA,EACPG,MAAA,iBACAC,MAAA,gBACAiB,QAAAnB,GACC,CACDC,MAAA,iBACAC,MAAA,gBACAiB,QAAAhB,GACC,CACDF,MAAA,aACAC,MAAA,YACAiB,QAAAf,GACC,CACDH,MAAA,SACAC,MAAA,SACAiB,QAAAd,GACC,CACDJ,MAAA,SACAC,MAAA,SACAiB,QAAAb,GACC,CACDL,MAAA,OACAC,MAAA,OACAiB,QAAAZ,GACC,CACDN,MAAA,UACAC,MAAA,UACAiB,QAAAX,GACC,CACDP,MAAA,oBACAC,MAAA,WACAiB,QAAAV,GACC,CACDR,MAAA,SACAC,MAAA,SACAiB,QAAAT,GACC,CACDT,MAAA,cACAC,MAAA,cACAiB,QAAAP,GACC,CACDX,MAAA,kBACAC,MAAA,SACAiB,QAAAR,GACC,CACDV,MAAA,SACAC,MAAA,SACAiB,QAAAN,GACC,CACDZ,MAAA,SACAC,MAAA,SACAiB,QAAAL,GACC,CACDb,MAAA,WACAC,MAAA,WACAiB,QAAAJ,GACC,CACDd,MAAA,kBACAC,MAAA,kBACAiB,QAAAH,GACC,CACDf,MAAA,wBACAC,MAAA,wBACAiB,QAAAD,IAIA,IACAE,EA4BAC,GA5BAD,GAAA,oBAAArB,0CAA6FJ,EAAQ,SAAkB2B,WAMvHF,EAAAG,SAAAvB,EAAA,uFACAoB,EAAAG,SAAApB,EAAA,uFACAiB,EAAAG,SAAAnB,EAAA,oFACAgB,EAAAG,SAAAlB,EAAA,iFACAe,EAAAG,SAAAjB,EAAA,iFACAc,EAAAG,SAAAhB,EAAA,+EACAa,EAAAG,SAAAf,EAAA,kFACAY,EAAAG,SAAAd,EAAA,mFACAW,EAAAG,SAAAb,EAAA,iFACAU,EAAAG,SAAAZ,EAAA,iFACAS,EAAAG,SAAAX,EAAA,qFACAQ,EAAAG,SAAAV,EAAA,iFACAO,EAAAG,SAAAT,EAAA,iFACAM,EAAAG,SAAAR,EAAA,mFACAK,EAAAG,SAAAP,EAAA,yFACAI,EAAAG,SAAAL,EAAA,sFACAE,EAAAG,SAAAzB,EAAA,oFAMAuB,GAAA,oBAAAtB,0CAA0FJ,EAAQ,SAAkB0B,cACpHA,EAAA5B,GAKA,WACA,IAAA2B,GAAA,oBAAArB,0CAA6FJ,EAAQ,SAAkB2B,QAEvHF,IAIAA,EAAAG,SAAAvB,EAAA,uFACAoB,EAAAG,SAAApB,EAAA,uFACAiB,EAAAG,SAAAnB,EAAA,oFACAgB,EAAAG,SAAAlB,EAAA,iFACAe,EAAAG,SAAAjB,EAAA,iFACAc,EAAAG,SAAAhB,EAAA,+EACAa,EAAAG,SAAAf,EAAA,kFACAY,EAAAG,SAAAd,EAAA,mFACAW,EAAAG,SAAAb,EAAA,iFACAU,EAAAG,SAAAZ,EAAA,iFACAS,EAAAG,SAAAX,EAAA,qFACAQ,EAAAG,SAAAV,EAAA,iFACAO,EAAAG,SAAAT,EAAA,iFACAM,EAAAG,SAAAR,EAAA,mFACAK,EAAAG,SAAAP,EAAA,yFACAI,EAAAG,SAAAL,EAAA,sFACAE,EAAAG,SAAAzB,EAAA,mFAvBA,GA4BA,WACA,IAAAuB,GAAA,oBAAAtB,0CAA0FJ,EAAQ,SAAkB0B,YACpHA,KAAA5B,GAFA","file":"bundle.15.885174ce10a783ac083e.js","sourcesContent":["(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nexport const northAmericaOptions = [{\n  value: \"english US\",\n  label: \"English US\"\n}];\nexport const southAmericaOptions = [{\n  value: \"spanish-mexican\",\n  label: \"Spanish (Mexican)\"\n}, {\n  value: \"spanish-peruvian\",\n  label: \"Spanish (Peruvian)\"\n}, {\n  value: \"portuguese-brazil\",\n  label: \"Portuguese (Brazil)\"\n}];\nexport const australiaOptions = [{\n  value: \"australian\",\n  label: \"Australian English\"\n}];\nexport const europeOptions = [{\n  value: \"english-uk\",\n  label: \"English (UK)\"\n}, {\n  value: \"spanish-castilian\",\n  label: \"Spanish (Castilian)\"\n}, {\n  value: \"french\",\n  label: \"French\"\n}, {\n  value: \"italian\",\n  label: \"Italian\"\n}, {\n  value: \"portuguese-Portugal\",\n  label: \"Portuguese (Portugal)\"\n}, {\n  value: \"dutch\",\n  label: \"Dutch\"\n}, {\n  value: \"finnish\",\n  label: \"Finnish\"\n}, {\n  value: \"danish\",\n  label: \"Danish\"\n}, {\n  value: \"greek\",\n  label: \"Greek\"\n}, {\n  value: \"norwegian\",\n  label: \"Norwegian\"\n}, {\n  value: \"swedish\",\n  label: \"Swedish\"\n}, {\n  value: \"albanian\",\n  label: \"Albanian\"\n}, {\n  value: \"armenian\",\n  label: \"Armenian\"\n}, {\n  value: \"eastern-armenian\",\n  label: \"Eastern Armenian\"\n}, {\n  value: \"western-armenian\",\n  label: \"Western Armenian\"\n}, {\n  value: \"basque\",\n  label: \"Basque\"\n}, {\n  value: \"breton\",\n  label: \"Breton\"\n}, {\n  value: \"catalan\",\n  label: \"Catalan\"\n}, {\n  value: \"cornish\",\n  label: \"Cornish\"\n}, {\n  value: \"estonian\",\n  label: \"Estonian\"\n}, {\n  value: \"faroese\",\n  label: \"Faroese\"\n}, {\n  value: \"flemish\",\n  label: \"Flemish\"\n}, {\n  value: \"georgian\",\n  label: \"Georgian\"\n}, {\n  value: \"gothic\",\n  label: \"Gothic\"\n}, {\n  value: \"hungarian\",\n  label: \"Hungarian\"\n}, {\n  value: \"icelandic\",\n  label: \"Icelandic\"\n}, {\n  value: \"irish\",\n  label: \"Irish\"\n}, {\n  value: \"ladin\",\n  label: \"Ladin\"\n}, {\n  value: \"ladino\",\n  label: \"Ladino\"\n}, {\n  value: \"latvian\",\n  label: \"Latvian\"\n}, {\n  value: \"lithuanian\",\n  label: \"Lithuanian\"\n}, {\n  value: \"luxembourgish\",\n  label: \"Luxembourgish\"\n}, {\n  value: \"maltese\",\n  label: \"Maltese\"\n}, {\n  value: \"manx\",\n  label: \"Manx\"\n}, {\n  value: \"occitan \",\n  label: \"Occitan \"\n}, {\n  value: \"romanian\",\n  label: \"Romanian\"\n}, {\n  value: \"sami \",\n  label: \"Sami \"\n}, {\n  value: \"lule-sami \",\n  label: \"Lule Sami \"\n}, {\n  value: \"northern-sami \",\n  label: \"Northern Sami \"\n}, {\n  value: \"southern-sami \",\n  label: \"Southern Sami \"\n}, {\n  value: \"ume\",\n  label: \"Ume\"\n}, {\n  value: \"scots\",\n  label: \"Scots\"\n}, {\n  value: \"scottish \",\n  label: \"Scottish \"\n}, {\n  value: \"welsh\",\n  label: \"Welsh\"\n}];\nexport const germanOptions = [{\n  value: \"German\",\n  label: \"German\"\n}, {\n  value: \"small-german-dialects\",\n  label: \"Small German Dialects\"\n}, {\n  value: \"swiss-German\",\n  label: \"Swiss German\"\n}];\nexport const asiaOptions = [{\n  value: \"indonesian\",\n  label: \"Indonesian\"\n}, {\n  value: \"korean\",\n  label: \"Korean\"\n}, {\n  value: \"thai\",\n  label: \"Thai\"\n}, {\n  value: \"vietnamese\",\n  label: \"Vietnamese\"\n}, {\n  value: \"mongolian\",\n  label: \"Mongolian\"\n}, {\n  value: \"azerbaijani\",\n  label: \"Azerbaijani\"\n}, {\n  value: \"hawaiian\",\n  label: \"Hawaiian\"\n}, {\n  value: \"kazakh\",\n  label: \"Kazakh\"\n}, {\n  value: \"ainu\",\n  label: \"Ainu\"\n}, {\n  value: \"burmese\",\n  label: \"Burmese\"\n}, {\n  value: \"cebuano\",\n  label: \"Cebuano\"\n}, {\n  value: \"dzongkha\",\n  label: \"Dzongkha\"\n}, {\n  value: \"javanese\",\n  label: \"Javanese\"\n}, {\n  value: \"karen \",\n  label: \"Karen \"\n}, {\n  value: \"khmer\",\n  label: \"Khmer\"\n}, {\n  value: \"kyrgyz\",\n  label: \"Kyrgyz\"\n}, {\n  value: \"laz\",\n  label: \"Laz\"\n}, {\n  value: \"lu\",\n  label: \"Lu\"\n}, {\n  value: \"malay\",\n  label: \"Malay\"\n}, {\n  value: \"maori\",\n  label: \"Maori\"\n}, {\n  value: \"marshallese\",\n  label: \"Marshallese\"\n}, {\n  value: \"nepali\",\n  label: \"Nepali\"\n}, {\n  value: \"tagalog\",\n  label: \"Tagalog\"\n}, {\n  value: \"tibetan\",\n  label: \"Tibetan\"\n}];\nexport const chineseOptions = [{\n  value: \"chinese-simplified\",\n  label: \"Chinese Simplified\"\n}, {\n  value: \"chinese-traditional\",\n  label: \"Chinese Traditional\"\n}, {\n  value: \"mandarin-spoken-only\",\n  label: \"Mandarin (Spoken Only)\"\n}, {\n  value: \"cantonese\",\n  label: \"Cantonese\"\n}, {\n  value: \"cantonese-jyutping\",\n  label: \"Cantonese Jyutping\"\n}, {\n  value: \"ningbo-dialect\",\n  label: \"Ningbo Dialect\"\n}, {\n  value: \"taishanese\",\n  label: \"Taishanese\"\n}, {\n  value: \"hakka\",\n  label: \"Hakka\"\n}];\nexport const japaneseOptions = [{\n  value: \"japanese\",\n  label: \"Japanese\"\n}, {\n  value: \"kanji\",\n  label: \"Kanji\"\n}, {\n  value: \"japanese-no-script\",\n  label: \"Japanese (no script)\"\n}];\nexport const indianOptions = [{\n  value: \"bengali\",\n  label: \"Bengali\"\n}, {\n  value: \"gujarati\",\n  label: \"Gujarati\"\n}, {\n  value: \"hindi\",\n  label: \"Hindi\"\n}, {\n  value: \"telugu\",\n  label: \"Telugu\"\n}, {\n  value: \"urdu\",\n  label: \"Urdu\"\n}, {\n  value: \"marathi\",\n  label: \"Marathi\"\n}, {\n  value: \"kannada\",\n  label: \"Kannada\"\n}, {\n  value: \"malayalam\",\n  label: \"Malayalam\"\n}, {\n  value: \"pali\",\n  label: \"Pali\"\n}, {\n  value: \"punjabi\",\n  label: \"Punjabi\"\n}, {\n  value: \"sanskrit\",\n  label: \"Sanskrit\"\n}, {\n  value: \"tamang\",\n  label: \"Tamang\"\n}, {\n  value: \"tamil\",\n  label: \"Tamil\"\n}];\nexport const arabicOptions = [{\n  value: \"arabic\",\n  label: \"Arabic\"\n}, {\n  value: \"arabic Alphabet\",\n  label: \"Arabic Alphabet\"\n}, {\n  value: \"classical-quranic-arabic\",\n  label: \"Classical Quranic Arabic\"\n}, {\n  value: \"egyptian-arabic\",\n  label: \"Egyptian Arabic\"\n}, {\n  value: \"gulf-khaliji-arabic\",\n  label: \"Gulf Khaliji Arabic\"\n}, {\n  value: \"iraqi-arabic\",\n  label: \"Iraqi Arabic\"\n}, {\n  value: \"levantine-arabic\",\n  label: \"Levantine Arabic\"\n}, {\n  value: \"modern-standard-arabic-roman-alphabet\",\n  label: \"Modern Standard Arabic (roman alphabet)\"\n}, {\n  value: \"north-african-maghrebi-arabic\",\n  label: \"North African Maghrebi Arabic\"\n}];\nexport const middleEastOptions = [{\n  value: \"hebrew\",\n  label: \"Hebrew\"\n}, {\n  value: \"turkish\",\n  label: \"Turkish\"\n}, {\n  value: \"aramaic\",\n  label: \"Aramaic\"\n}, {\n  value: \"kurdish\",\n  label: \"Kurdish\"\n}, {\n  value: \"persian\",\n  label: \"Persian\"\n}, {\n  value: \"yiddish\",\n  label: \"Yiddish\"\n}];\nexport const slavicOptions = [{\n  value: \"russian\",\n  label: \"Russian\"\n}, {\n  value: \"bosnian\",\n  label: \"Bosnian\"\n}, {\n  value: \"croatian\",\n  label: \"Croatian\"\n}, {\n  value: \"czech\",\n  label: \"Czech\"\n}, {\n  value: \"polish\",\n  label: \"Polish\"\n}, {\n  value: \"serbian\",\n  label: \"Serbian\"\n}, {\n  value: \"bulgarian\",\n  label: \"Bulgarian\"\n}, {\n  value: \"slovak\",\n  label: \"Slovak\"\n}, {\n  value: \"slovenian\",\n  label: \"Slovenian\"\n}, {\n  value: \"ukrainian\",\n  label: \"Ukrainian\"\n}, {\n  value: \"belarusian\",\n  label: \"Belarusian\"\n}, {\n  value: \"circassian \",\n  label: \"Circassian \"\n}, {\n  value: \"macedonian\",\n  label: \"Macedonian\"\n}, {\n  value: \"ossetic\",\n  label: \"Ossetic\"\n}, {\n  value: \"other-slavic\",\n  label: \"Other Slavic\"\n}];\nexport const africaOptions = [{\n  value: \"coptic\",\n  label: \"Coptic\"\n}, {\n  value: \"swahili\",\n  label: \"Swahili\"\n}, {\n  value: \"afrikaans\",\n  label: \"Afrikaans\"\n}, {\n  value: \"akan\",\n  label: \"Akan\"\n}, {\n  value: \"amharic\",\n  label: \"Amharic\"\n}, {\n  value: \"hausa\",\n  label: \"Hausa\"\n}, {\n  value: \"kaonde\",\n  label: \"Kaonde\"\n}, {\n  value: \"kinyarwanda\",\n  label: \"Kinyarwanda\"\n}, {\n  value: \"luganda\",\n  label: \"Luganda\"\n}, {\n  value: \"malagasy\",\n  label: \"Malagasy\"\n}, {\n  value: \"mandinka\",\n  label: \"Mandinka\"\n}, {\n  value: \"nyanja\",\n  label: \"Nyanja\"\n}, {\n  value: \"somali\",\n  label: \"Somali\"\n}, {\n  value: \"soninke\",\n  label: \"Soninke\"\n}, {\n  value: \"wolof\",\n  label: \"Wolof\"\n}, {\n  value: \"zulu\",\n  label: \"Zulu\"\n}];\nexport const classicsOptions = [{\n  value: \"latin\",\n  label: \"Latin\"\n}, {\n  value: \"ancient-greek\",\n  label: \"Ancient Greek\"\n}];\nexport const nativeAmericanOptions = [{\n  value: \"cherokee\",\n  label: \"Cherokee\",\n  className: \"languageOption\"\n}, {\n  value: \"algonquian\",\n  label: \"Algonquian\",\n  className: \"languageOption\"\n}, {\n  value: \"alutiiq\",\n  label: \"Alutiiq\",\n  className: \"languageOption\"\n}, {\n  value: \"choctaw\",\n  label: \"Choctaw\",\n  className: \"languageOption\"\n}, {\n  value: \"citizen-potawatomi\",\n  label: \"Citizen Potawatomi\",\n  className: \"languageOption\"\n}, {\n  value: \"greenlandic\",\n  label: \"Greenlandic\",\n  className: \"languageOption\"\n}, {\n  value: \"guarani\",\n  label: \"Guarani\",\n  className: \"languageOption\"\n}, {\n  value: \"inuktitut\",\n  label: \"Inuktitut\",\n  className: \"languageOption\"\n}, {\n  value: \"lakota\",\n  label: \"Lakota\",\n  className: \"languageOption\"\n}, {\n  value: \"nahuatl \",\n  label: \"Nahuatl \",\n  className: \"languageOption\"\n}, {\n  value: \"quechua\",\n  label: \"Quechua\",\n  className: \"languageOption\"\n}];\nexport const constructedOptions = [{\n  value: \"esperanto\",\n  label: \"Esperanto\",\n  className: \"languageOption\"\n}, {\n  value: \"interlingua \",\n  label: \"Interlingua \",\n  className: \"languageOption\"\n}, {\n  value: \"klingon\",\n  label: \"Klingon\",\n  className: \"languageOption\"\n}, {\n  value: \"lojban\",\n  label: \"Lojban\",\n  className: \"languageOption\"\n}];\nexport const groupedOptions = [{\n  value: \"north-america \",\n  label: \"North America\",\n  options: northAmericaOptions\n}, {\n  value: \"south-america \",\n  label: \"South America\",\n  options: southAmericaOptions\n}, {\n  value: \"australian\",\n  label: \"Australia\",\n  options: australiaOptions\n}, {\n  value: \"europe\",\n  label: \"Europe\",\n  options: europeOptions\n}, {\n  value: \"german\",\n  label: \"German\",\n  options: germanOptions\n}, {\n  value: \"asia\",\n  label: \"Asia\",\n  options: asiaOptions\n}, {\n  value: \"chinese\",\n  label: \"Chinese\",\n  options: chineseOptions\n}, {\n  value: \"japaneseLanguages\",\n  label: \"Japanese\",\n  options: japaneseOptions\n}, {\n  value: \"indian\",\n  label: \"Indian\",\n  options: indianOptions\n}, {\n  value: \"middle-east\",\n  label: \"Middle East\",\n  options: middleEastOptions\n}, {\n  value: \"arabicLanguages\",\n  label: \"Arabic\",\n  options: arabicOptions\n}, {\n  value: \"Slavic\",\n  label: \"Slavic\",\n  options: slavicOptions\n}, {\n  value: \"africa\",\n  label: \"Africa\",\n  options: africaOptions\n}, {\n  value: \"classics\",\n  label: \"Classics\",\n  options: classicsOptions\n}, {\n  value: \"native American\",\n  label: \"Native American\",\n  options: nativeAmericanOptions\n}, {\n  value: \"constructed-languages\",\n  label: \"Constructed Languages\",\n  options: constructedOptions\n}];\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(northAmericaOptions, \"northAmericaOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(southAmericaOptions, \"southAmericaOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(australiaOptions, \"australiaOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(europeOptions, \"europeOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(germanOptions, \"germanOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(asiaOptions, \"asiaOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(chineseOptions, \"chineseOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(japaneseOptions, \"japaneseOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(indianOptions, \"indianOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(arabicOptions, \"arabicOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(middleEastOptions, \"middleEastOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(slavicOptions, \"slavicOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(africaOptions, \"africaOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(classicsOptions, \"classicsOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(nativeAmericanOptions, \"nativeAmericanOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(constructedOptions, \"constructedOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(groupedOptions, \"groupedOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(northAmericaOptions, \"northAmericaOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(southAmericaOptions, \"southAmericaOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(australiaOptions, \"australiaOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(europeOptions, \"europeOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(germanOptions, \"germanOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(asiaOptions, \"asiaOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(chineseOptions, \"chineseOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(japaneseOptions, \"japaneseOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(indianOptions, \"indianOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(arabicOptions, \"arabicOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(middleEastOptions, \"middleEastOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(slavicOptions, \"slavicOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(africaOptions, \"africaOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(classicsOptions, \"classicsOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(nativeAmericanOptions, \"nativeAmericanOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(constructedOptions, \"constructedOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n  reactHotLoader.register(groupedOptions, \"groupedOptions\", \"/var/www/html/utter/packages/client/src/data/language-data.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();"],"sourceRoot":""}