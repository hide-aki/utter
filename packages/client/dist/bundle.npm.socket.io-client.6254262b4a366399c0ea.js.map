{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/socket.io-client/lib/url.js","webpack:////var/www/html/utter/node_modules/socket.io-client/node_modules/isarray/index.js","webpack:////var/www/html/utter/node_modules/socket.io-client/node_modules/debug/src/debug.js","webpack:////var/www/html/utter/node_modules/socket.io-client/lib/on.js","webpack:////var/www/html/utter/node_modules/socket.io-client/node_modules/socket.io-parser/binary.js","webpack:////var/www/html/utter/node_modules/socket.io-client/node_modules/debug/src/browser.js","webpack:////var/www/html/utter/node_modules/socket.io-client/lib/manager.js","webpack:////var/www/html/utter/node_modules/socket.io-client/lib/index.js","webpack:////var/www/html/utter/node_modules/socket.io-client/lib/socket.js","webpack:////var/www/html/utter/node_modules/socket.io-client/node_modules/socket.io-parser/is-buffer.js","webpack:////var/www/html/utter/node_modules/socket.io-client/node_modules/socket.io-parser/index.js","webpack:////var/www/html/utter/node_modules/socket.io-client/node_modules/ms/index.js"],"names":["parseuri","__webpack_require__","debug","module","exports","uri","loc","obj","location","protocol","host","charAt","test","port","path","indexOf","id","href","toString","Array","isArray","arr","call","createDebug","namespace","prevTime","enabled","self","curr","Date","ms","diff","prev","args","arguments","length","i","coerce","unshift","index","replace","match","format","formatter","formatters","val","splice","formatArgs","log","console","bind","apply","useColors","color","hash","charCodeAt","colors","Math","abs","selectColor","destroy","init","instances","push","this","Error","stack","message","disable","enable","namespaces","save","names","skips","split","len","RegExp","substr","instance","name","humanize","ev","fn","on","removeListener","isBuf","Object","prototype","withNativeBlob","Blob","withNativeFile","File","deconstructPacket","packet","buffers","packetData","data","pack","_deconstructPacket","placeholder","_placeholder","num","newData","key","attachments","reconstructPacket","_reconstructPacket","undefined","removeBlobs","callback","pendingBlobs","bloblessData","_removeBlobs","curKey","containingObject","fileReader","FileReader","onload","result","readAsArrayBuffer","process","load","r","storage","e","NODE_ENV","DEBUG","Function","c","lastC","removeItem","window","type","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","$1","chrome","local","localStorage","localstorage","j","v","JSON","stringify","err","eio","Socket","Emitter","parser","Backoff","has","hasOwnProperty","Manager","opts","nsps","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","min","max","jitter","timeout","readyState","connecting","lastPing","encoding","packetBuffer","_parser","encoder","Encoder","decoder","Decoder","autoConnect","open","emitAll","nsp","emit","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","connect","socket","skipReconnect","openSub","onopen","errorSub","cleanup","timer","setTimeout","close","clearTimeout","onping","onpong","ondata","add","ondecoded","onerror","onConnecting","query","encode","encodedPackets","write","options","processPacketQueue","shift","subsLength","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","url","lookup","cache","managers","io","parsed","source","sameNamespace","forceNew","multiplex","toArray","parseqs","hasBin","events","connect_error","connect_timeout","error","reconnect_attempt","reconnect_failed","reconnect_error","ping","pong","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","subEvents","send","binary","BINARY_EVENT","EVENT","compress","pop","CONNECT","onpacket","rootNamespaceError","ERROR","onconnect","onevent","ACK","BINARY_ACK","onack","DISCONNECT","ondisconnect","ack","sent","emitBuffered","withNativeBuffer","Buffer","isBuffer","withNativeArrayBuffer","ArrayBuffer","isView","buffer","types","ERROR_PACKET","encodeAsString","str","payload","tryStringify","reconstructor","BinaryReconstructor","reconPack","msg","deconstruction","encodeAsBinary","p","Number","buf","next","parse","tryParse","isPayloadValid","decodeString","base64","takeBinaryData","finishedReconstruction","binData","s","m","h","d","y","plural","n","floor","ceil","String","exec","parseFloat","isNaN","long","round","fmtShort"],"mappings":"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","file":"bundle.npm.socket.io-client.6254262b4a366399c0ea.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || (typeof location !== 'undefined' && location);\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]');\nvar withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\nvar isView = function (obj) {\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);\n};\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));\n}\n","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an encoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  } else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  } else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n"],"sourceRoot":""}