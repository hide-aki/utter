{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/reselect/lib/index.js"],"names":["defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheck","arguments","length","undefined","lastArgs","lastResult","prev","next","i","areArgumentsShallowlyEqual","apply","createSelectorCreator","memoize","_len","memoizeOptions","Array","_key","_len2","funcs","_key2","recomputations","resultFunc","pop","dependencies","isArray","every","dep","dependencyTypes","map","join","Error","getDependencies","memoizedResultFunc","concat","selector","params","push","resetRecomputations","exports","__esModule","createStructuredSelector","selectors","selectorCreator","createSelector","objectKeys","Object","keys","key","_len3","values","_key3","reduce","composition","value","index"],"mappings":"+FAMA,SAAAA,EAAAC,EAAAC,GACA,OAAAD,IAAAC,EAmBA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAAN,EAEAS,EAAA,KACAC,EAAA,KAEA,kBAOA,OA7BA,SAAAL,EAAAM,EAAAC,GACA,UAAAD,GAAA,OAAAC,GAAAD,EAAAJ,SAAAK,EAAAL,OACA,SAKA,IADA,IAAAA,EAAAI,EAAAJ,OACAM,EAAA,EAAiBA,EAAAN,EAAYM,IAC7B,IAAAR,EAAAM,EAAAE,GAAAD,EAAAC,IACA,SAIA,SAUAC,CAAAT,EAAAI,EAAAH,aAEAI,EAAAN,EAAAW,MAAA,KAAAT,YAGAG,EAAAH,UACAI,GAmBA,SAAAM,EAAAC,GACA,QAAAC,EAAAZ,UAAAC,OAAAY,EAAAC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAA8FA,EAAAH,EAAaG,IAC3GF,EAAAE,EAAA,GAAAf,UAAAe,GAGA,kBACA,QAAAC,EAAAhB,UAAAC,OAAAgB,EAAAH,MAAAE,GAAAE,EAAA,EAAuEA,EAAAF,EAAeE,IACtFD,EAAAC,GAAAlB,UAAAkB,GAGA,IAAAC,EAAA,EACAC,EAAAH,EAAAI,MACAC,EA3BA,SAAAL,GACA,IAAAK,EAAAR,MAAAS,QAAAN,EAAA,IAAAA,EAAA,GAAAA,EAEA,IAAAK,EAAAE,MAAA,SAAAC,GACA,yBAAAA,IACG,CACH,IAAAC,EAAAJ,EAAAK,IAAA,SAAAF,GACA,cAAAA,IACKG,KAAA,MACL,UAAAC,MAAA,wGAAAH,EAAA,KAGA,OAAAJ,EAeAQ,CAAAb,GAEAc,EAAApB,EAAAF,WAAAP,EAAA,YAGA,OAFAiB,IAEAC,EAAAX,MAAA,KAAAT,aACKgC,OAAAnB,IAGLoB,EAAApC,EAAA,WAIA,IAHA,IAAAqC,EAAA,GACAjC,EAAAqB,EAAArB,OAEAM,EAAA,EAAqBA,EAAAN,EAAYM,IAEjC2B,EAAAC,KAAAb,EAAAf,GAAAE,MAAA,KAAAT,YAIA,OAAA+B,EAAAtB,MAAA,KAAAyB,KAUA,OAPAD,EAAAb,aACAa,EAAAd,eAAA,WACA,OAAAA,GAEAc,EAAAG,oBAAA,WACA,OAAAjB,EAAA,GAEAc,GAjGAI,EAAAC,YAAA,EACAD,EAAAxC,iBACAwC,EAAA3B,wBACA2B,EAAAE,yBAoGA,SAAAC,GACA,IAAAC,EAAAzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA0C,EAEA,oBAAAF,EACA,UAAAX,MAAA,gIAAAW,GAEA,IAAAG,EAAAC,OAAAC,KAAAL,GACA,OAAAC,EAAAE,EAAAhB,IAAA,SAAAmB,GACA,OAAAN,EAAAM,KACG,WACH,QAAAC,EAAA/C,UAAAC,OAAA+C,EAAAlC,MAAAiC,GAAAE,EAAA,EAAwEA,EAAAF,EAAeE,IACvFD,EAAAC,GAAAjD,UAAAiD,GAGA,OAAAD,EAAAE,OAAA,SAAAC,EAAAC,EAAAC,GAEA,OADAF,EAAAR,EAAAU,IAAAD,EACAD,GACK,OAnBL,IAAAT,EAAAL,EAAAK,eAAAhC,EAAAb","file":"bundle.npm.reselect.64151294ca9b5ccf4bfa.js","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}"],"sourceRoot":""}