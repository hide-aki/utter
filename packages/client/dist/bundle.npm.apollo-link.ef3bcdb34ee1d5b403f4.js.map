{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/apollo-link/lib/linkUtils.js","webpack:////var/www/html/utter/node_modules/apollo-link/lib/link.js","webpack:////var/www/html/utter/node_modules/apollo-link/lib/index.js"],"names":["extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","LinkError","_super","message","link","_this","Error","isTerminating","request","fromError","errorValue","lib","observer","error","createOperation","starting","operation","context","defineProperty","enumerable","value","next","printer","query","JSON","stringify","variables","operationName","getKey","passthrough","op","forward","of","toLink","handler","ApolloLink","empty","from","links","map","reduce","x","y","concat","split","test","left","right","leftLink","rightLink","first","second","firstLink","console","warn","nextLink","execute","transformedOperation","extensions","getFromAST","transformOperation","OPERATION_FIELDS","_i","_a","keys","key","indexOf","validateOperation","__webpack_require__","__webpack_exports__"],"mappings":"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","file":"bundle.npm.apollo-link.ef3bcdb34ee1d5b403f4.js","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { getOperationName } from 'apollo-utilities';\nimport Observable from 'zen-observable-ts';\nimport { print } from 'graphql/language/printer';\nexport function validateOperation(operation) {\n    var OPERATION_FIELDS = [\n        'query',\n        'operationName',\n        'variables',\n        'extensions',\n        'context',\n    ];\n    for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (OPERATION_FIELDS.indexOf(key) < 0) {\n            throw new Error(\"illegal argument: \" + key);\n        }\n    }\n    return operation;\n}\nvar LinkError = /** @class */ (function (_super) {\n    __extends(LinkError, _super);\n    function LinkError(message, link) {\n        var _this = _super.call(this, message) || this;\n        _this.link = link;\n        return _this;\n    }\n    return LinkError;\n}(Error));\nexport { LinkError };\nexport function isTerminating(link) {\n    return link.request.length <= 1;\n}\nexport function toPromise(observable) {\n    var completed = false;\n    return new Promise(function (resolve, reject) {\n        observable.subscribe({\n            next: function (data) {\n                if (completed) {\n                    console.warn(\"Promise Wrapper does not support multiple results from Observable\");\n                }\n                else {\n                    completed = true;\n                    resolve(data);\n                }\n            },\n            error: reject,\n        });\n    });\n}\n// backwards compat\nexport var makePromise = toPromise;\nexport function fromPromise(promise) {\n    return new Observable(function (observer) {\n        promise\n            .then(function (value) {\n            observer.next(value);\n            observer.complete();\n        })\n            .catch(observer.error.bind(observer));\n    });\n}\nexport function fromError(errorValue) {\n    return new Observable(function (observer) {\n        observer.error(errorValue);\n    });\n}\nexport function transformOperation(operation) {\n    var transformedOperation = {\n        variables: operation.variables || {},\n        extensions: operation.extensions || {},\n        operationName: operation.operationName,\n        query: operation.query,\n    };\n    // best guess at an operation name\n    if (!transformedOperation.operationName) {\n        transformedOperation.operationName =\n            typeof transformedOperation.query !== 'string'\n                ? getOperationName(transformedOperation.query)\n                : '';\n    }\n    return transformedOperation;\n}\nexport function createOperation(starting, operation) {\n    var context = __assign({}, starting);\n    var setContext = function (next) {\n        if (typeof next === 'function') {\n            context = __assign({}, context, next(context));\n        }\n        else {\n            context = __assign({}, context, next);\n        }\n    };\n    var getContext = function () { return (__assign({}, context)); };\n    Object.defineProperty(operation, 'setContext', {\n        enumerable: false,\n        value: setContext,\n    });\n    Object.defineProperty(operation, 'getContext', {\n        enumerable: false,\n        value: getContext,\n    });\n    Object.defineProperty(operation, 'toKey', {\n        enumerable: false,\n        value: function () { return getKey(operation); },\n    });\n    return operation;\n}\nexport function getKey(operation) {\n    // XXX we're assuming here that variables will be serialized in the same order.\n    // that might not always be true\n    return print(operation.query) + \"|\" + JSON.stringify(operation.variables) + \"|\" + operation.operationName;\n}\n//# sourceMappingURL=linkUtils.js.map","import Observable from 'zen-observable-ts';\nimport { validateOperation, isTerminating, LinkError, transformOperation, createOperation, } from './linkUtils';\nvar passthrough = function (op, forward) { return (forward ? forward(op) : Observable.of()); };\nvar toLink = function (handler) {\n    return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n};\nexport var empty = function () {\n    return new ApolloLink(function (op, forward) { return Observable.of(); });\n};\nexport var from = function (links) {\n    if (links.length === 0)\n        return empty();\n    return links.map(toLink).reduce(function (x, y) { return x.concat(y); });\n};\nexport var split = function (test, left, right) {\n    if (right === void 0) { right = new ApolloLink(passthrough); }\n    var leftLink = toLink(left);\n    var rightLink = toLink(right);\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n        return new ApolloLink(function (operation) {\n            return test(operation)\n                ? leftLink.request(operation) || Observable.of()\n                : rightLink.request(operation) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return test(operation)\n                ? leftLink.request(operation, forward) || Observable.of()\n                : rightLink.request(operation, forward) || Observable.of();\n        });\n    }\n};\n// join two Links together\nexport var concat = function (first, second) {\n    var firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n        console.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\", firstLink));\n        return firstLink;\n    }\n    var nextLink = toLink(second);\n    if (isTerminating(nextLink)) {\n        return new ApolloLink(function (operation) {\n            return firstLink.request(operation, function (op) { return nextLink.request(op) || Observable.of(); }) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return (firstLink.request(operation, function (op) {\n                return nextLink.request(op, forward) || Observable.of();\n            }) || Observable.of());\n        });\n    }\n};\nvar ApolloLink = /** @class */ (function () {\n    function ApolloLink(request) {\n        if (request)\n            this.request = request;\n    }\n    ApolloLink.prototype.split = function (test, left, right) {\n        if (right === void 0) { right = new ApolloLink(passthrough); }\n        return this.concat(split(test, left, right));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        return concat(this, next);\n    };\n    ApolloLink.prototype.request = function (operation, forward) {\n        throw new Error('request is not implemented');\n    };\n    ApolloLink.empty = empty;\n    ApolloLink.from = from;\n    ApolloLink.split = split;\n    ApolloLink.execute = execute;\n    return ApolloLink;\n}());\nexport { ApolloLink };\nexport function execute(link, operation) {\n    return (link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of());\n}\n//# sourceMappingURL=link.js.map","export * from './link';\nexport { createOperation, makePromise, toPromise, fromPromise, fromError, } from './linkUtils';\nimport Observable from 'zen-observable-ts';\nexport { Observable };\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}