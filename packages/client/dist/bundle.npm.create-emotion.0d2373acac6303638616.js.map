{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/create-emotion/dist/index.esm.js"],"names":["_emotion_memoize__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_emotion_unitless__WEBPACK_IMPORTED_MODULE_1__","_emotion_hash__WEBPACK_IMPORTED_MODULE_2__","_emotion_stylis__WEBPACK_IMPORTED_MODULE_3__","stylis_rule_sheet__WEBPACK_IMPORTED_MODULE_4__","stylis_rule_sheet__WEBPACK_IMPORTED_MODULE_4___default","n","hyphenateRegex","processStyleName","Object","styleName","replace","toLowerCase","processStyleValue","key","value","charCodeAt","isNaN","classnames","args","len","length","i","cls","arg","toAdd","Array","isArray","k","isBrowser","document","makeStyleTag","opts","tag","createElement","setAttribute","undefined","nonce","appendChild","createTextNode","container","head","StyleSheet","options","this","isSpeedy","tags","ctr","_proto","prototype","inject","injected","Error","speedy","bool","insert","rule","sourceMap","sheet","styleSheets","ownerNode","sheetForTag","insertRule","cssRules","e","_tag","push","flush","forEach","parentNode","removeChild","__webpack_exports__","context","__SECRET_EMOTION__","current","stylisOptions","insertionPlugin","currentSourceMap","prefix","caches","registered","inserted","stylis","use","stylisPlugins","handleInterpolation","interpolation","couldBeSelectorInterpolation","__emotion_styles","selector","toString","call","mergedProps","obj","objectToStringCache","has","get","string","keys","set","cached","name","stylesWithLabel","WeakMap","labelPattern","createStyles","strings","stringMode","styles","identifierName","raw","_len","arguments","interpolations","_key","match","p1","createClassName","scope","css","apply","getRegisteredStyles","registeredStyles","classNames","rawClassName","split","className","merge","hydrateSingleId","id","chunks","querySelectorAll","node","insertBefore","getAttribute","emotion","hydrate","ids","cx","_len2","_key2","injectGlobal","keyframes","animation"],"mappings":"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","file":"bundle.npm.create-emotion.0d2373acac6303638616.js","sourcesContent":["import memoize from '@emotion/memoize';\nimport unitless from '@emotion/unitless';\nimport hashString from '@emotion/hash';\nimport Stylis from '@emotion/stylis';\nimport stylisRuleSheet from 'stylis-rule-sheet';\n\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar processStyleName = memoize(function (styleName) {\n  return styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\nvar processStyleValue = function processStyleValue(key, value) {\n  if (value == null || typeof value === 'boolean') {\n    return '';\n  }\n\n  if (unitless[key] !== 1 && key.charCodeAt(1) !== 45 && // custom properties\n  !isNaN(value) && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    return oldProcessStyleValue(key, value);\n  };\n}\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'function':\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Passing functions to cx is deprecated and will be removed in the next major version of Emotion.\\n' + 'Please call the function before passing it to cx.');\n        }\n\n        toAdd = classnames([arg()]);\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\nvar isBrowser = typeof document !== 'undefined';\n\n/*\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n- 'polyfills' on server side\n\n// usage\n\nimport StyleSheet from 'glamor/lib/sheet'\nlet styleSheet = new StyleSheet()\n\nstyleSheet.inject()\n- 'injects' the stylesheet into the page (or into memory if on server)\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction makeStyleTag(opts) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', opts.key || '');\n\n  if (opts.nonce !== undefined) {\n    tag.setAttribute('nonce', opts.nonce);\n  }\n\n  tag.appendChild(document.createTextNode('')) // $FlowFixMe\n  ;\n  (opts.container !== undefined ? opts.container : document.head).appendChild(tag);\n  return tag;\n}\n\nvar StyleSheet =\n/*#__PURE__*/\nfunction () {\n  function StyleSheet(options) {\n    this.isSpeedy = process.env.NODE_ENV === 'production'; // the big drawback here is that the css won't be editable in devtools\n\n    this.tags = [];\n    this.ctr = 0;\n    this.opts = options;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.inject = function inject() {\n    if (this.injected) {\n      throw new Error('already injected!');\n    }\n\n    this.tags[0] = makeStyleTag(this.opts);\n    this.injected = true;\n  };\n\n  _proto.speedy = function speedy(bool) {\n    if (this.ctr !== 0) {\n      // cannot change speedy mode after inserting any rule to sheet. Either call speedy(${bool}) earlier in your app, or call flush() before speedy(${bool})\n      throw new Error(\"cannot change speedy now\");\n    }\n\n    this.isSpeedy = !!bool;\n  };\n\n  _proto.insert = function insert(rule, sourceMap) {\n    // this is the ultrafast version, works across browsers\n    if (this.isSpeedy) {\n      var tag = this.tags[this.tags.length - 1];\n      var sheet = sheetForTag(tag);\n\n      try {\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn('illegal rule', rule); // eslint-disable-line no-console\n        }\n      }\n    } else {\n      var _tag = makeStyleTag(this.opts);\n\n      this.tags.push(_tag);\n\n      _tag.appendChild(document.createTextNode(rule + (sourceMap || '')));\n    }\n\n    this.ctr++;\n\n    if (this.ctr % 65000 === 0) {\n      this.tags.push(makeStyleTag(this.opts));\n    }\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0; // todo - look for remnants in document.styleSheets\n\n    this.injected = false;\n  };\n\n  return StyleSheet;\n}();\n\nfunction createEmotion(context, options) {\n  if (context.__SECRET_EMOTION__ !== undefined) {\n    return context.__SECRET_EMOTION__;\n  }\n\n  if (options === undefined) options = {};\n  var key = options.key || 'css';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var current;\n\n  function insertRule(rule) {\n    current += rule;\n\n    if (isBrowser) {\n      sheet.insert(rule, currentSourceMap);\n    }\n  }\n\n  var insertionPlugin = stylisRuleSheet(insertRule);\n  var stylisOptions;\n\n  if (options.prefix !== undefined) {\n    stylisOptions = {\n      prefix: options.prefix\n    };\n  }\n\n  var caches = {\n    registered: {},\n    inserted: {},\n    nonce: options.nonce,\n    key: key\n  };\n  var sheet = new StyleSheet(options);\n\n  if (isBrowser) {\n    // 🚀\n    sheet.inject();\n  }\n\n  var stylis = new Stylis(stylisOptions);\n  stylis.use(options.stylisPlugins)(insertionPlugin);\n  var currentSourceMap = '';\n\n  function handleInterpolation(interpolation, couldBeSelectorInterpolation) {\n    if (interpolation == null) {\n      return '';\n    }\n\n    switch (typeof interpolation) {\n      case 'boolean':\n        return '';\n\n      case 'function':\n        if (interpolation.__emotion_styles !== undefined) {\n          var selector = interpolation.toString();\n\n          if (selector === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n            throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n          }\n\n          return selector;\n        }\n\n        if (this === undefined && process.env.NODE_ENV !== 'production') {\n          console.error('Interpolating functions in css calls is deprecated and will be removed in the next major version of Emotion.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        return handleInterpolation.call(this, this === undefined ? interpolation() : // $FlowFixMe\n        interpolation(this.mergedProps, this.context), couldBeSelectorInterpolation);\n\n      case 'object':\n        return createStringFromObject.call(this, interpolation);\n\n      default:\n        var cached = caches.registered[interpolation];\n        return couldBeSelectorInterpolation === false && cached !== undefined ? cached : interpolation;\n    }\n  }\n\n  var objectToStringCache = new WeakMap();\n\n  function createStringFromObject(obj) {\n    if (objectToStringCache.has(obj)) {\n      // $FlowFixMe\n      return objectToStringCache.get(obj);\n    }\n\n    var string = '';\n\n    if (Array.isArray(obj)) {\n      obj.forEach(function (interpolation) {\n        string += handleInterpolation.call(this, interpolation, false);\n      }, this);\n    } else {\n      Object.keys(obj).forEach(function (key) {\n        if (typeof obj[key] !== 'object') {\n          if (caches.registered[obj[key]] !== undefined) {\n            string += key + \"{\" + caches.registered[obj[key]] + \"}\";\n          } else {\n            string += processStyleName(key) + \":\" + processStyleValue(key, obj[key]) + \";\";\n          }\n        } else {\n          if (key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n            throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n          }\n\n          if (Array.isArray(obj[key]) && typeof obj[key][0] === 'string' && caches.registered[obj[key][0]] === undefined) {\n            obj[key].forEach(function (value) {\n              string += processStyleName(key) + \":\" + processStyleValue(key, value) + \";\";\n            });\n          } else {\n            string += key + \"{\" + handleInterpolation.call(this, obj[key], false) + \"}\";\n          }\n        }\n      }, this);\n    }\n\n    objectToStringCache.set(obj, string);\n    return string;\n  }\n\n  var name;\n  var stylesWithLabel;\n  var labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\n\n  var createClassName = function createClassName(styles, identifierName) {\n    return hashString(styles + identifierName) + identifierName;\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    var oldCreateClassName = createClassName;\n    var sourceMappingUrlPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g;\n\n    createClassName = function createClassName(styles, identifierName) {\n      return oldCreateClassName(styles.replace(sourceMappingUrlPattern, function (sourceMap) {\n        currentSourceMap = sourceMap;\n        return '';\n      }), identifierName);\n    };\n  }\n\n  var createStyles = function createStyles(strings) {\n    var stringMode = true;\n    var styles = '';\n    var identifierName = '';\n\n    if (strings == null || strings.raw === undefined) {\n      stringMode = false;\n      styles += handleInterpolation.call(this, strings, false);\n    } else {\n      styles += strings[0];\n    }\n\n    for (var _len = arguments.length, interpolations = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      interpolations[_key - 1] = arguments[_key];\n    }\n\n    interpolations.forEach(function (interpolation, i) {\n      styles += handleInterpolation.call(this, interpolation, styles.charCodeAt(styles.length - 1) === 46 // .\n      );\n\n      if (stringMode === true && strings[i + 1] !== undefined) {\n        styles += strings[i + 1];\n      }\n    }, this);\n    stylesWithLabel = styles;\n    styles = styles.replace(labelPattern, function (match, p1) {\n      identifierName += \"-\" + p1;\n      return '';\n    });\n    name = createClassName(styles, identifierName);\n    return styles;\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    var oldStylis = stylis;\n\n    stylis = function stylis(selector, styles) {\n      oldStylis(selector, styles);\n      currentSourceMap = '';\n    };\n  }\n\n  function insert(scope, styles) {\n    if (caches.inserted[name] === undefined) {\n      current = '';\n      stylis(scope, styles);\n      caches.inserted[name] = current;\n    }\n  }\n\n  var css = function css() {\n    var styles = createStyles.apply(this, arguments);\n    var selector = key + \"-\" + name;\n\n    if (caches.registered[selector] === undefined) {\n      caches.registered[selector] = stylesWithLabel;\n    }\n\n    insert(\".\" + selector, styles);\n    return selector;\n  };\n\n  var keyframes = function keyframes() {\n    var styles = createStyles.apply(this, arguments);\n    var animation = \"animation-\" + name;\n    insert('', \"@keyframes \" + animation + \"{\" + styles + \"}\");\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    var styles = createStyles.apply(this, arguments);\n    insert('', styles);\n  };\n\n  function getRegisteredStyles(registeredStyles, classNames) {\n    var rawClassName = '';\n    classNames.split(' ').forEach(function (className) {\n      if (caches.registered[className] !== undefined) {\n        registeredStyles.push(className);\n      } else {\n        rawClassName += className + \" \";\n      }\n    });\n    return rawClassName;\n  }\n\n  function merge(className, sourceMap) {\n    var registeredStyles = [];\n    var rawClassName = getRegisteredStyles(registeredStyles, className);\n\n    if (registeredStyles.length < 2) {\n      return className;\n    }\n\n    return rawClassName + css(registeredStyles, sourceMap);\n  }\n\n  function cx() {\n    for (var _len2 = arguments.length, classNames = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      classNames[_key2] = arguments[_key2];\n    }\n\n    return merge(classnames(classNames));\n  }\n\n  function hydrateSingleId(id) {\n    caches.inserted[id] = true;\n  }\n\n  function hydrate(ids) {\n    ids.forEach(hydrateSingleId);\n  }\n\n  function flush() {\n    if (isBrowser) {\n      sheet.flush();\n      sheet.inject();\n    }\n\n    caches.inserted = {};\n    caches.registered = {};\n  }\n\n  if (isBrowser) {\n    var chunks = document.querySelectorAll(\"[data-emotion-\" + key + \"]\");\n    Array.prototype.forEach.call(chunks, function (node) {\n      // $FlowFixMe\n      sheet.tags[0].parentNode.insertBefore(node, sheet.tags[0]); // $FlowFixMe\n\n      node.getAttribute(\"data-emotion-\" + key).split(' ').forEach(hydrateSingleId);\n    });\n  }\n\n  var emotion = {\n    flush: flush,\n    hydrate: hydrate,\n    cx: cx,\n    merge: merge,\n    getRegisteredStyles: getRegisteredStyles,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    css: css,\n    sheet: sheet,\n    caches: caches\n  };\n  context.__SECRET_EMOTION__ = emotion;\n  return emotion;\n}\n\nexport default createEmotion;\n"],"sourceRoot":""}