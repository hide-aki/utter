{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/react-apollo-hooks/es/internal/SSRContext.js","webpack:////var/www/html/utter/node_modules/react-apollo-hooks/es/useMutation.js","webpack:////var/www/html/utter/node_modules/react-apollo-hooks/es/SuspenseSSR.js","webpack:////var/www/html/utter/node_modules/react-apollo-hooks/es/getMarkupFromTree.js","webpack:////var/www/html/utter/node_modules/react-apollo-hooks/es/useSubscription.js","webpack:////var/www/html/utter/node_modules/react-apollo-hooks/es/index.js","webpack:////var/www/html/utter/node_modules/react-apollo-hooks/es/ApolloContext.js","webpack:////var/www/html/utter/node_modules/react-apollo-hooks/es/queryCache.js","webpack:////var/www/html/utter/node_modules/react-apollo-hooks/es/useQuery.js","webpack:////var/www/html/utter/node_modules/react-apollo-hooks/es/internal/actHack.js","webpack:////var/www/html/utter/node_modules/react-apollo-hooks/es/utils.js"],"names":["__webpack_require__","d","__webpack_exports__","createSSRManager","SSRContext","react__WEBPACK_IMPORTED_MODULE_0__","promiseSet","Set","hasPromises","size","register","promise","add","consumeAndAwaitPromises","promises","Array","from","clear","Promise","all","Object","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","useMutation","mutation","_temp","_ref","overrideClient","client","baseOptions","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","ApolloContext","options","mutate","unstable_SuspenseSSR","children","fallback","react","react_default","a","createElement","Fragment","getMarkupFromTree","tree","onBeforeRender","renderFunction","ssrManager","resolve","then","process","html","Provider","value","e","utils","useSubscription_extends","useSubscription","query","onSubscriptionData","useSubscription_objectWithoutPropertiesLoose","onSubscriptionDataRef","_useState","loading","result","setResultBase","setResult","newResult","actHack","current","skip","subscription","subscribe","nextResult","data","error","undefined","subscriptionData","unsubscribe","useQuery","ApolloProvider","useApolloClient","react__WEBPACK_IMPORTED_MODULE_0___default","n","createContext","Error","cachedQueriesByClient","WeakMap","getCachedQueriesForClient","queriesForClient","get","Map","set","getCacheKey","printer","_ref$ssr","ssr","_ref$skip","_ref$suspend","suspend","pollInterval","_ref$notifyOnNetworkS","notifyOnNetworkStatusChange","context","metadata","variables","actualCachePolicy","fetchPolicy","errorPolicy","fetchResults","ssrInUse","shouldSkip","watchQueryOptions","observableQuery","cacheKey","watchQuery","getCachedObservableQuery","responseId","setResponseId","currentResult","errors","getLastResult","bundle_esm","graphQLErrors","networkStatus","partial","invalidateCurrentResult","x","delete","invalidateCachedObservableQuery","ensureSupportedFetchPolicy","helpers","fetchMore","bind","refetch","startPolling","stopPolling","updateQuery","callback","objToKey","isPromiseLike","compact","lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0__","lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0___default","obj","sortedObj","sort","reduce","JSON","stringify","acc"],"mappings":"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","file":"bundle.npm.react-apollo-hooks.b9283a6c5ab923bd6a19.js","sourcesContent":["import { createContext } from 'react';\nexport function createSSRManager() {\n  var promiseSet = new Set();\n  return {\n    hasPromises: function hasPromises() {\n      return promiseSet.size > 0;\n    },\n    register: function register(promise) {\n      promiseSet.add(promise);\n    },\n    consumeAndAwaitPromises: function consumeAndAwaitPromises() {\n      var promises = Array.from(promiseSet);\n      promiseSet.clear();\n      return Promise.all(promises);\n    }\n  };\n}\nexport var SSRContext = createContext(null);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useApolloClient } from './ApolloContext';\nexport function useMutation(mutation, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      overrideClient = _ref.client,\n      baseOptions = _objectWithoutPropertiesLoose(_ref, [\"client\"]);\n\n  var client = useApolloClient(overrideClient);\n  return function (options) {\n    return client.mutate(_extends({\n      mutation: mutation\n    }, baseOptions, options));\n  };\n}","import React, { Suspense, useContext } from 'react';\nimport { SSRContext } from './internal/SSRContext';\nexport function unstable_SuspenseSSR(_ref) {\n  var children = _ref.children,\n      fallback = _ref.fallback;\n  var ssrManager = useContext(SSRContext);\n  return ssrManager ? React.createElement(React.Fragment, null, children) : React.createElement(Suspense, {\n    fallback: fallback\n  }, children);\n}","import * as React from 'react';\nimport { SSRContext, createSSRManager } from './internal/SSRContext';\nimport { isPromiseLike } from './utils';\nexport function getMarkupFromTree(_ref) {\n  var tree = _ref.tree,\n      onBeforeRender = _ref.onBeforeRender,\n      renderFunction = _ref.renderFunction;\n  var ssrManager = createSSRManager();\n\n  function process() {\n    try {\n      if (onBeforeRender) {\n        onBeforeRender();\n      }\n\n      var html = renderFunction(React.createElement(SSRContext.Provider, {\n        value: ssrManager\n      }, tree));\n\n      if (!ssrManager.hasPromises()) {\n        return html;\n      }\n    } catch (e) {\n      if (!isPromiseLike(e)) {\n        throw e;\n      }\n\n      ssrManager.register(e);\n    }\n\n    return ssrManager.consumeAndAwaitPromises().then(process);\n  }\n\n  return Promise.resolve().then(process);\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useEffect, useRef, useState } from 'react';\nimport { useApolloClient } from './ApolloContext';\nimport actHack from './internal/actHack';\nimport { objToKey } from './utils';\nexport function useSubscription(query, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      onSubscriptionData = _ref.onSubscriptionData,\n      overrideClient = _ref.client,\n      options = _objectWithoutPropertiesLoose(_ref, [\"onSubscriptionData\", \"client\"]);\n\n  var client = useApolloClient(overrideClient);\n  var onSubscriptionDataRef = useRef(null);\n\n  var _useState = useState({\n    loading: true\n  }),\n      result = _useState[0],\n      setResultBase = _useState[1];\n\n  onSubscriptionDataRef.current = onSubscriptionData;\n\n  function setResult(newResult) {\n    // A hack to get rid React warnings during tests.\n    actHack(function () {\n      setResultBase(newResult);\n    });\n  }\n\n  useEffect(function () {\n    if (options.skip === true) {\n      return;\n    }\n\n    var subscription = client.subscribe(_extends({}, options, {\n      query: query\n    })).subscribe(function (nextResult) {\n      var newResult = {\n        data: nextResult.data,\n        error: undefined,\n        loading: false\n      };\n      setResult(newResult);\n\n      if (onSubscriptionDataRef.current) {\n        onSubscriptionDataRef.current({\n          client: client,\n          subscriptionData: newResult\n        });\n      }\n    }, function (error) {\n      setResult({\n        loading: false,\n        data: result.data,\n        error: error\n      });\n    });\n    return function () {\n      setResult({\n        loading: true\n      });\n      subscription.unsubscribe();\n    };\n  }, [query, options && objToKey(options)]);\n  return result;\n}","export * from './useQuery';\nexport * from './useMutation';\nexport * from './ApolloContext';\nexport * from './SuspenseSSR';\nexport * from './getMarkupFromTree';\nexport * from './useSubscription';","import React, { useContext } from 'react';\nvar ApolloContext = React.createContext(null);\nexport function ApolloProvider(_ref) {\n  var client = _ref.client,\n      children = _ref.children;\n  return React.createElement(ApolloContext.Provider, {\n    value: client\n  }, children);\n}\nexport function useApolloClient(overrideClient) {\n  var client = useContext(ApolloContext); // Ensures that the number of hooks called from one render to another remains\n  // constant, despite the Apollo client read from context being swapped for\n  // one passed directly as prop.\n\n  if (overrideClient) {\n    return overrideClient;\n  }\n\n  if (!client) {\n    // https://github.com/apollographql/react-apollo/blob/5cb63b3625ce5e4a3d3e4ba132eaec2a38ef5d90/src/component-utils.tsx#L19-L22\n    throw new Error('Could not find \"client\" in the context or passed in as a prop. ' + 'Wrap the root component in an <ApolloProvider>, or pass an ' + 'ApolloClient instance in via props.');\n  }\n\n  return client;\n}","function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { print } from 'graphql/language/printer';\nimport { objToKey } from './utils';\nvar cachedQueriesByClient = new WeakMap();\nexport function getCachedObservableQuery(client, options) {\n  var queriesForClient = getCachedQueriesForClient(client);\n  var cacheKey = getCacheKey(options);\n  var observableQuery = queriesForClient.get(cacheKey);\n\n  if (observableQuery == null) {\n    observableQuery = client.watchQuery(options);\n    queriesForClient.set(cacheKey, observableQuery);\n  }\n\n  return observableQuery;\n}\nexport function invalidateCachedObservableQuery(client, options) {\n  var queriesForClient = getCachedQueriesForClient(client);\n  var cacheKey = getCacheKey(options);\n  queriesForClient.delete(cacheKey);\n}\n\nfunction getCachedQueriesForClient(client) {\n  var queriesForClient = cachedQueriesByClient.get(client);\n\n  if (queriesForClient == null) {\n    queriesForClient = new Map();\n    cachedQueriesByClient.set(client, queriesForClient);\n  }\n\n  return queriesForClient;\n}\n\nfunction getCacheKey(_ref) {\n  var query = _ref.query,\n      options = _objectWithoutPropertiesLoose(_ref, [\"query\"]);\n\n  return print(query) + \"@@\" + objToKey(options);\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { ApolloError } from 'apollo-client';\nimport { useContext, useEffect, useMemo, useState } from 'react';\nimport { useApolloClient } from './ApolloContext';\nimport { SSRContext } from './internal/SSRContext';\nimport actHack from './internal/actHack';\nimport { getCachedObservableQuery, invalidateCachedObservableQuery } from './queryCache';\nimport { compact, objToKey } from './utils';\nexport function useQuery(query, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$ssr = _ref.ssr,\n      ssr = _ref$ssr === void 0 ? true : _ref$ssr,\n      _ref$skip = _ref.skip,\n      skip = _ref$skip === void 0 ? false : _ref$skip,\n      _ref$suspend = _ref.suspend,\n      suspend = _ref$suspend === void 0 ? false : _ref$suspend,\n      pollInterval = _ref.pollInterval,\n      _ref$notifyOnNetworkS = _ref.notifyOnNetworkStatusChange,\n      notifyOnNetworkStatusChange = _ref$notifyOnNetworkS === void 0 ? false : _ref$notifyOnNetworkS,\n      overrideClient = _ref.client,\n      context = _ref.context,\n      metadata = _ref.metadata,\n      variables = _ref.variables,\n      actualCachePolicy = _ref.fetchPolicy,\n      errorPolicy = _ref.errorPolicy,\n      fetchResults = _ref.fetchResults;\n\n  var client = useApolloClient(overrideClient);\n  var ssrManager = useContext(SSRContext);\n  var ssrInUse = ssr && ssrManager; // Skips when `skip: true` or SSRContext passed but `ssr: false`\n\n  var shouldSkip = skip || ssrManager != null && !ssr;\n  var fetchPolicy = ssrInUse && ( // Taken from https://github.com/apollographql/react-apollo/blob/2d7e48b7d0c26e792e1ed26e98bb84d8fba5bb8a/src/Query.tsx#L167-L169\n  actualCachePolicy === 'network-only' || actualCachePolicy === 'cache-and-network') ? 'cache-first' : actualCachePolicy;\n  var watchQueryOptions = useMemo(function () {\n    return compact({\n      context: context,\n      errorPolicy: errorPolicy,\n      fetchPolicy: fetchPolicy,\n      fetchResults: fetchResults,\n      metadata: metadata,\n      notifyOnNetworkStatusChange: notifyOnNetworkStatusChange,\n      pollInterval: pollInterval,\n      query: query,\n      variables: variables\n    });\n  }, [query, pollInterval, notifyOnNetworkStatusChange, context && objToKey(context), metadata && objToKey(metadata), variables && objToKey(variables), fetchPolicy, errorPolicy, fetchResults]);\n  var observableQuery = useMemo(function () {\n    return getCachedObservableQuery(client, watchQueryOptions);\n  }, [client, watchQueryOptions]);\n\n  var _useState = useState(0),\n      responseId = _useState[0],\n      setResponseId = _useState[1];\n\n  var currentResult = useMemo(function () {\n    var result = observableQuery.currentResult(); // return the old result data when there is an error\n\n    var data = result.data;\n\n    if (result.error || result.errors) {\n      data = _extends({}, result.data, (observableQuery.getLastResult() || {}).data);\n    }\n\n    return {\n      data: data,\n      error: result.errors && result.errors.length > 0 ? new ApolloError({\n        graphQLErrors: result.errors\n      }) : result.error,\n      errors: result.errors,\n      loading: result.loading,\n      // don't try to return `networkStatus` when suspense it's used\n      // because it's unreliable in that case\n      // https://github.com/trojanowski/react-apollo-hooks/pull/68\n      networkStatus: suspend ? undefined : result.networkStatus,\n      partial: result.partial\n    };\n  }, [shouldSkip, responseId, observableQuery]);\n  useEffect(function () {\n    if (shouldSkip) {\n      return;\n    }\n\n    var invalidateCurrentResult = function invalidateCurrentResult() {\n      // A hack to get rid React warnings during tests. The default\n      // implementation of `actHack` just invokes the callback immediately.\n      // In tests, it's replaced with `act` from react-testing-library.\n      // A better solution welcome.\n      actHack(function () {\n        setResponseId(function (x) {\n          return x + 1;\n        });\n      });\n    };\n\n    var subscription = observableQuery.subscribe(invalidateCurrentResult, invalidateCurrentResult);\n    invalidateCachedObservableQuery(client, watchQueryOptions);\n    return function () {\n      subscription.unsubscribe();\n    };\n  }, [shouldSkip, observableQuery]);\n  ensureSupportedFetchPolicy(suspend, fetchPolicy);\n  var helpers = {\n    fetchMore: observableQuery.fetchMore.bind(observableQuery),\n    refetch: observableQuery.refetch.bind(observableQuery),\n    startPolling: observableQuery.startPolling.bind(observableQuery),\n    stopPolling: observableQuery.stopPolling.bind(observableQuery),\n    updateQuery: observableQuery.updateQuery.bind(observableQuery)\n  };\n\n  if (shouldSkip) {\n    // Taken from https://github.com/apollographql/react-apollo/blob/5cb63b3625ce5e4a3d3e4ba132eaec2a38ef5d90/src/Query.tsx#L376-L381\n    return _extends({}, helpers, {\n      data: undefined,\n      error: undefined,\n      loading: false,\n      networkStatus: undefined\n    });\n  }\n\n  if (currentResult.partial) {\n    if (suspend) {\n      // throw a promise - use the react suspense to wait until the data is\n      // available\n      throw observableQuery.result();\n    }\n\n    if (ssrInUse) {\n      ssrManager.register(observableQuery.result());\n    }\n  }\n\n  return _extends({}, helpers, currentResult);\n}\n\nfunction ensureSupportedFetchPolicy(suspend, fetchPolicy) {\n  if (suspend && fetchPolicy && fetchPolicy !== 'cache-first') {\n    throw new Error(\"Fetch policy \" + fetchPolicy + \" is not supported without 'suspend: false'\");\n  }\n}","export default function actHack(callback) {\n  callback();\n}","import isPlainObject from 'lodash/isPlainObject';\nexport function objToKey(obj) {\n  if (!isPlainObject(obj)) {\n    return obj;\n  }\n\n  var sortedObj = Object.keys(obj).sort().reduce(function (result, key) {\n    result[key] = objToKey(obj[key]);\n    return result;\n  }, {});\n  return JSON.stringify(sortedObj);\n}\nexport function isPromiseLike(value) {\n  return value != null && typeof value.then === 'function';\n}\nexport function compact(obj) {\n  return Object.keys(obj).reduce(function (acc, key) {\n    if (obj[key] !== undefined) {\n      acc[key] = obj[key];\n    }\n\n    return acc;\n  }, {});\n}"],"sourceRoot":""}