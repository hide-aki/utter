{"version":3,"sources":["webpack:////var/www/html/utter/node_modules/graphql-anywhere/lib/async.js"],"names":["exports","apolloUtilities","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","hasOwn","Object","prototype","hasOwnProperty","merge","dest","src","keys","forEach","key","srcVal","executeSelectionSet$1","selectionSet","rootValue","execContext","fragmentMap","contextValue","variables","execute","_this","_a","variableValues","selection","fieldResult","resultFieldKey","fragment","typeCondition","fragmentResult","shouldInclude","isField","executeField$1","resultKeyNameFromField","undefined","isInlineFragment","name","Error","fragmentMatcher","all","selections","map","resultMapper","field","resolver","fieldName","args","info","argumentsObjectFromField","isLeaf","resultKey","directives","getDirectiveInfoFromField","Array","isArray","executeSubSelectedArray$1","item","graphql","document","execOptions","mainDefinition","getMainDefinition","fragments","getFragmentDefinitions","createFragmentMap","defineProperty","factory","__webpack_require__"],"mappings":"gFAIC,SAAAA,EAAAC,GAA4C;;;;;;;;;;;;;;oFAiB7C,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,WAAAD,MAAAE,UAAA,SAAAC,EAAAC,GACA,SAAAC,EAAAC,GAAuC,IAAMC,EAAAN,EAAAO,KAAAF,IAA+B,MAAAG,GAAYL,EAAAK,IACxF,SAAAC,EAAAJ,GAAsC,IAAMC,EAAAN,EAAA,MAAAK,IAAmC,MAAAG,GAAYL,EAAAK,IAC3F,SAAAF,EAAAI,GAAmCA,EAAAC,KAAAT,EAAAQ,EAAAL,OAAA,IAAAN,EAAA,SAAAG,GAAiEA,EAAAQ,EAAAL,SAAyBO,KAAAR,EAAAK,GAC7HH,GAAAN,IAAAa,MAAAhB,EAAAC,GAAA,KAAAS,UAIA,SAAAO,EAAAjB,EAAAkB,GACA,IAA4GC,EAAAC,EAAAC,EAAAC,EAA5GC,EAAA,CAAiBC,MAAA,EAAAC,KAAA,WAA6B,KAAAJ,EAAA,SAAAA,EAAA,GAA0B,OAAAA,EAAA,IAAeK,KAAA,GAAAC,IAAA,IACvF,OAAAL,EAAA,CAAoBZ,KAAAkB,EAAA,GAAAC,MAAAD,EAAA,GAAAE,OAAAF,EAAA,IAAqD,mBAAAG,SAAAT,EAAAS,OAAAC,UAAA,WAAoE,OAAAC,OAAeX,EAC5J,SAAAM,EAAAM,GAA0B,gBAAAC,GAAsB,OAChD,SAAAC,GACA,GAAAjB,EAAA,UAAAkB,UAAA,mCACA,KAAAd,GAAA,IACA,GAAAJ,EAAA,EAAAC,IAAAC,EAAA,EAAAe,EAAA,GAAAhB,EAAA,OAAAgB,EAAA,GAAAhB,EAAA,SAAAC,EAAAD,EAAA,SAAAC,EAAAiB,KAAAlB,GAAA,GAAAA,EAAAV,SAAAW,IAAAiB,KAAAlB,EAAAgB,EAAA,KAAAtB,KAAA,OAAAO,EAEA,OADAD,EAAA,EAAAC,IAAAe,EAAA,GAAAA,EAAA,GAAAf,EAAAb,QACA4B,EAAA,IACA,cAAAf,EAAAe,EAA2C,MAC3C,OAAsC,OAAtCb,EAAAC,QAAsC,CAAShB,MAAA4B,EAAA,GAAAtB,MAAA,GAC/C,OAAAS,EAAAC,QAAsCJ,EAAAgB,EAAA,GAAWA,EAAA,IAAU,SAC3D,OAAAA,EAAAb,EAAAI,IAAAY,MAA6ChB,EAAAG,KAAAa,MAAc,SAC3D,QACA,KAAAlB,KAAAE,EAAAG,MAAAc,OAAA,GAAAnB,IAAAmB,OAAA,UAAAJ,EAAA,QAAAA,EAAA,KAAiHb,EAAA,EAAO,SACxH,OAAAa,EAAA,MAAAf,GAAAe,EAAA,GAAAf,EAAA,IAAAe,EAAA,GAAAf,EAAA,KAAoFE,EAAAC,MAAAY,EAAA,GAAiB,MACrG,OAAAA,EAAA,IAAAb,EAAAC,MAAAH,EAAA,IAA4DE,EAAAC,MAAAH,EAAA,GAAgBA,EAAAe,EAAQ,MACpF,GAAAf,GAAAE,EAAAC,MAAAH,EAAA,IAAkDE,EAAAC,MAAAH,EAAA,GAAgBE,EAAAI,IAAAc,KAAAL,GAAgB,MAClFf,EAAA,IAAAE,EAAAI,IAAAY,MACAhB,EAAAG,KAAAa,MAAqC,SAErCH,EAAAlB,EAAAoB,KAAAtC,EAAAuB,GACa,MAAAZ,GAAYyB,EAAA,GAAAzB,GAAaS,EAAA,EAAS,QAAUD,EAAAE,EAAA,EACzD,KAAAe,EAAA,SAAAA,EAAA,GAAuC,OAAS5B,MAAA4B,EAAA,GAAAA,EAAA,UAAAtB,MAAA,GArBAL,CAAA,CAAAyB,EAAAC,MAyBhD,IAAAO,EAAAC,OAAAC,UAAAC,eACA,SAAAC,EAAAC,EAAAC,GACA,OAAAA,GAAA,iBAAAA,GACAL,OAAAM,KAAAD,GAAAE,QAAA,SAAAC,GACA,IAAAC,EAAAJ,EAAAG,GACAT,EAAAJ,KAAAS,EAAAI,GAIAL,EAAAC,EAAAI,GAAAC,GAHAL,EAAAI,GAAAC,IA0BA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,OAAAzD,EAAAkC,UAAA,oBACA,IAAAwB,EAAAC,EAAAC,EAAA9C,EAAA+C,EACAC,EAAA5B,KACA,OAAAhB,EAAAgB,KAAA,SAAA6B,GACA,OAAAA,EAAAtC,OACA,OA8CA,OA7CAiC,EAAAD,EAAAC,YAAAC,EAAAF,EAAAE,aAAAC,EAAAH,EAAAO,eACAlD,EAAA,GACA+C,EAAA,SAAAI,GAAwD,OAAAjE,EAAA8D,OAAA,oBACxD,IAAAI,EAAAC,EAAAC,EAAAC,EAAAC,EACA,OAAApD,EAAAgB,KAAA,SAAA6B,GACA,OAAAA,EAAAtC,OACA,OACA,OAAA1B,EAAAwE,cAAAN,EAAAL,GAGA7D,EAAAyE,QAAAP,GACA,GAAAQ,EAAAR,EAAAT,EAAAC,IADA,MAFA,IAIA,OAWA,OAVAS,EAAAH,EAAArC,OACAyC,EAAApE,EAAA2E,uBAAAT,QACAU,IAAAT,SACAS,IAAA7D,EAAAqD,GACArD,EAAAqD,GAAAD,EAGAnB,EAAAjC,EAAAqD,GAAAD,IAGA,IACA,OACA,GAAAnE,EAAA6E,iBAAAX,GACAG,EAAAH,OAIA,KADAG,EAAAV,EAAAO,EAAAY,KAAApE,QAEA,UAAAqE,MAAA,qBAAAb,EAAAY,KAAApE,OAIA,OADA4D,EAAAD,EAAAC,cAAAQ,KAAApE,MACAgD,EAAAsB,gBAAAvB,EAAAa,EAAAV,GACA,GAAAL,EAAAc,EAAAb,aAAAC,EAAAC,IADA,MAEA,OACAa,EAAAP,EAAArC,OACAqB,EAAAjC,EAAAwD,GACAP,EAAAtC,MAAA,EACA,uBAIA,GAAApB,QAAA2E,IAAAzB,EAAA0B,WAAAC,IAAArB,KACA,OAEA,OADAE,EAAArC,OACA+B,EAAA0B,aACA,GAAA1B,EAAA0B,aAAArE,EAAA0C,IAEA,GAAA1C,QAKA,SAAA2D,EAAAW,EAAA5B,EAAAC,GACA,OAAAzD,EAAAkC,UAAA,oBACA,IAAA0B,EAAAD,EAAA0B,EAAAC,EAAAC,EAAAC,EAAA1E,EACA,OAAAI,EAAAgB,KAAA,SAAA6B,GACA,OAAAA,EAAAtC,OACA,OASA,OARAmC,EAAAH,EAAAO,eAAAL,EAAAF,EAAAE,aAAA0B,EAAA5B,EAAA4B,SACAC,EAAAF,EAAAP,KAAApE,MACA8E,EAAAxF,EAAA0F,yBAAAL,EAAAxB,GACA4B,EAAA,CACAE,QAAAN,EAAA7B,aACAoC,UAAA5F,EAAA2E,uBAAAU,GACAQ,WAAA7F,EAAA8F,0BAAAT,EAAAxB,IAEA,GAAAyB,EAAAC,EAAA9B,EAAA+B,EAAA5B,EAAA6B,IACA,OAEA,OADA1E,EAAAiD,EAAArC,OACA0D,EAAA7B,aAGA,MAAAzC,EACA,GAAAA,GAEAgF,MAAAC,QAAAjF,GACA,GAAAkF,EAAAZ,EAAAtE,EAAA2C,IAEA,GAAAH,EAAA8B,EAAA7B,aAAAzC,EAAA2C,IARA,GAAA3C,QAaA,SAAAkF,EAAAZ,EAAAtE,EAAA2C,GACA,OAAApD,QAAA2E,IAAAlE,EAAAoE,IAAA,SAAAe,GACA,cAAAA,EACA,KAEAH,MAAAC,QAAAE,GACAD,EAAAZ,EAAAa,EAAAxC,GAEAH,EAAA8B,EAAA7B,aAAA0C,EAAAxC,MAIA3D,EAAAoG,QA3HA,SAAAb,EAAAc,EAAA3C,EAAAG,EAAAK,EAAAoC,QACA,IAAAA,IAAqCA,EAAA,IACrC,IAAAC,EAAAtG,EAAAuG,kBAAAH,GACAI,EAAAxG,EAAAyG,uBAAAL,GACAzC,EAAA3D,EAAA0G,kBAAAF,GACApB,EAAAiB,EAAAjB,aACAJ,EAAAqB,EAAArB,iBAAA,WAA2E,UAC3EtB,EAAA,CACAC,cACAC,eACAK,iBACAmB,eACAE,WACAN,mBAEA,OAAAzB,EAAA+C,EAAA9C,aAAAC,EAAAC,IA8GAb,OAAA8D,eAAA5G,EAAA,cAAkDW,OAAA,IArMckG,CAAA7G,EAAoB8G,EAAQ","file":"bundle.npm.graphql-anywhere.98fb90a33c5e47a044bd.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('apollo-utilities')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'apollo-utilities'], factory) :\n    (global = global || self, factory(global.graphqlAnywhereAsync = {}, global.apollo.utilities));\n}(this, function (exports, apolloUtilities) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\n\n    var hasOwn = Object.prototype.hasOwnProperty;\n    function merge(dest, src) {\n        if (src !== null && typeof src === 'object') {\n            Object.keys(src).forEach(function (key) {\n                var srcVal = src[key];\n                if (!hasOwn.call(dest, key)) {\n                    dest[key] = srcVal;\n                }\n                else {\n                    merge(dest[key], srcVal);\n                }\n            });\n        }\n    }\n\n    function graphql$1(resolver, document, rootValue, contextValue, variableValues, execOptions) {\n        if (execOptions === void 0) { execOptions = {}; }\n        var mainDefinition = apolloUtilities.getMainDefinition(document);\n        var fragments = apolloUtilities.getFragmentDefinitions(document);\n        var fragmentMap = apolloUtilities.createFragmentMap(fragments);\n        var resultMapper = execOptions.resultMapper;\n        var fragmentMatcher = execOptions.fragmentMatcher || (function () { return true; });\n        var execContext = {\n            fragmentMap: fragmentMap,\n            contextValue: contextValue,\n            variableValues: variableValues,\n            resultMapper: resultMapper,\n            resolver: resolver,\n            fragmentMatcher: fragmentMatcher,\n        };\n        return executeSelectionSet$1(mainDefinition.selectionSet, rootValue, execContext);\n    }\n    function executeSelectionSet$1(selectionSet, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fragmentMap, contextValue, variables, result, execute;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        fragmentMap = execContext.fragmentMap, contextValue = execContext.contextValue, variables = execContext.variableValues;\n                        result = {};\n                        execute = function (selection) { return __awaiter(_this, void 0, void 0, function () {\n                            var fieldResult, resultFieldKey, fragment, typeCondition, fragmentResult;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        if (!apolloUtilities.shouldInclude(selection, variables)) {\n                                            return [2];\n                                        }\n                                        if (!apolloUtilities.isField(selection)) return [3, 2];\n                                        return [4, executeField$1(selection, rootValue, execContext)];\n                                    case 1:\n                                        fieldResult = _a.sent();\n                                        resultFieldKey = apolloUtilities.resultKeyNameFromField(selection);\n                                        if (fieldResult !== undefined) {\n                                            if (result[resultFieldKey] === undefined) {\n                                                result[resultFieldKey] = fieldResult;\n                                            }\n                                            else {\n                                                merge(result[resultFieldKey], fieldResult);\n                                            }\n                                        }\n                                        return [2];\n                                    case 2:\n                                        if (apolloUtilities.isInlineFragment(selection)) {\n                                            fragment = selection;\n                                        }\n                                        else {\n                                            fragment = fragmentMap[selection.name.value];\n                                            if (!fragment) {\n                                                throw new Error(\"No fragment named \" + selection.name.value);\n                                            }\n                                        }\n                                        typeCondition = fragment.typeCondition.name.value;\n                                        if (!execContext.fragmentMatcher(rootValue, typeCondition, contextValue)) return [3, 4];\n                                        return [4, executeSelectionSet$1(fragment.selectionSet, rootValue, execContext)];\n                                    case 3:\n                                        fragmentResult = _a.sent();\n                                        merge(result, fragmentResult);\n                                        _a.label = 4;\n                                    case 4: return [2];\n                                }\n                            });\n                        }); };\n                        return [4, Promise.all(selectionSet.selections.map(execute))];\n                    case 1:\n                        _a.sent();\n                        if (execContext.resultMapper) {\n                            return [2, execContext.resultMapper(result, rootValue)];\n                        }\n                        return [2, result];\n                }\n            });\n        });\n    }\n    function executeField$1(field, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var variables, contextValue, resolver, fieldName, args, info, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        variables = execContext.variableValues, contextValue = execContext.contextValue, resolver = execContext.resolver;\n                        fieldName = field.name.value;\n                        args = apolloUtilities.argumentsObjectFromField(field, variables);\n                        info = {\n                            isLeaf: !field.selectionSet,\n                            resultKey: apolloUtilities.resultKeyNameFromField(field),\n                            directives: apolloUtilities.getDirectiveInfoFromField(field, variables),\n                        };\n                        return [4, resolver(fieldName, rootValue, args, contextValue, info)];\n                    case 1:\n                        result = _a.sent();\n                        if (!field.selectionSet) {\n                            return [2, result];\n                        }\n                        if (result == null) {\n                            return [2, result];\n                        }\n                        if (Array.isArray(result)) {\n                            return [2, executeSubSelectedArray$1(field, result, execContext)];\n                        }\n                        return [2, executeSelectionSet$1(field.selectionSet, result, execContext)];\n                }\n            });\n        });\n    }\n    function executeSubSelectedArray$1(field, result, execContext) {\n        return Promise.all(result.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return executeSubSelectedArray$1(field, item, execContext);\n            }\n            return executeSelectionSet$1(field.selectionSet, item, execContext);\n        }));\n    }\n\n    exports.graphql = graphql$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=async.js.map\n"],"sourceRoot":""}