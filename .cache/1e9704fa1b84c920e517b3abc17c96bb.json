{"id":"../../node_modules/redux-crud/dist/reducers/invariants.js","dependencies":[{"name":"/var/www/html/utter/node_modules/redux-crud/package.json","includedInParent":true,"mtime":1536167833977},{"name":"/var/www/html/utter/package.json","includedInParent":true,"mtime":1537713411456},{"name":"/var/www/html/utter/.babelrc","includedInParent":true,"mtime":1537642482682},{"name":"./invariants/assertHasKey","loc":{"line":3,"column":29},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/reducers/invariants.js","resolved":"/var/www/html/utter/node_modules/redux-crud/dist/reducers/invariants/assertHasKey.js"},{"name":"../utils/assertNotArray","loc":{"line":4,"column":31},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/reducers/invariants.js","resolved":"/var/www/html/utter/node_modules/redux-crud/dist/utils/assertNotArray.js"},{"name":"../utils/makeScope","loc":{"line":5,"column":26},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/reducers/invariants.js","resolved":"/var/www/html/utter/node_modules/redux-crud/dist/utils/makeScope.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar assertHasKey_1 = require(\"./invariants/assertHasKey\");\nvar assertNotArray_1 = require(\"../utils/assertNotArray\");\nvar makeScope_1 = require(\"../utils/makeScope\");\nfunction invariants(baseArgs, extraArgs) {\n    var config = extraArgs.config;\n    if (!config.resourceName)\n        throw new Error(\"Expected config.resourceName\");\n    var scope = makeScope_1.default(config, baseArgs.reducerName);\n    if (!config.key)\n        throw new Error(scope + \": Expected config.key\");\n    if (!extraArgs.record)\n        throw new Error(scope + \": Expected record/s\");\n    extraArgs.assertValidStore(scope, extraArgs.current);\n    if (!baseArgs.canBeArray) {\n        assertNotArray_1.default(extraArgs.config, baseArgs.reducerName, extraArgs.record);\n    }\n    assertHasKey_1.default(extraArgs.config, scope, extraArgs.record);\n}\nexports.default = invariants;\n","map":{"mappings":[{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/invariants.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}}],"sources":{"../../node_modules/redux-crud/dist/reducers/invariants.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar assertHasKey_1 = require(\"./invariants/assertHasKey\");\nvar assertNotArray_1 = require(\"../utils/assertNotArray\");\nvar makeScope_1 = require(\"../utils/makeScope\");\nfunction invariants(baseArgs, extraArgs) {\n    var config = extraArgs.config;\n    if (!config.resourceName)\n        throw new Error(\"Expected config.resourceName\");\n    var scope = makeScope_1.default(config, baseArgs.reducerName);\n    if (!config.key)\n        throw new Error(scope + \": Expected config.key\");\n    if (!extraArgs.record)\n        throw new Error(scope + \": Expected record/s\");\n    extraArgs.assertValidStore(scope, extraArgs.current);\n    if (!baseArgs.canBeArray) {\n        assertNotArray_1.default(extraArgs.config, baseArgs.reducerName, extraArgs.record);\n    }\n    assertHasKey_1.default(extraArgs.config, scope, extraArgs.record);\n}\nexports.default = invariants;\n"},"lineCount":22}},"hash":"700d905cd726896e1f298263e3f3ad2e","cacheData":{"env":{}}}