{"id":"../../node_modules/redux-orm/lib/descriptors.js","dependencies":[{"name":"/var/www/html/utter/node_modules/redux-orm/package.json","includedInParent":true,"mtime":1536167834089},{"name":"/var/www/html/utter/package.json","includedInParent":true,"mtime":1537713411456},{"name":"/var/www/html/utter/.babelrc","includedInParent":true,"mtime":1537642482682},{"name":"/var/www/html/utter/node_modules/redux-orm/.babelrc","includedInParent":true,"mtime":1536167834089},{"name":"babel-runtime/helpers/defineProperty","loc":{"line":8,"column":31},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/descriptors.js","resolved":"/var/www/html/utter/node_modules/babel-runtime/helpers/defineProperty.js"},{"name":"lodash/difference","loc":{"line":12,"column":26},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/descriptors.js","resolved":"/var/www/html/utter/node_modules/lodash/difference.js"},{"name":"./utils","loc":{"line":16,"column":21},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/descriptors.js","resolved":"/var/www/html/utter/node_modules/redux-orm/lib/utils.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.manyToManyDescriptor = exports.backwardManyToOneDescriptor = exports.backwardOneToOneDescriptor = exports.forwardOneToOneDescriptor = exports.forwardManyToOneDescriptor = exports.attrDescriptor = undefined;\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _difference = require('lodash/difference');\n\nvar _difference2 = _interopRequireDefault(_difference);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction attrDescriptor(fieldName) {\n    return {\n        get: function get() {\n            return this._fields[fieldName];\n        },\n        set: function set(value) {\n            return this.set(fieldName, value);\n        },\n\n\n        enumerable: true,\n        configurable: true\n    };\n}\n\n// Forwards side a Foreign Key: returns one object.\n// Also works as forwardsOneToOneDescriptor.\nfunction forwardManyToOneDescriptor(fieldName, declaredToModelName) {\n    return {\n        get: function get() {\n            var currentSession = this.getClass().session;\n            var declaredToModel = currentSession[declaredToModelName];\n            var toId = this._fields[fieldName];\n            if (typeof toId !== 'undefined' && toId !== null) {\n                return declaredToModel.withId(toId);\n            }\n            return undefined;\n        },\n        set: function set(value) {\n            var currentSession = this.getClass().session;\n            var declaredToModel = currentSession[declaredToModelName];\n\n            var toId = void 0;\n            if (value instanceof declaredToModel) {\n                toId = value.getId();\n            } else {\n                toId = value;\n            }\n\n            this.update((0, _defineProperty3.default)({}, fieldName, toId));\n        }\n    };\n}\n\nvar forwardOneToOneDescriptor = forwardManyToOneDescriptor;\n\nfunction backwardOneToOneDescriptor(declaredFieldName, declaredFromModelName) {\n    return {\n        get: function get() {\n            var currentSession = this.getClass().session;\n            var declaredFromModel = currentSession[declaredFromModelName];\n            var thisId = this.getId();\n            var found = void 0;\n            try {\n                found = declaredFromModel.get((0, _defineProperty3.default)({}, declaredFieldName, thisId));\n            } catch (e) {\n                return null;\n            }\n            return found;\n        },\n        set: function set() {\n            throw new Error('Can\\'t mutate a reverse one-to-one relation.');\n        }\n    };\n}\n\n// Reverse side of a Foreign Key: returns many objects.\nfunction backwardManyToOneDescriptor(declaredFieldName, declaredFromModelName) {\n    return {\n        get: function get() {\n            var currentSession = this.getClass().session;\n            var declaredFromModel = currentSession[declaredFromModelName];\n            var thisId = this.getId();\n            return declaredFromModel.filter((0, _defineProperty3.default)({}, declaredFieldName, thisId));\n        },\n        set: function set() {\n            throw new Error('Can\\'t mutate a reverse many-to-one relation.');\n        }\n    };\n}\n\n// Both sides of Many to Many, use the reverse flag.\nfunction manyToManyDescriptor(declaredFromModelName, declaredToModelName, throughModelName, throughFields, reverse) {\n    return {\n        get: function get() {\n            var currentSession = this.getClass().session;\n            var declaredFromModel = currentSession[declaredFromModelName];\n            var declaredToModel = currentSession[declaredToModelName];\n            var throughModel = currentSession[throughModelName];\n            var thisId = this.getId();\n\n            var fromFieldName = throughFields.from;\n            var toFieldName = throughFields.to;\n\n            var lookupObj = {};\n            if (!reverse) {\n                lookupObj[fromFieldName] = thisId;\n            } else {\n                lookupObj[toFieldName] = thisId;\n            }\n\n            var throughQs = throughModel.filter(lookupObj);\n            var toIds = throughQs.toRefArray().map(function (obj) {\n                return obj[reverse ? fromFieldName : toFieldName];\n            });\n\n            var qsFromModel = reverse ? declaredFromModel : declaredToModel;\n            var qs = qsFromModel.filter(function (attrs) {\n                return (0, _utils.includes)(toIds, attrs[qsFromModel.idAttribute]);\n            });\n\n            qs.add = function add() {\n                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                    args[_key] = arguments[_key];\n                }\n\n                var idsToAdd = args.map(_utils.normalizeEntity);\n\n                var filterWithAttr = reverse ? fromFieldName : toFieldName;\n\n                var existingQs = throughQs.filter(function (through) {\n                    return (0, _utils.includes)(idsToAdd, through[filterWithAttr]);\n                });\n\n                if (existingQs.exists()) {\n                    var existingIds = existingQs.toRefArray().map(function (through) {\n                        return through[filterWithAttr];\n                    });\n\n                    var toAddModel = reverse ? declaredFromModel.modelName : declaredToModel.modelName;\n\n                    var addFromModel = reverse ? declaredToModel.modelName : declaredFromModel.modelName;\n                    throw new Error('Tried to add already existing ' + toAddModel + ' id(s) ' + existingIds + ' to the ' + addFromModel + ' instance with id ' + thisId);\n                }\n\n                if (reverse) {\n                    idsToAdd.forEach(function (id) {\n                        var _throughModel$create;\n\n                        throughModel.create((_throughModel$create = {}, (0, _defineProperty3.default)(_throughModel$create, fromFieldName, id), (0, _defineProperty3.default)(_throughModel$create, toFieldName, thisId), _throughModel$create));\n                    });\n                } else {\n                    idsToAdd.forEach(function (id) {\n                        var _throughModel$create2;\n\n                        throughModel.create((_throughModel$create2 = {}, (0, _defineProperty3.default)(_throughModel$create2, fromFieldName, thisId), (0, _defineProperty3.default)(_throughModel$create2, toFieldName, id), _throughModel$create2));\n                    });\n                }\n            };\n\n            qs.clear = function clear() {\n                throughQs.delete();\n            };\n\n            qs.remove = function remove() {\n                for (var _len2 = arguments.length, entities = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                    entities[_key2] = arguments[_key2];\n                }\n\n                var idsToRemove = entities.map(_utils.normalizeEntity);\n\n                var attrInIdsToRemove = reverse ? fromFieldName : toFieldName;\n                var entitiesToDelete = throughQs.filter(function (through) {\n                    return (0, _utils.includes)(idsToRemove, through[attrInIdsToRemove]);\n                });\n\n                if (entitiesToDelete.count() !== idsToRemove.length) {\n                    // Tried deleting non-existing entities.\n                    var entitiesToDeleteIds = entitiesToDelete.toRefArray().map(function (through) {\n                        return through[attrInIdsToRemove];\n                    });\n\n                    var unexistingIds = (0, _difference2.default)(idsToRemove, entitiesToDeleteIds);\n\n                    var toDeleteModel = reverse ? declaredFromModel.modelName : declaredToModel.modelName;\n\n                    var deleteFromModel = reverse ? declaredToModel.modelName : declaredFromModel.modelName;\n\n                    throw new Error('Tried to delete non-existing ' + toDeleteModel + ' id(s) ' + unexistingIds + ' from the ' + deleteFromModel + ' instance with id ' + thisId);\n                }\n\n                entitiesToDelete.delete();\n            };\n\n            return qs;\n        },\n        set: function set() {\n            throw new Error('Tried setting a M2M field. Please use the related QuerySet methods add and remove.');\n        }\n    };\n}\n\nexports.attrDescriptor = attrDescriptor;\nexports.forwardManyToOneDescriptor = forwardManyToOneDescriptor;\nexports.forwardOneToOneDescriptor = forwardOneToOneDescriptor;\nexports.backwardOneToOneDescriptor = backwardOneToOneDescriptor;\nexports.backwardManyToOneDescriptor = backwardManyToOneDescriptor;\nexports.manyToManyDescriptor = manyToManyDescriptor;","map":{"mappings":[{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/redux-orm/lib/descriptors.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}}],"sources":{"../../node_modules/redux-orm/lib/descriptors.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.manyToManyDescriptor = exports.backwardManyToOneDescriptor = exports.backwardOneToOneDescriptor = exports.forwardOneToOneDescriptor = exports.forwardManyToOneDescriptor = exports.attrDescriptor = undefined;\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _difference = require('lodash/difference');\n\nvar _difference2 = _interopRequireDefault(_difference);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction attrDescriptor(fieldName) {\n    return {\n        get: function get() {\n            return this._fields[fieldName];\n        },\n        set: function set(value) {\n            return this.set(fieldName, value);\n        },\n\n\n        enumerable: true,\n        configurable: true\n    };\n}\n\n// Forwards side a Foreign Key: returns one object.\n// Also works as forwardsOneToOneDescriptor.\nfunction forwardManyToOneDescriptor(fieldName, declaredToModelName) {\n    return {\n        get: function get() {\n            var currentSession = this.getClass().session;\n            var declaredToModel = currentSession[declaredToModelName];\n            var toId = this._fields[fieldName];\n            if (typeof toId !== 'undefined' && toId !== null) {\n                return declaredToModel.withId(toId);\n            }\n            return undefined;\n        },\n        set: function set(value) {\n            var currentSession = this.getClass().session;\n            var declaredToModel = currentSession[declaredToModelName];\n\n            var toId = void 0;\n            if (value instanceof declaredToModel) {\n                toId = value.getId();\n            } else {\n                toId = value;\n            }\n\n            this.update((0, _defineProperty3.default)({}, fieldName, toId));\n        }\n    };\n}\n\nvar forwardOneToOneDescriptor = forwardManyToOneDescriptor;\n\nfunction backwardOneToOneDescriptor(declaredFieldName, declaredFromModelName) {\n    return {\n        get: function get() {\n            var currentSession = this.getClass().session;\n            var declaredFromModel = currentSession[declaredFromModelName];\n            var thisId = this.getId();\n            var found = void 0;\n            try {\n                found = declaredFromModel.get((0, _defineProperty3.default)({}, declaredFieldName, thisId));\n            } catch (e) {\n                return null;\n            }\n            return found;\n        },\n        set: function set() {\n            throw new Error('Can\\'t mutate a reverse one-to-one relation.');\n        }\n    };\n}\n\n// Reverse side of a Foreign Key: returns many objects.\nfunction backwardManyToOneDescriptor(declaredFieldName, declaredFromModelName) {\n    return {\n        get: function get() {\n            var currentSession = this.getClass().session;\n            var declaredFromModel = currentSession[declaredFromModelName];\n            var thisId = this.getId();\n            return declaredFromModel.filter((0, _defineProperty3.default)({}, declaredFieldName, thisId));\n        },\n        set: function set() {\n            throw new Error('Can\\'t mutate a reverse many-to-one relation.');\n        }\n    };\n}\n\n// Both sides of Many to Many, use the reverse flag.\nfunction manyToManyDescriptor(declaredFromModelName, declaredToModelName, throughModelName, throughFields, reverse) {\n    return {\n        get: function get() {\n            var currentSession = this.getClass().session;\n            var declaredFromModel = currentSession[declaredFromModelName];\n            var declaredToModel = currentSession[declaredToModelName];\n            var throughModel = currentSession[throughModelName];\n            var thisId = this.getId();\n\n            var fromFieldName = throughFields.from;\n            var toFieldName = throughFields.to;\n\n            var lookupObj = {};\n            if (!reverse) {\n                lookupObj[fromFieldName] = thisId;\n            } else {\n                lookupObj[toFieldName] = thisId;\n            }\n\n            var throughQs = throughModel.filter(lookupObj);\n            var toIds = throughQs.toRefArray().map(function (obj) {\n                return obj[reverse ? fromFieldName : toFieldName];\n            });\n\n            var qsFromModel = reverse ? declaredFromModel : declaredToModel;\n            var qs = qsFromModel.filter(function (attrs) {\n                return (0, _utils.includes)(toIds, attrs[qsFromModel.idAttribute]);\n            });\n\n            qs.add = function add() {\n                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                    args[_key] = arguments[_key];\n                }\n\n                var idsToAdd = args.map(_utils.normalizeEntity);\n\n                var filterWithAttr = reverse ? fromFieldName : toFieldName;\n\n                var existingQs = throughQs.filter(function (through) {\n                    return (0, _utils.includes)(idsToAdd, through[filterWithAttr]);\n                });\n\n                if (existingQs.exists()) {\n                    var existingIds = existingQs.toRefArray().map(function (through) {\n                        return through[filterWithAttr];\n                    });\n\n                    var toAddModel = reverse ? declaredFromModel.modelName : declaredToModel.modelName;\n\n                    var addFromModel = reverse ? declaredToModel.modelName : declaredFromModel.modelName;\n                    throw new Error('Tried to add already existing ' + toAddModel + ' id(s) ' + existingIds + ' to the ' + addFromModel + ' instance with id ' + thisId);\n                }\n\n                if (reverse) {\n                    idsToAdd.forEach(function (id) {\n                        var _throughModel$create;\n\n                        throughModel.create((_throughModel$create = {}, (0, _defineProperty3.default)(_throughModel$create, fromFieldName, id), (0, _defineProperty3.default)(_throughModel$create, toFieldName, thisId), _throughModel$create));\n                    });\n                } else {\n                    idsToAdd.forEach(function (id) {\n                        var _throughModel$create2;\n\n                        throughModel.create((_throughModel$create2 = {}, (0, _defineProperty3.default)(_throughModel$create2, fromFieldName, thisId), (0, _defineProperty3.default)(_throughModel$create2, toFieldName, id), _throughModel$create2));\n                    });\n                }\n            };\n\n            qs.clear = function clear() {\n                throughQs.delete();\n            };\n\n            qs.remove = function remove() {\n                for (var _len2 = arguments.length, entities = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                    entities[_key2] = arguments[_key2];\n                }\n\n                var idsToRemove = entities.map(_utils.normalizeEntity);\n\n                var attrInIdsToRemove = reverse ? fromFieldName : toFieldName;\n                var entitiesToDelete = throughQs.filter(function (through) {\n                    return (0, _utils.includes)(idsToRemove, through[attrInIdsToRemove]);\n                });\n\n                if (entitiesToDelete.count() !== idsToRemove.length) {\n                    // Tried deleting non-existing entities.\n                    var entitiesToDeleteIds = entitiesToDelete.toRefArray().map(function (through) {\n                        return through[attrInIdsToRemove];\n                    });\n\n                    var unexistingIds = (0, _difference2.default)(idsToRemove, entitiesToDeleteIds);\n\n                    var toDeleteModel = reverse ? declaredFromModel.modelName : declaredToModel.modelName;\n\n                    var deleteFromModel = reverse ? declaredToModel.modelName : declaredFromModel.modelName;\n\n                    throw new Error('Tried to delete non-existing ' + toDeleteModel + ' id(s) ' + unexistingIds + ' from the ' + deleteFromModel + ' instance with id ' + thisId);\n                }\n\n                entitiesToDelete.delete();\n            };\n\n            return qs;\n        },\n        set: function set() {\n            throw new Error('Tried setting a M2M field. Please use the related QuerySet methods add and remove.');\n        }\n    };\n}\n\nexports.attrDescriptor = attrDescriptor;\nexports.forwardManyToOneDescriptor = forwardManyToOneDescriptor;\nexports.forwardOneToOneDescriptor = forwardOneToOneDescriptor;\nexports.backwardOneToOneDescriptor = backwardOneToOneDescriptor;\nexports.backwardManyToOneDescriptor = backwardManyToOneDescriptor;\nexports.manyToManyDescriptor = manyToManyDescriptor;"},"lineCount":217}},"hash":"6e8b93a06df613efeb7454b021fc5959","cacheData":{"env":{}}}