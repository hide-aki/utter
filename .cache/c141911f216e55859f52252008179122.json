{"id":"../../node_modules/redux-crud/dist/reducers/common/update/start.js","dependencies":[{"name":"/var/www/html/utter/node_modules/redux-crud/package.json","includedInParent":true,"mtime":1536167833977},{"name":"/var/www/html/utter/package.json","includedInParent":true,"mtime":1537713411456},{"name":"/var/www/html/utter/.babelrc","includedInParent":true,"mtime":1537642482682},{"name":"ramda/src/merge","loc":{"line":3,"column":20},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/reducers/common/update/start.js","resolved":"/var/www/html/utter/node_modules/ramda/src/merge.js"},{"name":"../../../constants","loc":{"line":4,"column":26},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/reducers/common/update/start.js","resolved":"/var/www/html/utter/node_modules/redux-crud/dist/constants.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar merge = require(\"ramda/src/merge\");\nvar constants_1 = require(\"../../../constants\");\nfunction prepareRecord(record) {\n    var _a;\n    var recordStatus = (_a = {},\n        _a[constants_1.default.SPECIAL_KEYS.BUSY] = true,\n        _a[constants_1.default.SPECIAL_KEYS.PENDING_UPDATE] = true,\n        _a);\n    return merge(record, recordStatus);\n}\nexports.prepareRecord = prepareRecord;\n","map":{"mappings":[{"source":"../../node_modules/redux-crud/dist/reducers/common/update/start.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/common/update/start.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/common/update/start.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/common/update/start.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/common/update/start.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/common/update/start.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/common/update/start.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/common/update/start.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/common/update/start.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/common/update/start.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/common/update/start.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/common/update/start.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/common/update/start.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/common/update/start.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}}],"sources":{"../../node_modules/redux-crud/dist/reducers/common/update/start.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar merge = require(\"ramda/src/merge\");\nvar constants_1 = require(\"../../../constants\");\nfunction prepareRecord(record) {\n    var _a;\n    var recordStatus = (_a = {},\n        _a[constants_1.default.SPECIAL_KEYS.BUSY] = true,\n        _a[constants_1.default.SPECIAL_KEYS.PENDING_UPDATE] = true,\n        _a);\n    return merge(record, recordStatus);\n}\nexports.prepareRecord = prepareRecord;\n"},"lineCount":14}},"hash":"e2ba42b32b346fb418cef393953c94c7","cacheData":{"env":{}}}