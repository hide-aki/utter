{"id":"../../node_modules/ramda/src/reduceBy.js","dependencies":[{"name":"/var/www/html/utter/node_modules/ramda/package.json","includedInParent":true,"mtime":1536167833990},{"name":"/var/www/html/utter/package.json","includedInParent":true,"mtime":1537713411456},{"name":"/var/www/html/utter/.babelrc","includedInParent":true,"mtime":1537642482682},{"name":"./internal/_curryN","loc":{"line":1,"column":22},"parent":"/var/www/html/utter/node_modules/ramda/src/reduceBy.js","resolved":"/var/www/html/utter/node_modules/ramda/src/internal/_curryN.js"},{"name":"./internal/_dispatchable","loc":{"line":2,"column":28},"parent":"/var/www/html/utter/node_modules/ramda/src/reduceBy.js","resolved":"/var/www/html/utter/node_modules/ramda/src/internal/_dispatchable.js"},{"name":"./internal/_has","loc":{"line":3,"column":19},"parent":"/var/www/html/utter/node_modules/ramda/src/reduceBy.js","resolved":"/var/www/html/utter/node_modules/ramda/src/internal/_has.js"},{"name":"./internal/_reduce","loc":{"line":4,"column":22},"parent":"/var/www/html/utter/node_modules/ramda/src/reduceBy.js","resolved":"/var/www/html/utter/node_modules/ramda/src/internal/_reduce.js"},{"name":"./internal/_xreduceBy","loc":{"line":5,"column":25},"parent":"/var/www/html/utter/node_modules/ramda/src/reduceBy.js","resolved":"/var/www/html/utter/node_modules/ramda/src/internal/_xreduceBy.js"}],"generated":{"js":"var _curryN = require('./internal/_curryN');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _has = require('./internal/_has');\nvar _reduce = require('./internal/_reduce');\nvar _xreduceBy = require('./internal/_xreduceBy');\n\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\nmodule.exports = _curryN(4, [], _dispatchable([], _xreduceBy,\n  function reduceBy(valueFn, valueAcc, keyFn, list) {\n    return _reduce(function(acc, elt) {\n      var key = keyFn(elt);\n      acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n      return acc;\n    }, {}, list);\n  }));\n","map":{"mappings":[{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/ramda/src/reduceBy.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}}],"sources":{"../../node_modules/ramda/src/reduceBy.js":"var _curryN = require('./internal/_curryN');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _has = require('./internal/_has');\nvar _reduce = require('./internal/_reduce');\nvar _xreduceBy = require('./internal/_xreduceBy');\n\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\nmodule.exports = _curryN(4, [], _dispatchable([], _xreduceBy,\n  function reduceBy(valueFn, valueAcc, keyFn, list) {\n    return _reduce(function(acc, elt) {\n      var key = keyFn(elt);\n      acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n      return acc;\n    }, {}, list);\n  }));\n"},"lineCount":60}},"hash":"100f1b0bd6df053232e0bfef8c40897c","cacheData":{"env":{}}}