{"id":"../../node_modules/ramda/src/lens.js","dependencies":[{"name":"/var/www/html/utter/node_modules/ramda/package.json","includedInParent":true,"mtime":1536167833990},{"name":"/var/www/html/utter/package.json","includedInParent":true,"mtime":1537713411456},{"name":"/var/www/html/utter/.babelrc","includedInParent":true,"mtime":1537642482682},{"name":"./internal/_curry2","loc":{"line":1,"column":22},"parent":"/var/www/html/utter/node_modules/ramda/src/lens.js","resolved":"/var/www/html/utter/node_modules/ramda/src/internal/_curry2.js"},{"name":"./map","loc":{"line":2,"column":18},"parent":"/var/www/html/utter/node_modules/ramda/src/lens.js","resolved":"/var/www/html/utter/node_modules/ramda/src/map.js"}],"generated":{"js":"var _curry2 = require('./internal/_curry2');\nvar map = require('./map');\n\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nmodule.exports = _curry2(function lens(getter, setter) {\n  return function(toFunctorFn) {\n    return function(target) {\n      return map(\n        function(focus) {\n          return setter(focus, target);\n        },\n        toFunctorFn(getter(target))\n      );\n    };\n  };\n});\n","map":{"mappings":[{"source":"../../node_modules/ramda/src/lens.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/ramda/src/lens.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"../../node_modules/ramda/src/lens.js":"var _curry2 = require('./internal/_curry2');\nvar map = require('./map');\n\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nmodule.exports = _curry2(function lens(getter, setter) {\n  return function(toFunctorFn) {\n    return function(target) {\n      return map(\n        function(focus) {\n          return setter(focus, target);\n        },\n        toFunctorFn(getter(target))\n      );\n    };\n  };\n});\n"},"lineCount":40}},"hash":"a3338276afccbf011fbc6ce9ab03b864","cacheData":{"env":{}}}