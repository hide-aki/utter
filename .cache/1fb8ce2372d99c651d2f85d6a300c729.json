{"id":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","dependencies":[{"name":"/var/www/html/utter/node_modules/redux-crud/package.json","includedInParent":true,"mtime":1536167833977},{"name":"/var/www/html/utter/package.json","includedInParent":true,"mtime":1537713411456},{"name":"/var/www/html/utter/.babelrc","includedInParent":true,"mtime":1537642482682},{"name":"ramda/src/has","loc":{"line":3,"column":18},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","resolved":"/var/www/html/utter/node_modules/ramda/src/has.js"},{"name":"ramda/src/all","loc":{"line":4,"column":18},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","resolved":"/var/www/html/utter/node_modules/ramda/src/all.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar has = require(\"ramda/src/has\");\nvar all = require(\"ramda/src/all\");\nfunction default_1(config, reducerName, records) {\n    // All given records must have a key\n    var haskey = has(config.key);\n    var allKeys = all(haskey, records);\n    if (!allKeys) {\n        throw new Error(reducerName +\n            \": Expected all records to have a value for the store's key `\" +\n            config.key +\n            \"`\");\n    }\n}\nexports.default = default_1;\n","map":{"mappings":[{"source":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}}],"sources":{"../../node_modules/redux-crud/dist/utils/assertAllHaveKeys.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar has = require(\"ramda/src/has\");\nvar all = require(\"ramda/src/all\");\nfunction default_1(config, reducerName, records) {\n    // All given records must have a key\n    var haskey = has(config.key);\n    var allKeys = all(haskey, records);\n    if (!allKeys) {\n        throw new Error(reducerName +\n            \": Expected all records to have a value for the store's key `\" +\n            config.key +\n            \"`\");\n    }\n}\nexports.default = default_1;\n"},"lineCount":17}},"hash":"5d2f31e3d6f6050e646a8b64891dabc3","cacheData":{"env":{}}}