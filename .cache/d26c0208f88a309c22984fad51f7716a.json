{"id":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","dependencies":[{"name":"/var/www/html/utter/node_modules/redux-crud/package.json","includedInParent":true,"mtime":1536167833977},{"name":"/var/www/html/utter/package.json","includedInParent":true,"mtime":1537713411456},{"name":"/var/www/html/utter/.babelrc","includedInParent":true,"mtime":1537642482682},{"name":"ramda/src/merge","loc":{"line":3,"column":20},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/actionCreatorsFor.js","resolved":"/var/www/html/utter/node_modules/ramda/src/merge.js"},{"name":"invariant","loc":{"line":4,"column":24},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/actionCreatorsFor.js","resolved":"/var/www/html/utter/node_modules/invariant/browser.js"},{"name":"./actionTypesFor","loc":{"line":5,"column":31},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/actionCreatorsFor.js","resolved":"/var/www/html/utter/node_modules/redux-crud/dist/actionTypesFor.js"},{"name":"./utils/assertNotArray","loc":{"line":6,"column":31},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/actionCreatorsFor.js","resolved":"/var/www/html/utter/node_modules/redux-crud/dist/utils/assertNotArray.js"},{"name":"./constants","loc":{"line":7,"column":26},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/actionCreatorsFor.js","resolved":"/var/www/html/utter/node_modules/redux-crud/dist/constants.js"},{"name":"./getDefaultConfig","loc":{"line":8,"column":33},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/actionCreatorsFor.js","resolved":"/var/www/html/utter/node_modules/redux-crud/dist/getDefaultConfig.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar merge = require(\"ramda/src/merge\");\nvar invariant = require(\"invariant\");\nvar actionTypesFor_1 = require(\"./actionTypesFor\");\nvar assertNotArray_1 = require(\"./utils/assertNotArray\");\nvar constants_1 = require(\"./constants\");\nvar getDefaultConfig_1 = require(\"./getDefaultConfig\");\n// const invariant = require(\"invariant\")\nfunction actionCreatorsFor(resourceName, config) {\n    if (resourceName == null)\n        throw new Error(\"actionCreatorsFor: Expected resourceName\");\n    config = config || getDefaultConfig_1.default(resourceName);\n    config = merge(config, { resourceName: resourceName });\n    var actionTypes = actionTypesFor_1.default(resourceName);\n    var key = config.key || constants_1.default.DEFAULT_KEY;\n    function assertError(actionCreatorName, error) {\n        invariant(error != null, \"Expected error in \" + actionCreatorName);\n    }\n    function assertOneRecord(actionCreatorName, record) {\n        invariant(record != null, \"Expected record in \" + actionCreatorName);\n        assertNotArray_1.default(config, \"createStart\", record);\n        invariant(record[key] != null, \"Expected record.\" + key + \" in \" + actionCreatorName);\n    }\n    function assertManyRecords(actionCreatorName, records) {\n        invariant(records != null, \"Expected records \" + actionCreatorName);\n    }\n    return {\n        fetchStart: function (data) {\n            return {\n                data: data,\n                type: actionTypes.fetchStart\n            };\n        },\n        fetchSuccess: function (records, data) {\n            var name = \"fetchSuccess\";\n            assertManyRecords(name, records);\n            return {\n                data: data,\n                records: records,\n                type: actionTypes.fetchSuccess\n            };\n        },\n        fetchError: function (error, data) {\n            var name = \"fetchError\";\n            assertError(name, error);\n            return {\n                data: data,\n                error: error,\n                type: actionTypes.fetchError\n            };\n        },\n        createStart: function (record, data) {\n            var name = \"createStart\";\n            assertOneRecord(name, record);\n            return {\n                data: data,\n                record: record,\n                type: actionTypes.createStart\n            };\n        },\n        createSuccess: function (record, clientGeneratedKey, data) {\n            var name = \"createSuccess\";\n            assertOneRecord(name, record);\n            return {\n                cid: clientGeneratedKey,\n                data: data,\n                record: record,\n                type: actionTypes.createSuccess\n            };\n        },\n        createError: function (error, record, data) {\n            var name = \"createError\";\n            assertError(name, error);\n            assertOneRecord(name, record);\n            return {\n                data: data,\n                error: error,\n                record: record,\n                type: actionTypes.createError\n            };\n        },\n        updateStart: function (record, data) {\n            var name = \"updateStart\";\n            assertOneRecord(name, record);\n            return {\n                data: data,\n                record: record,\n                type: actionTypes.updateStart\n            };\n        },\n        updateSuccess: function (record, data) {\n            var name = \"updateSuccess\";\n            assertOneRecord(name, record);\n            return {\n                data: data,\n                record: record,\n                type: actionTypes.updateSuccess\n            };\n        },\n        updateError: function (error, record, data) {\n            var name = \"updateError\";\n            assertError(name, error);\n            assertOneRecord(name, record);\n            return {\n                data: data,\n                error: error,\n                record: record,\n                type: actionTypes.updateError\n            };\n        },\n        deleteStart: function (record, data) {\n            var name = \"deleteStart\";\n            assertOneRecord(name, record);\n            return {\n                data: data,\n                record: record,\n                type: actionTypes.deleteStart\n            };\n        },\n        deleteSuccess: function (record, data) {\n            var name = \"deleteSuccess\";\n            assertOneRecord(name, record);\n            return {\n                data: data,\n                record: record,\n                type: actionTypes.deleteSuccess\n            };\n        },\n        deleteError: function (error, record, data) {\n            var name = \"deleteError\";\n            assertError(name, error);\n            assertOneRecord(name, record);\n            return {\n                data: data,\n                error: error,\n                record: record,\n                type: actionTypes.deleteError\n            };\n        }\n    };\n}\nexports.default = actionCreatorsFor;\n","map":{"mappings":[{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/redux-crud/dist/actionCreatorsFor.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}}],"sources":{"../../node_modules/redux-crud/dist/actionCreatorsFor.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar merge = require(\"ramda/src/merge\");\nvar invariant = require(\"invariant\");\nvar actionTypesFor_1 = require(\"./actionTypesFor\");\nvar assertNotArray_1 = require(\"./utils/assertNotArray\");\nvar constants_1 = require(\"./constants\");\nvar getDefaultConfig_1 = require(\"./getDefaultConfig\");\n// const invariant = require(\"invariant\")\nfunction actionCreatorsFor(resourceName, config) {\n    if (resourceName == null)\n        throw new Error(\"actionCreatorsFor: Expected resourceName\");\n    config = config || getDefaultConfig_1.default(resourceName);\n    config = merge(config, { resourceName: resourceName });\n    var actionTypes = actionTypesFor_1.default(resourceName);\n    var key = config.key || constants_1.default.DEFAULT_KEY;\n    function assertError(actionCreatorName, error) {\n        invariant(error != null, \"Expected error in \" + actionCreatorName);\n    }\n    function assertOneRecord(actionCreatorName, record) {\n        invariant(record != null, \"Expected record in \" + actionCreatorName);\n        assertNotArray_1.default(config, \"createStart\", record);\n        invariant(record[key] != null, \"Expected record.\" + key + \" in \" + actionCreatorName);\n    }\n    function assertManyRecords(actionCreatorName, records) {\n        invariant(records != null, \"Expected records \" + actionCreatorName);\n    }\n    return {\n        fetchStart: function (data) {\n            return {\n                data: data,\n                type: actionTypes.fetchStart\n            };\n        },\n        fetchSuccess: function (records, data) {\n            var name = \"fetchSuccess\";\n            assertManyRecords(name, records);\n            return {\n                data: data,\n                records: records,\n                type: actionTypes.fetchSuccess\n            };\n        },\n        fetchError: function (error, data) {\n            var name = \"fetchError\";\n            assertError(name, error);\n            return {\n                data: data,\n                error: error,\n                type: actionTypes.fetchError\n            };\n        },\n        createStart: function (record, data) {\n            var name = \"createStart\";\n            assertOneRecord(name, record);\n            return {\n                data: data,\n                record: record,\n                type: actionTypes.createStart\n            };\n        },\n        createSuccess: function (record, clientGeneratedKey, data) {\n            var name = \"createSuccess\";\n            assertOneRecord(name, record);\n            return {\n                cid: clientGeneratedKey,\n                data: data,\n                record: record,\n                type: actionTypes.createSuccess\n            };\n        },\n        createError: function (error, record, data) {\n            var name = \"createError\";\n            assertError(name, error);\n            assertOneRecord(name, record);\n            return {\n                data: data,\n                error: error,\n                record: record,\n                type: actionTypes.createError\n            };\n        },\n        updateStart: function (record, data) {\n            var name = \"updateStart\";\n            assertOneRecord(name, record);\n            return {\n                data: data,\n                record: record,\n                type: actionTypes.updateStart\n            };\n        },\n        updateSuccess: function (record, data) {\n            var name = \"updateSuccess\";\n            assertOneRecord(name, record);\n            return {\n                data: data,\n                record: record,\n                type: actionTypes.updateSuccess\n            };\n        },\n        updateError: function (error, record, data) {\n            var name = \"updateError\";\n            assertError(name, error);\n            assertOneRecord(name, record);\n            return {\n                data: data,\n                error: error,\n                record: record,\n                type: actionTypes.updateError\n            };\n        },\n        deleteStart: function (record, data) {\n            var name = \"deleteStart\";\n            assertOneRecord(name, record);\n            return {\n                data: data,\n                record: record,\n                type: actionTypes.deleteStart\n            };\n        },\n        deleteSuccess: function (record, data) {\n            var name = \"deleteSuccess\";\n            assertOneRecord(name, record);\n            return {\n                data: data,\n                record: record,\n                type: actionTypes.deleteSuccess\n            };\n        },\n        deleteError: function (error, record, data) {\n            var name = \"deleteError\";\n            assertError(name, error);\n            assertOneRecord(name, record);\n            return {\n                data: data,\n                error: error,\n                record: record,\n                type: actionTypes.deleteError\n            };\n        }\n    };\n}\nexports.default = actionCreatorsFor;\n"},"lineCount":144}},"hash":"742b199fdede1cf784faeacda3137048","cacheData":{"env":{}}}