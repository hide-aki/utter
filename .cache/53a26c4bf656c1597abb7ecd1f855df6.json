{"id":"../../node_modules/redux-orm/lib/db/Database.js","dependencies":[{"name":"/var/www/html/utter/node_modules/redux-orm/package.json","includedInParent":true,"mtime":1536167834089},{"name":"/var/www/html/utter/package.json","includedInParent":true,"mtime":1537713411456},{"name":"/var/www/html/utter/.babelrc","includedInParent":true,"mtime":1537642482682},{"name":"/var/www/html/utter/node_modules/redux-orm/.babelrc","includedInParent":true,"mtime":1536167834089},{"name":"lodash/mapValues","loc":{"line":8,"column":25},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/db/Database.js","resolved":"/var/www/html/utter/node_modules/lodash/mapValues.js"},{"name":"immutable-ops","loc":{"line":12,"column":28},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/db/Database.js","resolved":"/var/www/html/utter/node_modules/immutable-ops/lib/index.js"},{"name":"../constants","loc":{"line":16,"column":25},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/db/Database.js","resolved":"/var/www/html/utter/node_modules/redux-orm/lib/constants.js"},{"name":"./Table","loc":{"line":18,"column":21},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/db/Database.js","resolved":"/var/www/html/utter/node_modules/redux-orm/lib/db/Table.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createDatabase = createDatabase;\n\nvar _mapValues = require('lodash/mapValues');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nvar _immutableOps = require('immutable-ops');\n\nvar _immutableOps2 = _interopRequireDefault(_immutableOps);\n\nvar _constants = require('../constants');\n\nvar _Table = require('./Table');\n\nvar _Table2 = _interopRequireDefault(_Table);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction replaceTableState(tableName, newTableState, tx, state) {\n    var batchToken = tx.batchToken,\n        withMutations = tx.withMutations;\n\n\n    if (withMutations) {\n        state[tableName] = newTableState;\n        return state;\n    }\n\n    return _immutableOps2.default.batch.set(batchToken, tableName, newTableState, state);\n}\n\nfunction query(tables, querySpec, state) {\n    var tableName = querySpec.table,\n        clauses = querySpec.clauses;\n\n    var table = tables[tableName];\n    var rows = table.query(state[tableName], clauses);\n    return {\n        rows: rows\n    };\n}\n\nfunction update(tables, updateSpec, tx, state) {\n    var action = updateSpec.action,\n        payload = updateSpec.payload;\n\n\n    var tableName = void 0;\n    var nextTableState = void 0;\n    var resultPayload = void 0;\n\n    if (action === _constants.CREATE) {\n        tableName = updateSpec.table;\n\n        var table = tables[tableName];\n        var currTableState = state[tableName];\n        var result = table.insert(tx, currTableState, payload);\n        nextTableState = result.state;\n        resultPayload = result.created;\n    } else {\n        var querySpec = updateSpec.query;\n        tableName = querySpec.table;\n\n        var _query = query(tables, querySpec, state),\n            rows = _query.rows;\n\n        var _table = tables[tableName];\n        var _currTableState = state[tableName];\n\n        if (action === _constants.UPDATE) {\n            nextTableState = _table.update(tx, _currTableState, rows, payload);\n        } else if (action === _constants.DELETE) {\n            nextTableState = _table.delete(tx, _currTableState, rows);\n        } else {\n            throw new Error('Database received unknown update type: ' + action);\n        }\n    }\n\n    var nextDBState = replaceTableState(tableName, nextTableState, tx, state);\n    return {\n        status: _constants.SUCCESS,\n        state: nextDBState,\n        payload: resultPayload\n    };\n}\n\nfunction createDatabase(schemaSpec) {\n    var tablesSpec = schemaSpec.tables;\n\n    var tables = (0, _mapValues2.default)(tablesSpec, function (tableSpec) {\n        return new _Table2.default(tableSpec);\n    });\n\n    var getEmptyState = function getEmptyState() {\n        return (0, _mapValues2.default)(tables, function (table) {\n            return table.getEmptyState();\n        });\n    };\n    return {\n        getEmptyState: getEmptyState,\n        query: query.bind(null, tables),\n        update: update.bind(null, tables),\n        // Used to inspect the schema.\n        describe: function describe(tableName) {\n            return tables[tableName];\n        }\n    };\n}\n\nexports.default = createDatabase;","map":{"mappings":[{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Database.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}}],"sources":{"../../node_modules/redux-orm/lib/db/Database.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createDatabase = createDatabase;\n\nvar _mapValues = require('lodash/mapValues');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nvar _immutableOps = require('immutable-ops');\n\nvar _immutableOps2 = _interopRequireDefault(_immutableOps);\n\nvar _constants = require('../constants');\n\nvar _Table = require('./Table');\n\nvar _Table2 = _interopRequireDefault(_Table);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction replaceTableState(tableName, newTableState, tx, state) {\n    var batchToken = tx.batchToken,\n        withMutations = tx.withMutations;\n\n\n    if (withMutations) {\n        state[tableName] = newTableState;\n        return state;\n    }\n\n    return _immutableOps2.default.batch.set(batchToken, tableName, newTableState, state);\n}\n\nfunction query(tables, querySpec, state) {\n    var tableName = querySpec.table,\n        clauses = querySpec.clauses;\n\n    var table = tables[tableName];\n    var rows = table.query(state[tableName], clauses);\n    return {\n        rows: rows\n    };\n}\n\nfunction update(tables, updateSpec, tx, state) {\n    var action = updateSpec.action,\n        payload = updateSpec.payload;\n\n\n    var tableName = void 0;\n    var nextTableState = void 0;\n    var resultPayload = void 0;\n\n    if (action === _constants.CREATE) {\n        tableName = updateSpec.table;\n\n        var table = tables[tableName];\n        var currTableState = state[tableName];\n        var result = table.insert(tx, currTableState, payload);\n        nextTableState = result.state;\n        resultPayload = result.created;\n    } else {\n        var querySpec = updateSpec.query;\n        tableName = querySpec.table;\n\n        var _query = query(tables, querySpec, state),\n            rows = _query.rows;\n\n        var _table = tables[tableName];\n        var _currTableState = state[tableName];\n\n        if (action === _constants.UPDATE) {\n            nextTableState = _table.update(tx, _currTableState, rows, payload);\n        } else if (action === _constants.DELETE) {\n            nextTableState = _table.delete(tx, _currTableState, rows);\n        } else {\n            throw new Error('Database received unknown update type: ' + action);\n        }\n    }\n\n    var nextDBState = replaceTableState(tableName, nextTableState, tx, state);\n    return {\n        status: _constants.SUCCESS,\n        state: nextDBState,\n        payload: resultPayload\n    };\n}\n\nfunction createDatabase(schemaSpec) {\n    var tablesSpec = schemaSpec.tables;\n\n    var tables = (0, _mapValues2.default)(tablesSpec, function (tableSpec) {\n        return new _Table2.default(tableSpec);\n    });\n\n    var getEmptyState = function getEmptyState() {\n        return (0, _mapValues2.default)(tables, function (table) {\n            return table.getEmptyState();\n        });\n    };\n    return {\n        getEmptyState: getEmptyState,\n        query: query.bind(null, tables),\n        update: update.bind(null, tables),\n        // Used to inspect the schema.\n        describe: function describe(tableName) {\n            return tables[tableName];\n        }\n    };\n}\n\nexports.default = createDatabase;"},"lineCount":115}},"hash":"906974751d5a4edc7651fa234443f31a","cacheData":{"env":{}}}