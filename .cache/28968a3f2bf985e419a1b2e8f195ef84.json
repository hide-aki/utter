{"id":"../../node_modules/redux-orm/lib/db/Table.js","dependencies":[{"name":"/var/www/html/utter/node_modules/redux-orm/package.json","includedInParent":true,"mtime":1536167834089},{"name":"/var/www/html/utter/package.json","includedInParent":true,"mtime":1537713411456},{"name":"/var/www/html/utter/.babelrc","includedInParent":true,"mtime":1537642482682},{"name":"/var/www/html/utter/node_modules/redux-orm/.babelrc","includedInParent":true,"mtime":1536167834089},{"name":"babel-runtime/helpers/defineProperty","loc":{"line":7,"column":31},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/db/Table.js","resolved":"/var/www/html/utter/node_modules/babel-runtime/helpers/defineProperty.js"},{"name":"babel-runtime/helpers/slicedToArray","loc":{"line":11,"column":30},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/db/Table.js","resolved":"/var/www/html/utter/node_modules/babel-runtime/helpers/slicedToArray.js"},{"name":"babel-runtime/core-js/object/assign","loc":{"line":15,"column":22},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/db/Table.js","resolved":"/var/www/html/utter/node_modules/babel-runtime/core-js/object/assign.js"},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":19,"column":31},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/db/Table.js","resolved":"/var/www/html/utter/node_modules/babel-runtime/helpers/classCallCheck.js"},{"name":"lodash/reject","loc":{"line":23,"column":22},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/db/Table.js","resolved":"/var/www/html/utter/node_modules/lodash/reject.js"},{"name":"lodash/filter","loc":{"line":27,"column":22},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/db/Table.js","resolved":"/var/www/html/utter/node_modules/lodash/filter.js"},{"name":"lodash/orderBy","loc":{"line":31,"column":23},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/db/Table.js","resolved":"/var/www/html/utter/node_modules/lodash/orderBy.js"},{"name":"lodash/sortBy","loc":{"line":35,"column":22},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/db/Table.js","resolved":"/var/www/html/utter/node_modules/lodash/sortBy.js"},{"name":"immutable-ops","loc":{"line":39,"column":28},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/db/Table.js","resolved":"/var/www/html/utter/node_modules/immutable-ops/lib/index.js"},{"name":"../constants","loc":{"line":43,"column":25},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/db/Table.js","resolved":"/var/www/html/utter/node_modules/redux-orm/lib/constants.js"},{"name":"../utils","loc":{"line":45,"column":21},"parent":"/var/www/html/utter/node_modules/redux-orm/lib/db/Table.js","resolved":"/var/www/html/utter/node_modules/redux-orm/lib/utils.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _reject = require('lodash/reject');\n\nvar _reject2 = _interopRequireDefault(_reject);\n\nvar _filter = require('lodash/filter');\n\nvar _filter2 = _interopRequireDefault(_filter);\n\nvar _orderBy = require('lodash/orderBy');\n\nvar _orderBy2 = _interopRequireDefault(_orderBy);\n\nvar _sortBy = require('lodash/sortBy');\n\nvar _sortBy2 = _interopRequireDefault(_sortBy);\n\nvar _immutableOps = require('immutable-ops');\n\nvar _immutableOps2 = _interopRequireDefault(_immutableOps);\n\nvar _constants = require('../constants');\n\nvar _utils = require('../utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULT_OPTS = {\n    idAttribute: 'id',\n    arrName: 'items',\n    mapName: 'itemsById'\n};\n\n// Input is the current max id and the new id passed to the create action.\n// Both may be undefined. The current max id in the case that this is the first Model\n// being created, and the new id if the id was not explicitly passed to the\n// database.\n//\n// Return value is the new max id and the id to use to create the new row.\n// If the id's are strings, the id must be passed explicitly every time.\n// In this case, the current max id will remain `NaN` due to `Math.max`, but that's fine.\nfunction idSequencer(_currMax, userPassedId) {\n    var currMax = _currMax;\n    var newMax = void 0;\n    var newId = void 0;\n\n    if (currMax === undefined) {\n        currMax = -1;\n    }\n\n    if (userPassedId === undefined) {\n        newMax = currMax + 1;\n        newId = newMax;\n    } else {\n        newMax = Math.max(currMax + 1, userPassedId);\n        newId = userPassedId;\n    }\n\n    return [newMax, // new max id\n    newId];\n}\n\n/**\n * Handles the underlying data structure for a {@link Model} class.\n */\nvar Table = function () {\n    /**\n     * Creates a new {@link Table} instance.\n     * @param  {Object} userOpts - options to use.\n     * @param  {string} [userOpts.idAttribute=id] - the id attribute of the entity.\n     * @param  {string} [userOpts.arrName=items] - the state attribute where an array of\n     *                                             entity id's are stored\n     * @param  {string} [userOpts.mapName=itemsById] - the state attribute where the entity objects\n     *                                                 are stored in a id to entity object\n     *                                                 map.\n     */\n    function Table(userOpts) {\n        (0, _classCallCheck3.default)(this, Table);\n\n        (0, _assign2.default)(this, DEFAULT_OPTS, userOpts);\n    }\n\n    /**\n     * Returns a reference to the object at index `id`\n     * in state `branch`.\n     *\n     * @param  {Object} branch - the state\n     * @param  {Number} id - the id of the object to get\n     * @return {Object|undefined} A reference to the raw object in the state or\n     *                            `undefined` if not found.\n     */\n\n\n    Table.prototype.accessId = function accessId(branch, id) {\n        return branch[this.mapName][id];\n    };\n\n    Table.prototype.idExists = function idExists(branch, id) {\n        return branch[this.mapName].hasOwnProperty(id);\n    };\n\n    Table.prototype.accessIdList = function accessIdList(branch) {\n        return branch[this.arrName];\n    };\n\n    Table.prototype.accessList = function accessList(branch) {\n        var _this = this;\n\n        return branch[this.arrName].map(function (id) {\n            return _this.accessId(branch, id);\n        });\n    };\n\n    Table.prototype.getMaxId = function getMaxId(branch) {\n        return this.getMeta(branch, 'maxId');\n    };\n\n    Table.prototype.setMaxId = function setMaxId(tx, branch, newMaxId) {\n        return this.setMeta(tx, branch, 'maxId', newMaxId);\n    };\n\n    Table.prototype.nextId = function nextId(id) {\n        return id + 1;\n    };\n\n    Table.prototype.query = function query(branch, clauses) {\n        var _this2 = this;\n\n        var optimizedClauses = (0, _sortBy2.default)(clauses, function (_ref) {\n            var type = _ref.type,\n                payload = _ref.payload;\n\n            if (type === _constants.FILTER && payload.hasOwnProperty(_this2.idAttribute)) {\n                return 1;\n            }\n\n            if (type === _constants.FILTER || type === _constants.EXCLUDE) {\n                return 2;\n            }\n\n            return 3;\n        });\n\n        return optimizedClauses.reduce(function (rows, _ref2, index) {\n            var type = _ref2.type,\n                payload = _ref2.payload;\n\n            switch (type) {\n                case _constants.FILTER:\n                    {\n                        var idAttribute = _this2.idAttribute;\n\n                        var id = payload[idAttribute];\n\n                        if (index === 0 && payload.hasOwnProperty(idAttribute) && id !== null && id !== undefined) {\n                            // Payload specified a primary key; Since that is unique, we can directly\n                            // return that.\n                            return _this2.idExists(branch, id) ? [_this2.accessId(branch, id)] : [];\n                        }\n                        return (0, _filter2.default)(rows, payload);\n                    }\n                case _constants.EXCLUDE:\n                    {\n                        return (0, _reject2.default)(rows, payload);\n                    }\n                case _constants.ORDER_BY:\n                    {\n                        var _payload = (0, _slicedToArray3.default)(payload, 2),\n                            iteratees = _payload[0],\n                            orders = _payload[1];\n\n                        return (0, _orderBy2.default)(rows, iteratees, orders);\n                    }\n                default:\n                    return rows;\n            }\n        }, this.accessList(branch));\n    };\n\n    /**\n     * Returns the default state for the data structure.\n     * @return {Object} The default state for this {@link Backend} instance's data structure\n     */\n\n\n    Table.prototype.getEmptyState = function getEmptyState() {\n        var _ref3;\n\n        return _ref3 = {}, (0, _defineProperty3.default)(_ref3, this.arrName, []), (0, _defineProperty3.default)(_ref3, this.mapName, {}), (0, _defineProperty3.default)(_ref3, 'meta', {}), _ref3;\n    };\n\n    Table.prototype.setMeta = function setMeta(tx, branch, key, value) {\n        var batchToken = tx.batchToken,\n            withMutations = tx.withMutations;\n\n        if (withMutations) {\n            var res = _immutableOps2.default.mutable.setIn(['meta', key], value, branch);\n            return res;\n        }\n\n        return _immutableOps2.default.batch.setIn(batchToken, ['meta', key], value, branch);\n    };\n\n    Table.prototype.getMeta = function getMeta(branch, key) {\n        return branch.meta[key];\n    };\n\n    /**\n     * Returns the data structure including a new object `entry`\n     * @param  {Object} tx - transaction info\n     * @param  {Object} branch - the data structure state\n     * @param  {Object} entry - the object to insert\n     * @return {Object} an object with two keys: `state` and `created`.\n     *                  `state` is the new table state and `created` is the\n     *                  row that was created.\n     */\n\n\n    Table.prototype.insert = function insert(tx, branch, entry) {\n        var _ops$batch$merge2;\n\n        var batchToken = tx.batchToken,\n            withMutations = tx.withMutations;\n\n\n        var hasId = entry.hasOwnProperty(this.idAttribute);\n\n        var workingState = branch;\n\n        // This will not affect string id's.\n\n        var _idSequencer = idSequencer(this.getMaxId(branch), entry[this.idAttribute]),\n            _idSequencer2 = (0, _slicedToArray3.default)(_idSequencer, 2),\n            newMaxId = _idSequencer2[0],\n            id = _idSequencer2[1];\n\n        workingState = this.setMaxId(tx, branch, newMaxId);\n\n        var finalEntry = hasId ? entry : _immutableOps2.default.batch.set(batchToken, this.idAttribute, id, entry);\n\n        if (withMutations) {\n            _immutableOps2.default.mutable.push(id, workingState[this.arrName]);\n            _immutableOps2.default.mutable.set(id, finalEntry, workingState[this.mapName]);\n            return {\n                state: workingState,\n                created: finalEntry\n            };\n        }\n\n        var nextState = _immutableOps2.default.batch.merge(batchToken, (_ops$batch$merge2 = {}, (0, _defineProperty3.default)(_ops$batch$merge2, this.arrName, _immutableOps2.default.batch.push(batchToken, id, workingState[this.arrName])), (0, _defineProperty3.default)(_ops$batch$merge2, this.mapName, _immutableOps2.default.batch.merge(batchToken, (0, _defineProperty3.default)({}, id, finalEntry), workingState[this.mapName])), _ops$batch$merge2), workingState);\n\n        return {\n            state: nextState,\n            created: finalEntry\n        };\n    };\n\n    /**\n     * Returns the data structure with objects where `rows`\n     * are merged with `mergeObj`.\n     *\n     * @param  {Object} tx - transaction info\n     * @param  {Object} branch - the data structure state\n     * @param  {Object[]} rows - rows to update\n     * @param  {Object} mergeObj - The object to merge with each row.\n     * @return {Object}\n     */\n\n\n    Table.prototype.update = function update(tx, branch, rows, mergeObj) {\n        var _this3 = this;\n\n        var batchToken = tx.batchToken,\n            withMutations = tx.withMutations;\n        var mapName = this.mapName;\n\n\n        var mapFunction = function mapFunction(row) {\n            var merge = withMutations ? _immutableOps2.default.mutable.merge : _immutableOps2.default.batch.merge(batchToken);\n            return merge(mergeObj, row);\n        };\n\n        var set = withMutations ? _immutableOps2.default.mutable.set : _immutableOps2.default.batch.set(batchToken);\n\n        var newMap = rows.reduce(function (map, row) {\n            var result = mapFunction(row);\n            return set(result[_this3.idAttribute], result, map);\n        }, branch[mapName]);\n        return _immutableOps2.default.batch.set(batchToken, mapName, newMap, branch);\n    };\n\n    /**\n     * Returns the data structure without rows `rows`.\n     * @param  {Object} tx - transaction info\n     * @param  {Object} branch - the data structure state\n     * @param  {Object[]} rows - rows to update\n     * @return {Object} the data structure without ids in `idsToDelete`.\n     */\n\n\n    Table.prototype.delete = function _delete(tx, branch, rows) {\n        var _this4 = this,\n            _ops$batch$merge3;\n\n        var batchToken = tx.batchToken,\n            withMutations = tx.withMutations;\n        var arrName = this.arrName,\n            mapName = this.mapName;\n\n        var arr = branch[arrName];\n\n        var idsToDelete = rows.map(function (row) {\n            return row[_this4.idAttribute];\n        });\n        if (withMutations) {\n            idsToDelete.forEach(function (id) {\n                var idx = arr.indexOf(id);\n                if (idx !== -1) {\n                    _immutableOps2.default.mutable.splice(idx, 1, [], arr);\n                }\n\n                _immutableOps2.default.mutable.omit(id, branch[mapName]);\n            });\n            return branch;\n        }\n\n        return _immutableOps2.default.batch.merge(batchToken, (_ops$batch$merge3 = {}, (0, _defineProperty3.default)(_ops$batch$merge3, arrName, _immutableOps2.default.batch.filter(batchToken, function (id) {\n            return !(0, _utils.includes)(idsToDelete, id);\n        }, branch[arrName])), (0, _defineProperty3.default)(_ops$batch$merge3, mapName, _immutableOps2.default.batch.omit(batchToken, idsToDelete, branch[mapName])), _ops$batch$merge3), branch);\n    };\n\n    return Table;\n}();\n\nexports.default = Table;","map":{"mappings":[{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../../node_modules/redux-orm/lib/db/Table.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}}],"sources":{"../../node_modules/redux-orm/lib/db/Table.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _reject = require('lodash/reject');\n\nvar _reject2 = _interopRequireDefault(_reject);\n\nvar _filter = require('lodash/filter');\n\nvar _filter2 = _interopRequireDefault(_filter);\n\nvar _orderBy = require('lodash/orderBy');\n\nvar _orderBy2 = _interopRequireDefault(_orderBy);\n\nvar _sortBy = require('lodash/sortBy');\n\nvar _sortBy2 = _interopRequireDefault(_sortBy);\n\nvar _immutableOps = require('immutable-ops');\n\nvar _immutableOps2 = _interopRequireDefault(_immutableOps);\n\nvar _constants = require('../constants');\n\nvar _utils = require('../utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULT_OPTS = {\n    idAttribute: 'id',\n    arrName: 'items',\n    mapName: 'itemsById'\n};\n\n// Input is the current max id and the new id passed to the create action.\n// Both may be undefined. The current max id in the case that this is the first Model\n// being created, and the new id if the id was not explicitly passed to the\n// database.\n//\n// Return value is the new max id and the id to use to create the new row.\n// If the id's are strings, the id must be passed explicitly every time.\n// In this case, the current max id will remain `NaN` due to `Math.max`, but that's fine.\nfunction idSequencer(_currMax, userPassedId) {\n    var currMax = _currMax;\n    var newMax = void 0;\n    var newId = void 0;\n\n    if (currMax === undefined) {\n        currMax = -1;\n    }\n\n    if (userPassedId === undefined) {\n        newMax = currMax + 1;\n        newId = newMax;\n    } else {\n        newMax = Math.max(currMax + 1, userPassedId);\n        newId = userPassedId;\n    }\n\n    return [newMax, // new max id\n    newId];\n}\n\n/**\n * Handles the underlying data structure for a {@link Model} class.\n */\nvar Table = function () {\n    /**\n     * Creates a new {@link Table} instance.\n     * @param  {Object} userOpts - options to use.\n     * @param  {string} [userOpts.idAttribute=id] - the id attribute of the entity.\n     * @param  {string} [userOpts.arrName=items] - the state attribute where an array of\n     *                                             entity id's are stored\n     * @param  {string} [userOpts.mapName=itemsById] - the state attribute where the entity objects\n     *                                                 are stored in a id to entity object\n     *                                                 map.\n     */\n    function Table(userOpts) {\n        (0, _classCallCheck3.default)(this, Table);\n\n        (0, _assign2.default)(this, DEFAULT_OPTS, userOpts);\n    }\n\n    /**\n     * Returns a reference to the object at index `id`\n     * in state `branch`.\n     *\n     * @param  {Object} branch - the state\n     * @param  {Number} id - the id of the object to get\n     * @return {Object|undefined} A reference to the raw object in the state or\n     *                            `undefined` if not found.\n     */\n\n\n    Table.prototype.accessId = function accessId(branch, id) {\n        return branch[this.mapName][id];\n    };\n\n    Table.prototype.idExists = function idExists(branch, id) {\n        return branch[this.mapName].hasOwnProperty(id);\n    };\n\n    Table.prototype.accessIdList = function accessIdList(branch) {\n        return branch[this.arrName];\n    };\n\n    Table.prototype.accessList = function accessList(branch) {\n        var _this = this;\n\n        return branch[this.arrName].map(function (id) {\n            return _this.accessId(branch, id);\n        });\n    };\n\n    Table.prototype.getMaxId = function getMaxId(branch) {\n        return this.getMeta(branch, 'maxId');\n    };\n\n    Table.prototype.setMaxId = function setMaxId(tx, branch, newMaxId) {\n        return this.setMeta(tx, branch, 'maxId', newMaxId);\n    };\n\n    Table.prototype.nextId = function nextId(id) {\n        return id + 1;\n    };\n\n    Table.prototype.query = function query(branch, clauses) {\n        var _this2 = this;\n\n        var optimizedClauses = (0, _sortBy2.default)(clauses, function (_ref) {\n            var type = _ref.type,\n                payload = _ref.payload;\n\n            if (type === _constants.FILTER && payload.hasOwnProperty(_this2.idAttribute)) {\n                return 1;\n            }\n\n            if (type === _constants.FILTER || type === _constants.EXCLUDE) {\n                return 2;\n            }\n\n            return 3;\n        });\n\n        return optimizedClauses.reduce(function (rows, _ref2, index) {\n            var type = _ref2.type,\n                payload = _ref2.payload;\n\n            switch (type) {\n                case _constants.FILTER:\n                    {\n                        var idAttribute = _this2.idAttribute;\n\n                        var id = payload[idAttribute];\n\n                        if (index === 0 && payload.hasOwnProperty(idAttribute) && id !== null && id !== undefined) {\n                            // Payload specified a primary key; Since that is unique, we can directly\n                            // return that.\n                            return _this2.idExists(branch, id) ? [_this2.accessId(branch, id)] : [];\n                        }\n                        return (0, _filter2.default)(rows, payload);\n                    }\n                case _constants.EXCLUDE:\n                    {\n                        return (0, _reject2.default)(rows, payload);\n                    }\n                case _constants.ORDER_BY:\n                    {\n                        var _payload = (0, _slicedToArray3.default)(payload, 2),\n                            iteratees = _payload[0],\n                            orders = _payload[1];\n\n                        return (0, _orderBy2.default)(rows, iteratees, orders);\n                    }\n                default:\n                    return rows;\n            }\n        }, this.accessList(branch));\n    };\n\n    /**\n     * Returns the default state for the data structure.\n     * @return {Object} The default state for this {@link Backend} instance's data structure\n     */\n\n\n    Table.prototype.getEmptyState = function getEmptyState() {\n        var _ref3;\n\n        return _ref3 = {}, (0, _defineProperty3.default)(_ref3, this.arrName, []), (0, _defineProperty3.default)(_ref3, this.mapName, {}), (0, _defineProperty3.default)(_ref3, 'meta', {}), _ref3;\n    };\n\n    Table.prototype.setMeta = function setMeta(tx, branch, key, value) {\n        var batchToken = tx.batchToken,\n            withMutations = tx.withMutations;\n\n        if (withMutations) {\n            var res = _immutableOps2.default.mutable.setIn(['meta', key], value, branch);\n            return res;\n        }\n\n        return _immutableOps2.default.batch.setIn(batchToken, ['meta', key], value, branch);\n    };\n\n    Table.prototype.getMeta = function getMeta(branch, key) {\n        return branch.meta[key];\n    };\n\n    /**\n     * Returns the data structure including a new object `entry`\n     * @param  {Object} tx - transaction info\n     * @param  {Object} branch - the data structure state\n     * @param  {Object} entry - the object to insert\n     * @return {Object} an object with two keys: `state` and `created`.\n     *                  `state` is the new table state and `created` is the\n     *                  row that was created.\n     */\n\n\n    Table.prototype.insert = function insert(tx, branch, entry) {\n        var _ops$batch$merge2;\n\n        var batchToken = tx.batchToken,\n            withMutations = tx.withMutations;\n\n\n        var hasId = entry.hasOwnProperty(this.idAttribute);\n\n        var workingState = branch;\n\n        // This will not affect string id's.\n\n        var _idSequencer = idSequencer(this.getMaxId(branch), entry[this.idAttribute]),\n            _idSequencer2 = (0, _slicedToArray3.default)(_idSequencer, 2),\n            newMaxId = _idSequencer2[0],\n            id = _idSequencer2[1];\n\n        workingState = this.setMaxId(tx, branch, newMaxId);\n\n        var finalEntry = hasId ? entry : _immutableOps2.default.batch.set(batchToken, this.idAttribute, id, entry);\n\n        if (withMutations) {\n            _immutableOps2.default.mutable.push(id, workingState[this.arrName]);\n            _immutableOps2.default.mutable.set(id, finalEntry, workingState[this.mapName]);\n            return {\n                state: workingState,\n                created: finalEntry\n            };\n        }\n\n        var nextState = _immutableOps2.default.batch.merge(batchToken, (_ops$batch$merge2 = {}, (0, _defineProperty3.default)(_ops$batch$merge2, this.arrName, _immutableOps2.default.batch.push(batchToken, id, workingState[this.arrName])), (0, _defineProperty3.default)(_ops$batch$merge2, this.mapName, _immutableOps2.default.batch.merge(batchToken, (0, _defineProperty3.default)({}, id, finalEntry), workingState[this.mapName])), _ops$batch$merge2), workingState);\n\n        return {\n            state: nextState,\n            created: finalEntry\n        };\n    };\n\n    /**\n     * Returns the data structure with objects where `rows`\n     * are merged with `mergeObj`.\n     *\n     * @param  {Object} tx - transaction info\n     * @param  {Object} branch - the data structure state\n     * @param  {Object[]} rows - rows to update\n     * @param  {Object} mergeObj - The object to merge with each row.\n     * @return {Object}\n     */\n\n\n    Table.prototype.update = function update(tx, branch, rows, mergeObj) {\n        var _this3 = this;\n\n        var batchToken = tx.batchToken,\n            withMutations = tx.withMutations;\n        var mapName = this.mapName;\n\n\n        var mapFunction = function mapFunction(row) {\n            var merge = withMutations ? _immutableOps2.default.mutable.merge : _immutableOps2.default.batch.merge(batchToken);\n            return merge(mergeObj, row);\n        };\n\n        var set = withMutations ? _immutableOps2.default.mutable.set : _immutableOps2.default.batch.set(batchToken);\n\n        var newMap = rows.reduce(function (map, row) {\n            var result = mapFunction(row);\n            return set(result[_this3.idAttribute], result, map);\n        }, branch[mapName]);\n        return _immutableOps2.default.batch.set(batchToken, mapName, newMap, branch);\n    };\n\n    /**\n     * Returns the data structure without rows `rows`.\n     * @param  {Object} tx - transaction info\n     * @param  {Object} branch - the data structure state\n     * @param  {Object[]} rows - rows to update\n     * @return {Object} the data structure without ids in `idsToDelete`.\n     */\n\n\n    Table.prototype.delete = function _delete(tx, branch, rows) {\n        var _this4 = this,\n            _ops$batch$merge3;\n\n        var batchToken = tx.batchToken,\n            withMutations = tx.withMutations;\n        var arrName = this.arrName,\n            mapName = this.mapName;\n\n        var arr = branch[arrName];\n\n        var idsToDelete = rows.map(function (row) {\n            return row[_this4.idAttribute];\n        });\n        if (withMutations) {\n            idsToDelete.forEach(function (id) {\n                var idx = arr.indexOf(id);\n                if (idx !== -1) {\n                    _immutableOps2.default.mutable.splice(idx, 1, [], arr);\n                }\n\n                _immutableOps2.default.mutable.omit(id, branch[mapName]);\n            });\n            return branch;\n        }\n\n        return _immutableOps2.default.batch.merge(batchToken, (_ops$batch$merge3 = {}, (0, _defineProperty3.default)(_ops$batch$merge3, arrName, _immutableOps2.default.batch.filter(batchToken, function (id) {\n            return !(0, _utils.includes)(idsToDelete, id);\n        }, branch[arrName])), (0, _defineProperty3.default)(_ops$batch$merge3, mapName, _immutableOps2.default.batch.omit(batchToken, idsToDelete, branch[mapName])), _ops$batch$merge3), branch);\n    };\n\n    return Table;\n}();\n\nexports.default = Table;"},"lineCount":356}},"hash":"4e370c9784225c298677a7b0a50192c0","cacheData":{"env":{}}}