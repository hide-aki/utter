{"id":"../../node_modules/ramda/src/filter.js","dependencies":[{"name":"/var/www/html/utter/node_modules/ramda/package.json","includedInParent":true,"mtime":1536167833990},{"name":"/var/www/html/utter/package.json","includedInParent":true,"mtime":1537713411456},{"name":"/var/www/html/utter/.babelrc","includedInParent":true,"mtime":1537642482682},{"name":"./internal/_curry2","loc":{"line":1,"column":22},"parent":"/var/www/html/utter/node_modules/ramda/src/filter.js","resolved":"/var/www/html/utter/node_modules/ramda/src/internal/_curry2.js"},{"name":"./internal/_dispatchable","loc":{"line":2,"column":28},"parent":"/var/www/html/utter/node_modules/ramda/src/filter.js","resolved":"/var/www/html/utter/node_modules/ramda/src/internal/_dispatchable.js"},{"name":"./internal/_filter","loc":{"line":3,"column":22},"parent":"/var/www/html/utter/node_modules/ramda/src/filter.js","resolved":"/var/www/html/utter/node_modules/ramda/src/internal/_filter.js"},{"name":"./internal/_isObject","loc":{"line":4,"column":24},"parent":"/var/www/html/utter/node_modules/ramda/src/filter.js","resolved":"/var/www/html/utter/node_modules/ramda/src/internal/_isObject.js"},{"name":"./internal/_reduce","loc":{"line":5,"column":22},"parent":"/var/www/html/utter/node_modules/ramda/src/filter.js","resolved":"/var/www/html/utter/node_modules/ramda/src/internal/_reduce.js"},{"name":"./internal/_xfilter","loc":{"line":6,"column":23},"parent":"/var/www/html/utter/node_modules/ramda/src/filter.js","resolved":"/var/www/html/utter/node_modules/ramda/src/internal/_xfilter.js"},{"name":"./keys","loc":{"line":7,"column":19},"parent":"/var/www/html/utter/node_modules/ramda/src/filter.js","resolved":"/var/www/html/utter/node_modules/ramda/src/keys.js"}],"generated":{"js":"var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _filter = require('./internal/_filter');\nvar _isObject = require('./internal/_isObject');\nvar _reduce = require('./internal/_reduce');\nvar _xfilter = require('./internal/_xfilter');\nvar keys = require('./keys');\n\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nmodule.exports = _curry2(_dispatchable(['filter'], _xfilter, function(pred, filterable) {\n  return (\n    _isObject(filterable) ?\n      _reduce(function(acc, key) {\n        if (pred(filterable[key])) {\n          acc[key] = filterable[key];\n        }\n        return acc;\n      }, {}, keys(filterable)) :\n    // else\n      _filter(pred, filterable)\n  );\n}));\n","map":{"mappings":[{"source":"../../node_modules/ramda/src/filter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/ramda/src/filter.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}}],"sources":{"../../node_modules/ramda/src/filter.js":"var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _filter = require('./internal/_filter');\nvar _isObject = require('./internal/_isObject');\nvar _reduce = require('./internal/_reduce');\nvar _xfilter = require('./internal/_xfilter');\nvar keys = require('./keys');\n\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nmodule.exports = _curry2(_dispatchable(['filter'], _xfilter, function(pred, filterable) {\n  return (\n    _isObject(filterable) ?\n      _reduce(function(acc, key) {\n        if (pred(filterable[key])) {\n          acc[key] = filterable[key];\n        }\n        return acc;\n      }, {}, keys(filterable)) :\n    // else\n      _filter(pred, filterable)\n  );\n}));\n"},"lineCount":50}},"hash":"5909e224bb41b718499e1cdae53a5dc3","cacheData":{"env":{}}}