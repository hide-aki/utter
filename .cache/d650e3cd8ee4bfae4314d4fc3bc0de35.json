{"id":"../../node_modules/redux-crud/dist/utils/assertNotArray.js","dependencies":[{"name":"/var/www/html/utter/node_modules/redux-crud/package.json","includedInParent":true,"mtime":1536167833977},{"name":"/var/www/html/utter/package.json","includedInParent":true,"mtime":1537713411456},{"name":"/var/www/html/utter/.babelrc","includedInParent":true,"mtime":1537642482682},{"name":"ramda/src/is","loc":{"line":3,"column":17},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/utils/assertNotArray.js","resolved":"/var/www/html/utter/node_modules/ramda/src/is.js"},{"name":"../utils/makeScope","loc":{"line":4,"column":26},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/utils/assertNotArray.js","resolved":"/var/www/html/utter/node_modules/redux-crud/dist/utils/makeScope.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is = require(\"ramda/src/is\");\nvar makeScope_1 = require(\"../utils/makeScope\");\nfunction default_1(config, reducerName, record) {\n    var scope = makeScope_1.default(config, reducerName);\n    var isArray = is(Array, record);\n    if (isArray)\n        throw new TypeError(scope + \": Expected record not to be an array\");\n}\nexports.default = default_1;\n","map":{"mappings":[{"source":"../../node_modules/redux-crud/dist/utils/assertNotArray.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertNotArray.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertNotArray.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertNotArray.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertNotArray.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertNotArray.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertNotArray.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertNotArray.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertNotArray.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertNotArray.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertNotArray.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/redux-crud/dist/utils/assertNotArray.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}}],"sources":{"../../node_modules/redux-crud/dist/utils/assertNotArray.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is = require(\"ramda/src/is\");\nvar makeScope_1 = require(\"../utils/makeScope\");\nfunction default_1(config, reducerName, record) {\n    var scope = makeScope_1.default(config, reducerName);\n    var isArray = is(Array, record);\n    if (isArray)\n        throw new TypeError(scope + \": Expected record not to be an array\");\n}\nexports.default = default_1;\n"},"lineCount":12}},"hash":"49cec658e942c9d6826347ed79d9bea4","cacheData":{"env":{}}}