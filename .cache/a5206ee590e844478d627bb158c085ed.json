{"id":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","dependencies":[{"name":"/var/www/html/utter/node_modules/redux-crud/package.json","includedInParent":true,"mtime":1536167833977},{"name":"/var/www/html/utter/package.json","includedInParent":true,"mtime":1537713411456},{"name":"/var/www/html/utter/.babelrc","includedInParent":true,"mtime":1537642482682},{"name":"ramda/src/omit","loc":{"line":3,"column":19},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/reducers/map/delete/error.js","resolved":"/var/www/html/utter/node_modules/ramda/src/omit.js"},{"name":"ramda/src/merge","loc":{"line":4,"column":20},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/reducers/map/delete/error.js","resolved":"/var/www/html/utter/node_modules/ramda/src/merge.js"},{"name":"../../../constants","loc":{"line":5,"column":26},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/reducers/map/delete/error.js","resolved":"/var/www/html/utter/node_modules/redux-crud/dist/constants.js"},{"name":"../invariants","loc":{"line":6,"column":27},"parent":"/var/www/html/utter/node_modules/redux-crud/dist/reducers/map/delete/error.js","resolved":"/var/www/html/utter/node_modules/redux-crud/dist/reducers/map/invariants.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar omit = require(\"ramda/src/omit\");\nvar merge = require(\"ramda/src/merge\");\nvar constants_1 = require(\"../../../constants\");\nvar invariants_1 = require(\"../invariants\");\nvar reducerName = constants_1.default.REDUCER_NAMES.DELETE_ERROR;\nvar invariantArgs = {\n    reducerName: reducerName,\n    canBeArray: false\n};\nfunction error(config, current, record) {\n    var _a;\n    invariants_1.default(invariantArgs, config, current, record);\n    var key = config.key;\n    var deleteId = record[key];\n    // Find the record\n    var deleteRecord = current[deleteId];\n    if (deleteRecord == null) {\n        return current;\n    }\n    else {\n        // Remove deleted and busy\n        deleteRecord = omit([\"deleted\", \"busy\"], deleteRecord);\n        return merge(current, (_a = {}, _a[deleteId] = deleteRecord, _a));\n    }\n}\nexports.default = error;\n","map":{"mappings":[{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/redux-crud/dist/reducers/map/delete/error.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"../../node_modules/redux-crud/dist/reducers/map/delete/error.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar omit = require(\"ramda/src/omit\");\nvar merge = require(\"ramda/src/merge\");\nvar constants_1 = require(\"../../../constants\");\nvar invariants_1 = require(\"../invariants\");\nvar reducerName = constants_1.default.REDUCER_NAMES.DELETE_ERROR;\nvar invariantArgs = {\n    reducerName: reducerName,\n    canBeArray: false\n};\nfunction error(config, current, record) {\n    var _a;\n    invariants_1.default(invariantArgs, config, current, record);\n    var key = config.key;\n    var deleteId = record[key];\n    // Find the record\n    var deleteRecord = current[deleteId];\n    if (deleteRecord == null) {\n        return current;\n    }\n    else {\n        // Remove deleted and busy\n        deleteRecord = omit([\"deleted\", \"busy\"], deleteRecord);\n        return merge(current, (_a = {}, _a[deleteId] = deleteRecord, _a));\n    }\n}\nexports.default = error;\n"},"lineCount":29}},"hash":"0406a405f8e91c44014c2a92bf261ebd","cacheData":{"env":{}}}