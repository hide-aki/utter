{"remainingRequest":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js!/var/www/html/utter/node_modules/babel-loader/lib/index.js!/var/www/html/utter/client/src/layouts/Admin/Aws/actions.js","dependencies":[{"path":"/var/www/html/utter/client/src/layouts/Admin/Aws/actions.js","mtime":1517762892383},{"path":"/var/www/html/utter/.babelrc","mtime":1518822814526},{"path":"/var/www/html/utter/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js","mtime":1510167650000},{"path":"/var/www/html/utter/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _reduxCrud = require('redux-crud');\n\nvar _reduxCrud2 = _interopRequireDefault(_reduxCrud);\n\nvar _axios = require('axios');\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _cuid = require('cuid');\n\nvar _cuid2 = _interopRequireDefault(_cuid);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar cid = (0, _cuid2.default)();\n\nvar baseActionCreators = _reduxCrud2.default.actionCreatorsFor('word');\n\nvar actionCreators = {\n  fetch: function fetch(level, lang) {\n    return function (dispatch, getState) {\n      var action = baseActionCreators.fetchStart();\n      dispatch(action);\n\n      // api request\n      var url = '/api/dictionary';\n      if (!level) {\n        level = '1';\n      }\n      var promise = (0, _axios2.default)({\n        url: url,\n        params: {\n          level: level,\n          language: lang\n        }\n      });\n\n      promise.then(function (res) {\n        var returned = res.data;\n        returned.id = cid;\n        var successAction = baseActionCreators.fetchSuccess(returned);\n        dispatch(successAction);\n      }, function (res) {\n        // On rejection dispatch the error action\n        var errorAction = baseActionCreators.fetchError(res);\n        dispatch(errorAction);\n      }).catch(function (err) {\n        console.error(err.toString());\n      });\n\n      return promise;\n    };\n  },\n  create: function create(word) {\n    return function (dispatch, getState) {\n      // Generate a cid so we can match the records\n      var cid = (0, _cuid2.default)();\n      word = _lodash2.default.merge(word, { id: cid });\n\n      var action = baseActionCreators.createStart(word);\n      dispatch(action);\n\n      // api request\n      var url = '/api/dictionary';\n      var promise = (0, _axios2.default)({\n        url: url,\n        method: 'POST',\n        data: word\n      });\n\n      promise.then(function (res) {\n        var returned = res.data;\n        returned.id = cid;\n        var successAction = baseActionCreators.createSuccess(returned, cid);\n        dispatch(successAction);\n      }, function (res) {\n        // On rejection dispatch the error action\n        var errorAction = baseActionCreators.createError(res, word);\n        dispatch(errorAction);\n      }).catch(function (err) {\n        console.error(err.toString());\n      });\n\n      return promise;\n    };\n  },\n  update: function update(word) {\n    return function (dispatch) {\n      // optimistic update\n      console.log('word in actions: ', word);\n      var action = baseActionCreators.updateStart(word);\n      dispatch(action);\n\n      // api request\n      var url = '/api/dictionary/' + word._id;\n      var promise = (0, _axios2.default)({\n        url: url,\n        method: 'PUT',\n        data: {\n          word: word\n        }\n      });\n\n      promise.then(function (response) {\n        var returnedWord = response.data.data;\n        var action = baseActionCreators.updateSuccess(returnedWord);\n        dispatch(action);\n      }, function (response) {\n        var action = baseActionCreators.updateError(response, word);\n        dispatch(action);\n      }).catch(function (err) {\n        console.error(err.toString());\n      });\n\n      return promise;\n    };\n  },\n  delete: function _delete(word) {\n    return function (dispatch) {\n      var optimisticAction = baseActionCreators.deleteStart(word);\n      dispatch(optimisticAction);\n\n      var url = '/api/dictionary/' + word._id;\n      var promise = (0, _axios2.default)({\n        url: url,\n        method: 'DELETE'\n      });\n\n      promise.then(function (response) {\n        // dispatch the success action\n        var successAction = baseActionCreators.deleteSuccess(word);\n        dispatch(successAction);\n      }, function (response) {\n        // rejection\n        // dispatch the error action\n        var errorAction = baseActionCreators.deleteError(response, word);\n        dispatch(errorAction);\n      }).catch(function (err) {\n        console.error(err.toString());\n      });\n\n      return promise;\n    };\n  }\n};\n\nactionCreators = Object.assign(baseActionCreators, actionCreators);\n\nvar _default = actionCreators;\nexports.default = _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(cid, 'cid', '/var/www/html/utter/client/src/layouts/Admin/Aws/actions.js');\n\n  __REACT_HOT_LOADER__.register(baseActionCreators, 'baseActionCreators', '/var/www/html/utter/client/src/layouts/Admin/Aws/actions.js');\n\n  __REACT_HOT_LOADER__.register(actionCreators, 'actionCreators', '/var/www/html/utter/client/src/layouts/Admin/Aws/actions.js');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/var/www/html/utter/client/src/layouts/Admin/Aws/actions.js');\n}();\n\n;\n\n ;(function register() { /* react-hot-loader/webpack */ if (process.env.NODE_ENV !== 'production') { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : module.exports; /* eslint-enable camelcase, no-undef */ if (typeof webpackExports === 'function') { __REACT_HOT_LOADER__.register(webpackExports, 'module.exports', \"/var/www/html/utter/client/src/layouts/Admin/Aws/actions.js\"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, \"/var/www/html/utter/client/src/layouts/Admin/Aws/actions.js\"); } } })();","{\"version\":3,\"sources\":[\"/var/www/html/utter/client/src/layouts/Admin/Aws/actions.js\"],\"names\":[\"cid\",\"baseActionCreators\",\"actionCreatorsFor\",\"actionCreators\",\"fetch\",\"level\",\"lang\",\"dispatch\",\"getState\",\"action\",\"fetchStart\",\"url\",\"promise\",\"params\",\"language\",\"then\",\"returned\",\"res\",\"data\",\"id\",\"successAction\",\"fetchSuccess\",\"errorAction\",\"fetchError\",\"catch\",\"err\",\"console\",\"error\",\"toString\",\"create\",\"word\",\"merge\",\"createStart\",\"method\",\"createSuccess\",\"createError\",\"update\",\"log\",\"updateStart\",\"_id\",\"response\",\"returnedWord\",\"updateSuccess\",\"updateError\",\"delete\",\"optimisticAction\",\"deleteStart\",\"deleteSuccess\",\"deleteError\",\"Object\",\"assign\"],\"mappings\":\"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\",\"sourcesContent\":[\"import reduxCrud from 'redux-crud'\\nimport axios from 'axios'\\nimport _ from 'lodash'\\nimport cuid from 'cuid'\\nconst cid = cuid()\\n\\nconst baseActionCreators = reduxCrud.actionCreatorsFor('word')\\n\\nlet actionCreators = {\\n  fetch(level, lang) {\\n    return (dispatch, getState) => {\\n      const action = baseActionCreators.fetchStart()\\n      dispatch(action)\\n\\n      // api request\\n      const url = '/api/dictionary'\\n      if (!level) {\\n        level = '1'\\n      }\\n      const promise = axios({\\n        url,\\n        params: {\\n          level: level,\\n          language: lang\\n        }\\n      })\\n\\n      promise\\n        .then(\\n          res => {\\n            const returned = res.data\\n            returned.id = cid\\n            const successAction = baseActionCreators.fetchSuccess(returned)\\n            dispatch(successAction)\\n          },\\n          function(res) {\\n            // On rejection dispatch the error action\\n            const errorAction = baseActionCreators.fetchError(res)\\n            dispatch(errorAction)\\n          }\\n        )\\n        .catch(function(err) {\\n          console.error(err.toString())\\n        })\\n\\n      return promise\\n    }\\n  },\\n  create(word) {\\n    return (dispatch, getState) => {\\n      // Generate a cid so we can match the records\\n      var cid = cuid()\\n      word = _.merge(word, {id: cid})\\n\\n      const action = baseActionCreators.createStart(word)\\n      dispatch(action)\\n\\n      // api request\\n      const url = '/api/dictionary'\\n      const promise = axios({\\n        url,\\n        method: 'POST',\\n        data: word\\n      })\\n\\n      promise\\n        .then(\\n          res => {\\n            const returned = res.data\\n            returned.id = cid\\n            const successAction = baseActionCreators.createSuccess(\\n              returned,\\n              cid\\n            )\\n            dispatch(successAction)\\n          },\\n          function(res) {\\n            // On rejection dispatch the error action\\n            const errorAction = baseActionCreators.createError(res, word)\\n            dispatch(errorAction)\\n          }\\n        )\\n        .catch(function(err) {\\n          console.error(err.toString())\\n        })\\n\\n      return promise\\n    }\\n  },\\n\\n  update(word) {\\n    return function(dispatch) {\\n      // optimistic update\\n      console.log('word in actions: ', word)\\n      const action = baseActionCreators.updateStart(word)\\n      dispatch(action)\\n\\n      // api request\\n      const url = `/api/dictionary/${word._id}`\\n      const promise = axios({\\n        url,\\n        method: 'PUT',\\n        data: {\\n          word\\n        }\\n      })\\n\\n      promise\\n        .then(\\n          function(response) {\\n            const returnedWord = response.data.data\\n            const action = baseActionCreators.updateSuccess(returnedWord)\\n            dispatch(action)\\n          },\\n          function(response) {\\n            const action = baseActionCreators.updateError(response, word)\\n            dispatch(action)\\n          }\\n        )\\n        .catch(function(err) {\\n          console.error(err.toString())\\n        })\\n\\n      return promise\\n    }\\n  },\\n\\n  delete(word) {\\n    return function(dispatch) {\\n      const optimisticAction = baseActionCreators.deleteStart(word)\\n      dispatch(optimisticAction)\\n\\n      const url = `/api/dictionary/${word._id}`\\n      const promise = axios({\\n        url,\\n        method: 'DELETE'\\n      })\\n\\n      promise\\n        .then(\\n          function(response) {\\n            // dispatch the success action\\n            const successAction = baseActionCreators.deleteSuccess(word)\\n            dispatch(successAction)\\n          },\\n          function(response) {\\n            // rejection\\n            // dispatch the error action\\n            const errorAction = baseActionCreators.deleteError(response, word)\\n            dispatch(errorAction)\\n          }\\n        )\\n        .catch(function(err) {\\n          console.error(err.toString())\\n        })\\n\\n      return promise\\n    }\\n  }\\n}\\n\\nactionCreators = Object.assign(baseActionCreators, actionCreators)\\n\\nexport default actionCreators\\n\"]}"]}