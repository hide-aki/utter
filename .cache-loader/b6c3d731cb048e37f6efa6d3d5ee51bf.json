{"remainingRequest":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js!/var/www/html/utter/node_modules/babel-loader/lib/index.js!/var/www/html/utter/client/src/layouts/ResetPassword.js","dependencies":[{"path":"/var/www/html/utter/client/src/layouts/ResetPassword.js","mtime":1516897277830},{"path":"/var/www/html/utter/.babelrc","mtime":1518822814526},{"path":"/var/www/html/utter/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js","mtime":1510167650000},{"path":"/var/www/html/utter/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _redux = require('redux');\n\nvar _reactRouterDom = require('react-router-dom');\n\nvar _styledComponents = require('styled-components');\n\nvar _styledComponents2 = _interopRequireDefault(_styledComponents);\n\nvar _containers = require('../containers');\n\nvar _authActions = require('../actions/authActions.js');\n\nvar _resetPassword = require('../utils/validations/resetPassword.js');\n\nvar _components = require('../components');\n\nvar _reactHelmet = require('react-helmet');\n\nvar _reactRedux = require('react-redux');\n\nvar _flashMessages = require('../actions/flashMessages.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Form = /*#__PURE__*/_styledComponents2.default.form.withConfig({\n  displayName: 'ResetPassword__Form'\n})(['box-sizing:border-box;display:flex;flex-direction:column;justify-content:center;align-items:center;margin:0 auto;@media(min-width:640px){flex-direction:row;width:960px;}']);\nvar Error = /*#__PURE__*/_styledComponents2.default.div.withConfig({\n  displayName: 'ResetPassword__Error'\n})(['padding-top:5px;color:red;']);\n\nvar ResetPassword = function (_Component) {\n  (0, _inherits3.default)(ResetPassword, _Component);\n\n  function ResetPassword(props) {\n    (0, _classCallCheck3.default)(this, ResetPassword);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (ResetPassword.__proto__ || Object.getPrototypeOf(ResetPassword)).call(this, props));\n\n    _this.state = {\n      identifier: '',\n      password: '',\n      passwordConfirmation: '',\n      token: '',\n      errors: {}\n    };\n\n    _this.onChange = _this.onChange.bind(_this);\n    // this.resetpassword = this.resetpassword.bind(this)\n    _this.onSubmit = _this.onSubmit.bind(_this);\n    return _this;\n  }\n\n  (0, _createClass3.default)(ResetPassword, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // get reset password token\n      var promise = new Promise(function (resolve, reject) {\n        var query = new URLSearchParams(_this2.props.location.search);\n        var token = query.get('token');\n        var user = query.get('user');\n        var creds = { user: user, token: token };\n        resolve(creds);\n      }).then(function (result) {\n        _this2.setState({\n          identifier: result.user,\n          token: result.token\n        });\n      }).catch(function (err) {\n        console.log('Error: ', err);\n      });\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(e) {\n      this.setState((0, _defineProperty3.default)({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: 'isValid',\n    value: function isValid() {\n      var _validateInput = (0, _resetPassword.validateInput)(this.state),\n          errors = _validateInput.errors,\n          isValid = _validateInput.isValid;\n\n      if (!isValid) {\n        this.setState({\n          errors: errors\n        });\n      }\n      return isValid;\n    }\n  }, {\n    key: 'onSubmit',\n    value: function onSubmit(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n\n      if (this.isValid()) {\n        this.setState({\n          isLoading: true,\n          errors: {} // clear errors every time we submit form\n        });\n        this.props.actions.resetpassword(this.state).then(function (res) {\n          _this3.props.actions.addFlashMessage({\n            type: 'success',\n            // text: \"You have successfully reset your password.\"\n            text: res.data.message\n          });\n          _this3.props.history.push('/');\n        }).then(function () {\n          var _state = _this3.state,\n              identifier = _state.identifier,\n              password = _state.password;\n\n          var loginState = {\n            identifier: identifier,\n            password: password\n          };\n          console.log('loginState: ', loginState);\n          _this3.props.actions.login(loginState);\n        }).catch(function (error) {\n          console.log('errors: ', error);\n          // this.setState({errors: error.response.data.message})\n          _this3.props.actions.addFlashMessage({\n            type: 'fail',\n            text: error.response.data.message\n          });\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var passwordErrors = this.state.errors.password;\n      var passwordConfirmationErrors = this.state.errors.passwordConfirmation;\n      return _react2.default.createElement(\n        _components.Wrapper,\n        { history: this.props.history },\n        _react2.default.createElement(\n          Form,\n          { onSubmit: this.onSubmit },\n          _react2.default.createElement(\n            _reactHelmet.Helmet,\n            null,\n            _react2.default.createElement('meta', { charset: 'utf-8' }),\n            _react2.default.createElement('meta', {\n              name: 'viewport',\n              content: 'width=device-width, initial-scale=1, shrink-to-fit=no'\n            }),\n            _react2.default.createElement('meta', { name: 'description', content: 'Reset your password.' }),\n            _react2.default.createElement('meta', { name: 'author', content: 'Isaac Pak' }),\n            _react2.default.createElement(\n              'title',\n              null,\n              'Utter | Contacts'\n            ),\n            _react2.default.createElement('link', { rel: 'canonical', href: 'https://utter.zone/contact' })\n          ),\n          _react2.default.createElement(\n            _containers.Masthead,\n            { bg: 'green' },\n            _react2.default.createElement(\n              _components.Title,\n              null,\n              'Enter your new password'\n            ),\n            _react2.default.createElement(\n              _components.Subtitle,\n              null,\n              'Passwords should be at least 10 characters, include at least 3 of the following 4 types of characters: a lower-case letter, an upper-case letter, a number, a special character (e.g. !@#$%^&*). They should not have more than 2 identical characters in a row (e.g. 111 is not allowed) and not more than 128 characters.'\n            ),\n            _react2.default.createElement(\n              _components.Box,\n              { flexdirection: 'row', margin: '20px 0 0 0' },\n              _react2.default.createElement(\n                _components.Label,\n                { margin: '0', padding: '0', width: '180px' },\n                'New Password'\n              ),\n              _react2.default.createElement(\n                _components.Box,\n                null,\n                _react2.default.createElement(_components.Input, {\n                  autoComplete: 'new-password',\n                  type: 'password',\n                  name: 'password',\n                  onChange: this.onChange,\n                  margin: '0 20px 0 20px'\n                }),\n                this.state.errors.password && Object.keys(passwordErrors).map(function (key, i) {\n                  if (key === 'message') {\n                    var value = key;\n                  }\n                  return _react2.default.createElement(\n                    Error,\n                    { key: i },\n                    passwordErrors[value]\n                  );\n                })\n              ),\n              _react2.default.createElement(\n                _components.Label,\n                { margin: '0', padding: '0', width: '180px' },\n                'Confirm Password'\n              ),\n              _react2.default.createElement(\n                _components.Box,\n                null,\n                _react2.default.createElement(_components.Input, {\n                  autoComplete: 'new-password',\n                  type: 'password',\n                  name: 'passwordConfirmation',\n                  onChange: this.onChange,\n                  margin: '0 20px 0 20px'\n                }),\n                this.state.errors.passwordConfirmation && Object.keys(passwordConfirmationErrors).map(function (key, i) {\n                  if (key === 'message') {\n                    var value = key;\n                  }\n                  return _react2.default.createElement(\n                    Error,\n                    { key: i },\n                    passwordConfirmationErrors[value]\n                  );\n                })\n              ),\n              _react2.default.createElement(\n                _components.Button,\n                { fontsize: '20px', padding: '6px' },\n                'send'\n              )\n            ),\n            _react2.default.createElement(_components.Box, null)\n          )\n        )\n      );\n    }\n  }]);\n  return ResetPassword;\n}(_react.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    actions: (0, _redux.bindActionCreators)({\n      addFlashMessage: _flashMessages.addFlashMessage,\n      login: _authActions.login,\n      resetpassword: _authActions.resetpassword\n    }, dispatch)\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(null, mapDispatchToProps)(ResetPassword);\n\nexports.default = _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Form, 'Form', '/var/www/html/utter/client/src/layouts/ResetPassword.js');\n\n  __REACT_HOT_LOADER__.register(Error, 'Error', '/var/www/html/utter/client/src/layouts/ResetPassword.js');\n\n  __REACT_HOT_LOADER__.register(ResetPassword, 'ResetPassword', '/var/www/html/utter/client/src/layouts/ResetPassword.js');\n\n  __REACT_HOT_LOADER__.register(mapDispatchToProps, 'mapDispatchToProps', '/var/www/html/utter/client/src/layouts/ResetPassword.js');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/var/www/html/utter/client/src/layouts/ResetPassword.js');\n}();\n\n;\n\n ;(function register() { /* react-hot-loader/webpack */ if (process.env.NODE_ENV !== 'production') { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : module.exports; /* eslint-enable camelcase, no-undef */ if (typeof webpackExports === 'function') { __REACT_HOT_LOADER__.register(webpackExports, 'module.exports', \"/var/www/html/utter/client/src/layouts/ResetPassword.js\"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, \"/var/www/html/utter/client/src/layouts/ResetPassword.js\"); } } })();","{\"version\":3,\"sources\":[\"/var/www/html/utter/client/src/layouts/ResetPassword.js\"],\"names\":[\"Form\",\"form\",\"Error\",\"div\",\"ResetPassword\",\"props\",\"state\",\"identifier\",\"password\",\"passwordConfirmation\",\"token\",\"errors\",\"onChange\",\"bind\",\"onSubmit\",\"promise\",\"Promise\",\"resolve\",\"reject\",\"query\",\"URLSearchParams\",\"location\",\"search\",\"get\",\"user\",\"creds\",\"then\",\"setState\",\"result\",\"catch\",\"console\",\"log\",\"err\",\"e\",\"target\",\"name\",\"value\",\"isValid\",\"preventDefault\",\"isLoading\",\"actions\",\"resetpassword\",\"addFlashMessage\",\"type\",\"text\",\"res\",\"data\",\"message\",\"history\",\"push\",\"loginState\",\"login\",\"error\",\"response\",\"passwordErrors\",\"passwordConfirmationErrors\",\"Object\",\"keys\",\"map\",\"key\",\"i\",\"mapDispatchToProps\",\"dispatch\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, {Component} from 'react'\\nimport {bindActionCreators} from 'redux'\\nimport {Link} from 'react-router-dom'\\nimport styled, {ThemeProvider} from 'styled-components'\\nimport {Masthead, Navbar} from '../containers'\\nimport {login} from '../actions/authActions.js'\\nimport {validateInput} from '../utils/validations/resetPassword.js'\\nimport {\\n  Box,\\n  Button,\\n  Input,\\n  Label,\\n  Subtitle,\\n  Title,\\n  Wrapper\\n} from '../components'\\nimport {Helmet} from 'react-helmet'\\nimport {connect} from 'react-redux'\\nimport {addFlashMessage} from '../actions/flashMessages.js'\\nimport {resetpassword} from '../actions/authActions.js'\\n\\nconst Form = styled.form`\\n  box-sizing: border-box;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  margin: 0 auto;\\n\\n  @media(min-width: 640px) {\\n    flex-direction: row;\\n    width: 960px;\\n  }\\n`\\nconst Error = styled.div`\\n  padding-top: 5px;\\n  color: red;\\n`\\nclass ResetPassword extends Component {\\n  constructor(props) {\\n    super(props)\\n    this.state = {\\n      identifier: '',\\n      password: '',\\n      passwordConfirmation: '',\\n      token: '',\\n      errors: {}\\n    }\\n\\n    this.onChange = this.onChange.bind(this)\\n    // this.resetpassword = this.resetpassword.bind(this)\\n    this.onSubmit = this.onSubmit.bind(this)\\n  }\\n\\n  componentDidMount() {\\n    // get reset password token\\n    const promise = new Promise((resolve, reject) => {\\n      const query = new URLSearchParams(this.props.location.search)\\n      const token = query.get('token')\\n      const user = query.get('user')\\n      const creds = {user, token}\\n      resolve(creds)\\n    })\\n      .then(result => {\\n        this.setState({\\n          identifier: result.user,\\n          token: result.token\\n        })\\n      })\\n      .catch(err => {\\n        console.log('Error: ', err)\\n      })\\n  }\\n\\n  onChange(e) {\\n    this.setState({\\n      [e.target.name]: e.target.value\\n    })\\n  }\\n\\n  isValid() {\\n    const {errors, isValid} = validateInput(this.state)\\n\\n    if (!isValid) {\\n      this.setState({\\n        errors\\n      })\\n    }\\n    return isValid\\n  }\\n\\n  onSubmit(e) {\\n    e.preventDefault()\\n\\n    if (this.isValid()) {\\n      this.setState({\\n        isLoading: true,\\n        errors: {} // clear errors every time we submit form\\n      })\\n      this.props.actions\\n        .resetpassword(this.state)\\n        .then(res => {\\n          this.props.actions.addFlashMessage({\\n            type: 'success',\\n            // text: \\\"You have successfully reset your password.\\\"\\n            text: res.data.message\\n          })\\n          this.props.history.push('/')\\n        })\\n        .then(() => {\\n          const {identifier, password} = this.state\\n          const loginState = {\\n            identifier,\\n            password\\n          }\\n          console.log('loginState: ', loginState)\\n          this.props.actions.login(loginState)\\n        })\\n        .catch(error => {\\n          console.log('errors: ', error)\\n          // this.setState({errors: error.response.data.message})\\n          this.props.actions.addFlashMessage({\\n            type: 'fail',\\n            text: error.response.data.message\\n          })\\n        })\\n    }\\n  }\\n\\n  render() {\\n    const passwordErrors = this.state.errors.password\\n    const passwordConfirmationErrors = this.state.errors.passwordConfirmation\\n    return (\\n      <Wrapper history={this.props.history}>\\n        <Form onSubmit={this.onSubmit}>\\n          <Helmet>\\n            <meta charset=\\\"utf-8\\\" />\\n            <meta\\n              name=\\\"viewport\\\"\\n              content=\\\"width=device-width, initial-scale=1, shrink-to-fit=no\\\"\\n            />\\n            <meta name=\\\"description\\\" content=\\\"Reset your password.\\\" />\\n            <meta name=\\\"author\\\" content=\\\"Isaac Pak\\\" />\\n            <title>Utter | Contacts</title>\\n            <link rel=\\\"canonical\\\" href=\\\"https://utter.zone/contact\\\" />\\n          </Helmet>\\n          <Masthead bg=\\\"green\\\">\\n            <Title>Enter your new password</Title>\\n            <Subtitle>\\n              Passwords should be at least 10 characters, include at least 3 of\\n              the following 4 types of characters: a lower-case letter, an\\n              upper-case letter, a number, a special character (e.g. !@#$%^&*).\\n              They should not have more than 2 identical characters in a row\\n              (e.g. 111 is not allowed) and not more than 128 characters.\\n            </Subtitle>\\n            <Box flexdirection=\\\"row\\\" margin=\\\"20px 0 0 0\\\">\\n              <Label margin=\\\"0\\\" padding=\\\"0\\\" width=\\\"180px\\\">New Password</Label>\\n              <Box>\\n                <Input\\n                  autoComplete=\\\"new-password\\\"\\n                  type=\\\"password\\\"\\n                  name=\\\"password\\\"\\n                  onChange={this.onChange}\\n                  margin=\\\"0 20px 0 20px\\\"\\n                />\\n                {this.state.errors.password &&\\n                  Object.keys(passwordErrors).map((key, i) => {\\n                    if (key === 'message') {\\n                      var value = key\\n                    }\\n                    return (\\n                      <Error key={i}>\\n                        {passwordErrors[value]}\\n                      </Error>\\n                    )\\n                  })}\\n              </Box>\\n              <Label margin=\\\"0\\\" padding=\\\"0\\\" width=\\\"180px\\\">\\n                Confirm Password\\n              </Label>\\n              <Box>\\n                <Input\\n                  autoComplete=\\\"new-password\\\"\\n                  type=\\\"password\\\"\\n                  name=\\\"passwordConfirmation\\\"\\n                  onChange={this.onChange}\\n                  margin=\\\"0 20px 0 20px\\\"\\n                />\\n                {this.state.errors.passwordConfirmation &&\\n                  Object.keys(passwordConfirmationErrors).map((key, i) => {\\n                    if (key === 'message') {\\n                      var value = key\\n                    }\\n                    return (\\n                      <Error key={i}>\\n                        {passwordConfirmationErrors[value]}\\n                      </Error>\\n                    )\\n                  })}\\n              </Box>\\n              <Button fontsize=\\\"20px\\\" padding=\\\"6px\\\">\\n                send\\n              </Button>\\n            </Box>\\n            <Box />\\n          </Masthead>\\n        </Form>\\n      </Wrapper>\\n    )\\n  }\\n}\\n\\nconst mapDispatchToProps = dispatch => {\\n  return {\\n    actions: bindActionCreators(\\n      {\\n        addFlashMessage,\\n        login,\\n        resetpassword\\n      },\\n      dispatch\\n    )\\n  }\\n}\\n\\nexport default connect(null, mapDispatchToProps)(ResetPassword)\\n\"]}"]}