{"remainingRequest":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js!/var/www/html/utter/node_modules/babel-loader/lib/index.js!/var/www/html/utter/client/src/containers/Rooms/actions.js","dependencies":[{"path":"/var/www/html/utter/client/src/containers/Rooms/actions.js","mtime":1513644747767},{"path":"/var/www/html/utter/.babelrc","mtime":1518822814526},{"path":"/var/www/html/utter/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js","mtime":1510167650000},{"path":"/var/www/html/utter/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeRoom = exports.joinRoom = exports.updateRoomTitle = exports.updateRoomLanguage = exports.updateRoomLevel = exports.updateRoomCreator = exports.updateCurrentRoom = exports.updateListType = exports.loadListType = undefined;\n\nvar _types = require('./types.js');\n\nvar loadListType = function loadListType(type) {\n  return {\n    type: _types.LOAD_LIST_TYPE,\n    payload: new Promise(function (resolve, reject) {\n      resolve(type);\n    })\n  };\n};\n\nvar updateListType = function updateListType(type) {\n  return {\n    type: _types.UPDATE_LIST_TYPE,\n    payload: new Promise(function (resolve, reject) {\n      resolve(type);\n    })\n  };\n};\n\nvar joinRoom = function joinRoom(id) {\n  return {\n    type: _types.JOIN_ROOM,\n    payload: new Promise(function (resolve, reject) {\n      resolve(id);\n    })\n  };\n};\n\nvar updateRoomLanguage = function updateRoomLanguage(lang) {\n  return {\n    type: _types.UPDATE_ROOM_LANGUAGE,\n    payload: new Promise(function (resolve, reject) {\n      resolve(lang);\n    })\n  };\n};\n\nvar updateCurrentRoom = function updateCurrentRoom(room) {\n  return {\n    type: _types.UPDATE_CURRENT_ROOM,\n    payload: new Promise(function (resolve, reject) {\n      resolve(room);\n    })\n  };\n};\n\nvar updateRoomCreator = function updateRoomCreator(creator) {\n  return {\n    type: _types.UPDATE_ROOM_CREATOR,\n    payload: new Promise(function (resolve, reject) {\n      resolve(creator);\n    })\n  };\n};\n\nvar updateRoomLevel = function updateRoomLevel(level) {\n  return {\n    type: _types.UPDATE_ROOM_LEVEL,\n    payload: new Promise(function (resolve, reject) {\n      resolve(level);\n    })\n  };\n};\n\nvar updateRoomTitle = function updateRoomTitle(title) {\n  return {\n    type: _types.UPDATE_ROOM_TITLE,\n    payload: new Promise(function (resolve, result) {\n      resolve(title);\n    })\n  };\n};\n\nvar removeRoom = function removeRoom() {\n  return { type: _types.REMOVE };\n};\n\nexports.loadListType = loadListType;\nexports.updateListType = updateListType;\nexports.updateCurrentRoom = updateCurrentRoom;\nexports.updateRoomCreator = updateRoomCreator;\nexports.updateRoomLevel = updateRoomLevel;\nexports.updateRoomLanguage = updateRoomLanguage;\nexports.updateRoomTitle = updateRoomTitle;\nexports.joinRoom = joinRoom;\nexports.removeRoom = removeRoom;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(loadListType, 'loadListType', '/var/www/html/utter/client/src/containers/Rooms/actions.js');\n\n  __REACT_HOT_LOADER__.register(updateListType, 'updateListType', '/var/www/html/utter/client/src/containers/Rooms/actions.js');\n\n  __REACT_HOT_LOADER__.register(joinRoom, 'joinRoom', '/var/www/html/utter/client/src/containers/Rooms/actions.js');\n\n  __REACT_HOT_LOADER__.register(updateRoomLanguage, 'updateRoomLanguage', '/var/www/html/utter/client/src/containers/Rooms/actions.js');\n\n  __REACT_HOT_LOADER__.register(updateCurrentRoom, 'updateCurrentRoom', '/var/www/html/utter/client/src/containers/Rooms/actions.js');\n\n  __REACT_HOT_LOADER__.register(updateRoomCreator, 'updateRoomCreator', '/var/www/html/utter/client/src/containers/Rooms/actions.js');\n\n  __REACT_HOT_LOADER__.register(updateRoomLevel, 'updateRoomLevel', '/var/www/html/utter/client/src/containers/Rooms/actions.js');\n\n  __REACT_HOT_LOADER__.register(updateRoomTitle, 'updateRoomTitle', '/var/www/html/utter/client/src/containers/Rooms/actions.js');\n\n  __REACT_HOT_LOADER__.register(removeRoom, 'removeRoom', '/var/www/html/utter/client/src/containers/Rooms/actions.js');\n}();\n\n;\n\n ;(function register() { /* react-hot-loader/webpack */ if (process.env.NODE_ENV !== 'production') { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : module.exports; /* eslint-enable camelcase, no-undef */ if (typeof webpackExports === 'function') { __REACT_HOT_LOADER__.register(webpackExports, 'module.exports', \"/var/www/html/utter/client/src/containers/Rooms/actions.js\"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, \"/var/www/html/utter/client/src/containers/Rooms/actions.js\"); } } })();","{\"version\":3,\"sources\":[\"/var/www/html/utter/client/src/containers/Rooms/actions.js\"],\"names\":[\"loadListType\",\"type\",\"payload\",\"Promise\",\"resolve\",\"reject\",\"updateListType\",\"joinRoom\",\"id\",\"updateRoomLanguage\",\"lang\",\"updateCurrentRoom\",\"room\",\"updateRoomCreator\",\"creator\",\"updateRoomLevel\",\"level\",\"updateRoomTitle\",\"result\",\"title\",\"removeRoom\"],\"mappings\":\";;;;;;;AAAA;;AAYA,IAAMA,eAAe,SAAfA,YAAe,OAAQ;AAC3B,SAAO;AACLC,+BADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQH,IAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMK,iBAAiB,SAAjBA,cAAiB,OAAQ;AAC7B,SAAO;AACLL,iCADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQH,IAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMM,WAAW,SAAXA,QAAW,KAAM;AACrB,SAAO;AACLN,0BADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQI,EAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMC,qBAAqB,SAArBA,kBAAqB,OAAQ;AACjC,SAAO;AACLR,qCADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQM,IAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMC,oBAAoB,SAApBA,iBAAoB,OAAQ;AAChC,SAAO;AACLV,oCADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQQ,IAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMC,oBAAoB,SAApBA,iBAAoB,UAAW;AACnC,SAAO;AACLZ,oCADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQU,OAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMC,kBAAkB,SAAlBA,eAAkB,QAAS;AAC/B,SAAO;AACLd,kCADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQY,KAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMC,kBAAkB,SAAlBA,eAAkB,QAAS;AAC/B,SAAO;AACLhB,kCADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUc,MAAV,EAAqB;AACxCd,cAAQe,KAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMC,aAAa,SAAbA,UAAa,GAAM;AACvB,SAAO,EAACnB,mBAAD,EAAP;AACD,CAFD;;QAKED,Y,GAAAA,Y;QACAM,c,GAAAA,c;QACAK,iB,GAAAA,iB;QACAE,iB,GAAAA,iB;QACAE,e,GAAAA,e;QACAN,kB,GAAAA,kB;QACAQ,e,GAAAA,e;QACAV,Q,GAAAA,Q;QACAa,U,GAAAA,U;;;;;;;;gCArFIpB,Y;;gCASAM,c;;gCASAC,Q;;gCASAE,kB;;gCASAE,iB;;gCASAE,iB;;gCASAE,e;;gCASAE,e;;gCASAG,U\",\"sourcesContent\":[\"import {\\n  LOAD_LIST_TYPE,\\n  UPDATE_LIST_TYPE,\\n  UPDATE_CURRENT_ROOM,\\n  UPDATE_ROOM_CREATOR,\\n  UPDATE_ROOM_LANGUAGE,\\n  UPDATE_ROOM_LEVEL,\\n  UPDATE_ROOM_TITLE,\\n  REMOVE,\\n  JOIN_ROOM\\n} from './types.js'\\n\\nconst loadListType = type => {\\n  return {\\n    type: LOAD_LIST_TYPE,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(type)\\n    })\\n  }\\n}\\n\\nconst updateListType = type => {\\n  return {\\n    type: UPDATE_LIST_TYPE,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(type)\\n    })\\n  }\\n}\\n\\nconst joinRoom = id => {\\n  return {\\n    type: JOIN_ROOM,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(id)\\n    })\\n  }\\n}\\n\\nconst updateRoomLanguage = lang => {\\n  return {\\n    type: UPDATE_ROOM_LANGUAGE,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(lang)\\n    })\\n  }\\n}\\n\\nconst updateCurrentRoom = room => {\\n  return {\\n    type: UPDATE_CURRENT_ROOM,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(room)\\n    })\\n  }\\n}\\n\\nconst updateRoomCreator = creator => {\\n  return {\\n    type: UPDATE_ROOM_CREATOR,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(creator)\\n    })\\n  }\\n}\\n\\nconst updateRoomLevel = level => {\\n  return {\\n    type: UPDATE_ROOM_LEVEL,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(level)\\n    })\\n  }\\n}\\n\\nconst updateRoomTitle = title => {\\n  return {\\n    type: UPDATE_ROOM_TITLE,\\n    payload: new Promise((resolve, result) => {\\n      resolve(title)\\n    })\\n  }\\n}\\n\\nconst removeRoom = () => {\\n  return {type: REMOVE}\\n}\\n\\nexport {\\n  loadListType,\\n  updateListType,\\n  updateCurrentRoom,\\n  updateRoomCreator,\\n  updateRoomLevel,\\n  updateRoomLanguage,\\n  updateRoomTitle,\\n  joinRoom,\\n  removeRoom\\n}\\n\"]}"]}