{"remainingRequest":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js!/var/www/html/utter/node_modules/babel-loader/lib/index.js!/var/www/html/utter/client/src/services/speech/index.js","dependencies":[{"path":"/var/www/html/utter/client/src/services/speech/index.js","mtime":1512255669067},{"path":"/var/www/html/utter/.babelrc","mtime":1518822814526},{"path":"/var/www/html/utter/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js","mtime":1510167650000},{"path":"/var/www/html/utter/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _default = {\n  speechStart: function speechStart() {\n    var _this = this;\n\n    var speech = new webkitSpeechRecognition() || speechRecognition();\n    speech.lang = 'ko-KR';\n    // speech.lang = 'en-US'\n    // speech.lang = 'fr-FR';\n    // speech.lang = 'es-MX';\n    speech.continuous = true;\n    speech.start();\n    speech.onresult = function (event) {\n      var interim_transcript = '';\n      var final_transcript = '';\n\n      for (var i = event.resultIndex; i < event.results.length; ++i) {\n        if (event.results[i].isFinal) {\n          final_transcript += event.results[i][0].transcript;\n        } else {\n          interim_transcript += event.results[i][0].transcript;\n        }\n      }\n\n      interim_transcript = interim_transcript.toLowerCase();\n      final_transcript = final_transcript.toLowerCase();\n\n      _this.props.actions.setInterimScript(interim_transcript);\n      _this.props.actions.setFinalTranscript(final_transcript);\n\n      // final_span.innerHTML = linebreak(final_transcript)\n      // interim_span.innerHTML = linebreak(interim_transcript)\n    };\n  }\n  // speech synth for yandex api\n  // superagent\n  //   .get('https://translate.yandex.net/api/v1.5/tr.json/translate')\n  //   .query({\n  //     key: secrets.yandex,\n  //     text: query,\n  //     lang: 'en-ko'\n  //   })\n  //   .set('Accept', 'application/json')\n  //   .then(res => {\n  //     const translated = res.body.text[0]\n  //     this.props.actions.sendTranslated(translated)\n\n  //     var msg = new SpeechSynthesisUtterance()\n  //     var voices = window.speechSynthesis.getVoices()\n\n  //     msg.voice = voices[1] // Note: some voices don't support altering params\n  //     // msg.voiceURI = 'native'\n  //     msg.volume = 1 // 0 to 1\n  //     msg.rate = 0.5 // 0.1 to 10\n  //     msg.pitch = 1 //0 to 2\n  //     msg.text = translated\n  //     msg.lang = 'ko-KR'\n  //     // msg.lang = 'en-US'\n\n  //     // msg.onend = function(e) {\n  //     //   console.log('Finished in ' + event.elapsedTime + ' seconds.')\n  //     // }\n\n  //     speechSynthesis.speak(msg)\n  //   })\n\n};\nexports.default = _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/var/www/html/utter/client/src/services/speech/index.js');\n}();\n\n;\n\n ;(function register() { /* react-hot-loader/webpack */ if (process.env.NODE_ENV !== 'production') { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : module.exports; /* eslint-enable camelcase, no-undef */ if (typeof webpackExports === 'function') { __REACT_HOT_LOADER__.register(webpackExports, 'module.exports', \"/var/www/html/utter/client/src/services/speech/index.js\"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, \"/var/www/html/utter/client/src/services/speech/index.js\"); } } })();","{\"version\":3,\"sources\":[\"/var/www/html/utter/client/src/services/speech/index.js\"],\"names\":[\"speechStart\",\"speech\",\"webkitSpeechRecognition\",\"speechRecognition\",\"lang\",\"continuous\",\"start\",\"onresult\",\"interim_transcript\",\"final_transcript\",\"i\",\"event\",\"resultIndex\",\"results\",\"length\",\"isFinal\",\"transcript\",\"toLowerCase\",\"props\",\"actions\",\"setInterimScript\",\"setFinalTranscript\"],\"mappings\":\";;;;;eAAe;AACbA,aADa,yBACC;AAAA;;AACZ,QAAMC,SAAS,IAAIC,uBAAJ,MAAiCC,mBAAhD;AACAF,WAAOG,IAAP,GAAc,OAAd;AACA;AACA;AACA;AACAH,WAAOI,UAAP,GAAoB,IAApB;AACAJ,WAAOK,KAAP;AACAL,WAAOM,QAAP,GAAkB,iBAAS;AACzB,UAAIC,qBAAqB,EAAzB;AACA,UAAIC,mBAAmB,EAAvB;;AAEA,WAAK,IAAIC,IAAIC,MAAMC,WAAnB,EAAgCF,IAAIC,MAAME,OAAN,CAAcC,MAAlD,EAA0D,EAAEJ,CAA5D,EAA+D;AAC7D,YAAIC,MAAME,OAAN,CAAcH,CAAd,EAAiBK,OAArB,EAA8B;AAC5BN,8BAAoBE,MAAME,OAAN,CAAcH,CAAd,EAAiB,CAAjB,EAAoBM,UAAxC;AACD,SAFD,MAEO;AACLR,gCAAsBG,MAAME,OAAN,CAAcH,CAAd,EAAiB,CAAjB,EAAoBM,UAA1C;AACD;AACF;;AAEDR,2BAAqBA,mBAAmBS,WAAnB,EAArB;AACAR,yBAAmBA,iBAAiBQ,WAAjB,EAAnB;;AAEA,YAAKC,KAAL,CAAWC,OAAX,CAAmBC,gBAAnB,CAAoCZ,kBAApC;AACA,YAAKU,KAAL,CAAWC,OAAX,CAAmBE,kBAAnB,CAAsCZ,gBAAtC;;AAEA;AACA;AACD,KApBD;AAqBD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AA7Da,C\",\"sourcesContent\":[\"export default {\\n  speechStart() {\\n    const speech = new webkitSpeechRecognition() || speechRecognition()\\n    speech.lang = 'ko-KR'\\n    // speech.lang = 'en-US'\\n    // speech.lang = 'fr-FR';\\n    // speech.lang = 'es-MX';\\n    speech.continuous = true\\n    speech.start()\\n    speech.onresult = event => {\\n      var interim_transcript = ''\\n      var final_transcript = ''\\n\\n      for (var i = event.resultIndex; i < event.results.length; ++i) {\\n        if (event.results[i].isFinal) {\\n          final_transcript += event.results[i][0].transcript\\n        } else {\\n          interim_transcript += event.results[i][0].transcript\\n        }\\n      }\\n\\n      interim_transcript = interim_transcript.toLowerCase()\\n      final_transcript = final_transcript.toLowerCase()\\n\\n      this.props.actions.setInterimScript(interim_transcript)\\n      this.props.actions.setFinalTranscript(final_transcript)\\n\\n      // final_span.innerHTML = linebreak(final_transcript)\\n      // interim_span.innerHTML = linebreak(interim_transcript)\\n    }\\n  }\\n  // speech synth for yandex api\\n  // superagent\\n  //   .get('https://translate.yandex.net/api/v1.5/tr.json/translate')\\n  //   .query({\\n  //     key: secrets.yandex,\\n  //     text: query,\\n  //     lang: 'en-ko'\\n  //   })\\n  //   .set('Accept', 'application/json')\\n  //   .then(res => {\\n  //     const translated = res.body.text[0]\\n  //     this.props.actions.sendTranslated(translated)\\n\\n  //     var msg = new SpeechSynthesisUtterance()\\n  //     var voices = window.speechSynthesis.getVoices()\\n\\n  //     msg.voice = voices[1] // Note: some voices don't support altering params\\n  //     // msg.voiceURI = 'native'\\n  //     msg.volume = 1 // 0 to 1\\n  //     msg.rate = 0.5 // 0.1 to 10\\n  //     msg.pitch = 1 //0 to 2\\n  //     msg.text = translated\\n  //     msg.lang = 'ko-KR'\\n  //     // msg.lang = 'en-US'\\n\\n  //     // msg.onend = function(e) {\\n  //     //   console.log('Finished in ' + event.elapsedTime + ' seconds.')\\n  //     // }\\n\\n  //     speechSynthesis.speak(msg)\\n  //   })\\n}\\n\"]}"]}