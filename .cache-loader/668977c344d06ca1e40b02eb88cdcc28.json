{"remainingRequest":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js!/var/www/html/utter/node_modules/babel-loader/lib/index.js!/var/www/html/utter/client/src/components/Dictionary/index.js","dependencies":[{"path":"/var/www/html/utter/client/src/components/Dictionary/index.js","mtime":1516906015694},{"path":"/var/www/html/utter/.babelrc","mtime":1518822814526},{"path":"/var/www/html/utter/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js","mtime":1510167650000},{"path":"/var/www/html/utter/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _components = require('../../components');\n\nvar _styledComponents = require('styled-components');\n\nvar _styledComponents2 = _interopRequireDefault(_styledComponents);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Container = /*#__PURE__*/_styledComponents2.default.div.withConfig({\n  displayName: 'Dictionary__Container'\n})(['display:grid;grid-template-columns:', ';margin:0 auto;width:100%;@media(min-width:640px){grid-template-columns:', ';width:100%;}'], function (props) {\n  return props.gridtemplatecolumns;\n}, function (props) {\n  return props.gridtemplatecolumns640;\n});\n\nvar Dictionary = function (_Component) {\n  (0, _inherits3.default)(Dictionary, _Component);\n\n  function Dictionary() {\n    (0, _classCallCheck3.default)(this, Dictionary);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Dictionary.__proto__ || Object.getPrototypeOf(Dictionary)).call(this));\n\n    _this.renderChildren = _this.renderChildren.bind(_this);\n    return _this;\n  }\n\n  (0, _createClass3.default)(Dictionary, [{\n    key: 'renderChildren',\n    value: function renderChildren() {\n      return _react2.default.Children.map(this.props.children, function (child) {\n        return _react2.default.cloneElement(child, {\n          // alignitems: this.props.alignitems\n        });\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          height = _props.height,\n          term = _props.term,\n          definition = _props.definition,\n          media = _props.media,\n          name = _props.name,\n          overflowy = _props.overflowy,\n          gridbody = _props.gridbody,\n          gridbody640 = _props.gridbody640,\n          gridheader = _props.gridheader,\n          gridheader640 = _props.gridheader640;\n\n      var children = this.props.children;\n      return _react2.default.createElement(\n        Container,\n        null,\n        _react2.default.createElement(\n          _components.Grid,\n          {\n            gridtemplatecolumns: gridheader,\n            gridtemplatecolumns640: gridheader640,\n            gridautorows: '100px' },\n          _react2.default.createElement(\n            _components.Box,\n            {\n              alignitems: 'flex-start',\n              background: 'black',\n              color: 'white',\n              display: 'block',\n              fontsize: '1.5rem',\n              lineheight: '100px',\n              padding: '0 20px 0 20px',\n              textoverflow: 'ellipsis',\n              whitespace: 'nowrap',\n              width640: '100%',\n              minwidth640: '100%' },\n            term\n          ),\n          name ? _react2.default.createElement(\n            _components.Box,\n            {\n              alignitems: 'flex-start',\n              background: 'black',\n              color: 'white',\n              display: 'block',\n              fontsize: '1.5rem',\n              lineheight: '100px',\n              textoverflow: 'ellipsis',\n              whitespace: 'nowrap',\n              minwidth640: '100%' },\n            name\n          ) : null,\n          name ? _react2.default.createElement(\n            _components.Box,\n            {\n              alignitems: 'flex-start',\n              background: 'black',\n              color: 'white',\n              display: 'block',\n              fontsize: '1.5rem',\n              lineheight: '100px',\n              padding: '0 15px 0 5px',\n              textoverflow: 'ellipsis',\n              whitespace: 'nowrap',\n              minwidth640: '100%' },\n            definition\n          ) : _react2.default.createElement(\n            _components.Box,\n            {\n              alignitems: 'flex-start',\n              background: 'black',\n              color: 'white',\n              display: 'block',\n              fontsize: '1.5rem',\n              lineheight: '100px',\n              textoverflow: 'ellipsis',\n              whitespace: 'nowrap',\n              minwidth640: '100%' },\n            definition\n          ),\n          _react2.default.createElement(\n            _components.Box,\n            {\n              alignitems: 'flex-start',\n              background: 'black',\n              color: 'white',\n              display: 'block',\n              fontsize: '1.5rem',\n              lineheight: '100px',\n              textalign: 'center',\n              textoverflow: 'ellipsis',\n              whitespace: 'nowrap',\n              minwidth640: '100%' },\n            media\n          )\n        ),\n        _react2.default.createElement(\n          _components.Grid,\n          {\n            gridcolumngap: '15px',\n            gridtemplatecolumns: gridbody,\n            gridtemplatecolumns640: gridbody640,\n            gridautorows: '100px',\n            height: height,\n            overflowy: overflowy },\n          this.renderChildren()\n        )\n      );\n    }\n  }]);\n  return Dictionary;\n}(_react.Component);\n\nvar _default = Dictionary;\nexports.default = _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Container, 'Container', '/var/www/html/utter/client/src/components/Dictionary/index.js');\n\n  __REACT_HOT_LOADER__.register(Dictionary, 'Dictionary', '/var/www/html/utter/client/src/components/Dictionary/index.js');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/var/www/html/utter/client/src/components/Dictionary/index.js');\n}();\n\n;\n\n ;(function register() { /* react-hot-loader/webpack */ if (process.env.NODE_ENV !== 'production') { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : module.exports; /* eslint-enable camelcase, no-undef */ if (typeof webpackExports === 'function') { __REACT_HOT_LOADER__.register(webpackExports, 'module.exports', \"/var/www/html/utter/client/src/components/Dictionary/index.js\"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, \"/var/www/html/utter/client/src/components/Dictionary/index.js\"); } } })();","{\"version\":3,\"sources\":[\"/var/www/html/utter/client/src/components/Dictionary/index.js\"],\"names\":[\"Container\",\"div\",\"props\",\"gridtemplatecolumns\",\"gridtemplatecolumns640\",\"Dictionary\",\"renderChildren\",\"bind\",\"Children\",\"map\",\"children\",\"cloneElement\",\"child\",\"height\",\"term\",\"definition\",\"media\",\"name\",\"overflowy\",\"gridbody\",\"gridbody640\",\"gridheader\",\"gridheader640\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, {Component} from 'react'\\nimport {Box, Grid} from '../../components'\\nimport styled from 'styled-components'\\n\\nconst Container = styled.div`\\n  display: grid;\\n  grid-template-columns: ${props => props.gridtemplatecolumns}; \\n  margin: 0 auto;\\n  width: 100%;\\n\\n  @media(min-width: 640px) {\\n    grid-template-columns: ${props => props.gridtemplatecolumns640}; \\n    width: 100%;\\n  }\\n`\\n\\nclass Dictionary extends Component {\\n  constructor() {\\n    super()\\n    this.renderChildren = this.renderChildren.bind(this)\\n  }\\n\\n  renderChildren() {\\n    return React.Children.map(this.props.children, child => {\\n      return React.cloneElement(\\n        child,\\n        {\\n          // alignitems: this.props.alignitems\\n        }\\n      )\\n    })\\n  }\\n\\n  render() {\\n    const {\\n      height,\\n      term,\\n      definition,\\n      media,\\n      name,\\n      overflowy,\\n      gridbody,\\n      gridbody640,\\n      gridheader,\\n      gridheader640\\n    } = this.props\\n    const children = this.props.children\\n    return (\\n      <Container>\\n        <Grid\\n          gridtemplatecolumns={gridheader}\\n          gridtemplatecolumns640={gridheader640}\\n          gridautorows=\\\"100px\\\">\\n          <Box\\n            alignitems=\\\"flex-start\\\"\\n            background=\\\"black\\\"\\n            color=\\\"white\\\"\\n            display=\\\"block\\\"\\n            fontsize=\\\"1.5rem\\\"\\n            lineheight=\\\"100px\\\"\\n            padding=\\\"0 20px 0 20px\\\"\\n            textoverflow=\\\"ellipsis\\\"\\n            whitespace=\\\"nowrap\\\"\\n            width640=\\\"100%\\\"\\n            minwidth640=\\\"100%\\\">\\n            {term}\\n          </Box>\\n          {name\\n            ? <Box\\n                alignitems=\\\"flex-start\\\"\\n                background=\\\"black\\\"\\n                color=\\\"white\\\"\\n                display=\\\"block\\\"\\n                fontsize=\\\"1.5rem\\\"\\n                lineheight=\\\"100px\\\"\\n                textoverflow=\\\"ellipsis\\\"\\n                whitespace=\\\"nowrap\\\"\\n                minwidth640=\\\"100%\\\">\\n                {name}\\n              </Box>\\n            : null}\\n          {name\\n            ? <Box\\n                alignitems=\\\"flex-start\\\"\\n                background=\\\"black\\\"\\n                color=\\\"white\\\"\\n                display=\\\"block\\\"\\n                fontsize=\\\"1.5rem\\\"\\n                lineheight=\\\"100px\\\"\\n                padding=\\\"0 15px 0 5px\\\"\\n                textoverflow=\\\"ellipsis\\\"\\n                whitespace=\\\"nowrap\\\"\\n                minwidth640=\\\"100%\\\">\\n                {definition}\\n              </Box>\\n            : <Box\\n                alignitems=\\\"flex-start\\\"\\n                background=\\\"black\\\"\\n                color=\\\"white\\\"\\n                display=\\\"block\\\"\\n                fontsize=\\\"1.5rem\\\"\\n                lineheight=\\\"100px\\\"\\n                textoverflow=\\\"ellipsis\\\"\\n                whitespace=\\\"nowrap\\\"\\n                minwidth640=\\\"100%\\\">\\n                {definition}\\n              </Box>}\\n          <Box\\n            alignitems=\\\"flex-start\\\"\\n            background=\\\"black\\\"\\n            color=\\\"white\\\"\\n            display=\\\"block\\\"\\n            fontsize=\\\"1.5rem\\\"\\n            lineheight=\\\"100px\\\"\\n            textalign=\\\"center\\\"\\n            textoverflow=\\\"ellipsis\\\"\\n            whitespace=\\\"nowrap\\\"\\n            minwidth640=\\\"100%\\\">\\n            {media}\\n          </Box>\\n        </Grid>\\n        <Grid\\n          gridcolumngap=\\\"15px\\\"\\n          gridtemplatecolumns={gridbody}\\n          gridtemplatecolumns640={gridbody640}\\n          gridautorows=\\\"100px\\\"\\n          height={height}\\n          overflowy={overflowy}>\\n          {this.renderChildren()}\\n        </Grid>\\n      </Container>\\n    )\\n  }\\n}\\n\\nexport default Dictionary\\n\"]}"]}