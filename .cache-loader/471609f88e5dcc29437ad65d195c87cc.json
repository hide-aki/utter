{"remainingRequest":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js!/var/www/html/utter/node_modules/babel-loader/lib/index.js!/var/www/html/utter/client/src/services/socketio/reducer.js","dependencies":[{"path":"/var/www/html/utter/client/src/services/socketio/reducer.js","mtime":1517345659241},{"path":"/var/www/html/utter/.babelrc","mtime":1518822814526},{"path":"/var/www/html/utter/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js","mtime":1510167650000},{"path":"/var/www/html/utter/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _types = require('./types.js');\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = function _default() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { nsp: [] };\n  var action = arguments[1];\n\n  switch (action.type) {\n    case _types.CREATE_ROOM:\n      return (0, _extends3.default)({}, state, {\n        status: 'creating a room'\n      });\n    case _types.CREATE_ROOM_FAIL:\n      return (0, _extends3.default)({}, state, {\n        status: 'failed to create a room'\n      });\n    case _types.CREATE_ROOM_SUCCESS:\n      console.log('action: ', action);\n      return (0, _extends3.default)({}, state, {\n        created_room: action.result,\n        status: 'created a room'\n      });\n    case _types.DELETE_AUDIO_BLOB:\n      return (0, _extends3.default)({}, state, {\n        audioBlob: null\n      });\n    case _types.GET_ROOMS:\n      return (0, _extends3.default)({}, state, { status: 'getting a list of room' });\n    case _types.GET_ROOMS_FAIL:\n      return (0, _extends3.default)({}, state, { status: 'failed to get a list of rooms' });\n    case _types.GET_ROOMS_SUCCESS:\n      console.log('get rooms success: ', action);\n      return (0, _extends3.default)({}, state, {\n        status: 'got a list of rooms',\n        list: action.result\n      });\n    case _types.JOIN_ROOM:\n      return (0, _extends3.default)({}, state, {\n        status: 'joining a room'\n      });\n    case _types.JOIN_ROOM_FAIL:\n      return (0, _extends3.default)({}, state, {\n        status: 'failed to join a room'\n      });\n    case _types.JOIN_ROOM_SUCCESS:\n      return (0, _extends3.default)({}, state, {\n        status: 'joined a room',\n        joined_room: action.result\n      });\n    case _types.LOAD_AUDIO_BLOB:\n      return (0, _extends3.default)({}, state, {\n        audioBlob: action.blob\n      });\n    case _types.LOAD_SOCKET_NSPS:\n      return (0, _extends3.default)({}, state, { status: 'loading nsp socket pending' });\n    case _types.LOAD_SOCKET_NSPS_FAIL:\n      return (0, _extends3.default)({}, state, { status: 'loading nsp socket failed' });\n    case _types.LOAD_SOCKET_NSPS_SUCCESS:\n      var socket = action.result.socket;\n      return (0, _extends3.default)({}, state, {\n        socket: socket,\n        status: 'connected to a namespace'\n      });\n    case _types.NSP_CONNECT:\n      return (0, _extends3.default)({}, state, { status: 'nsp connecting' });\n    case _types.NSP_CONNECT_FAIL:\n      return (0, _extends3.default)({}, state, { status: 'failed to connect to nsp' });\n    case _types.NSP_CONNECT_SUCCESS:\n      return (0, _extends3.default)({}, state, {\n        status: 'connected to nsp'\n      });\n    case _types.RECEIVE_AUDIO_BLOB:\n      return (0, _extends3.default)({}, state, {\n        status: 'receiving audio file'\n      });\n    case _types.RECEIVE_AUDIO_BLOB_FAIL:\n      return (0, _extends3.default)({}, state, {\n        status: 'audio file failed to receive'\n      });\n    case _types.RECEIVE_AUDIO_BLOB_SUCCESS:\n      return (0, _extends3.default)({}, state, {\n        received_blob: action.result,\n        status: 'audio file received'\n      });\n    case _types.RECEIVE_MSG:\n      return (0, _extends3.default)({}, state, {\n        status: 'receiving msg'\n      });\n    case _types.RECEIVE_MSG_FAIL:\n      return (0, _extends3.default)({}, state, { status: 'msg failed to receive' });\n    case _types.RECEIVE_MSG_SUCCESS:\n      return (0, _extends3.default)({}, state, {\n        received_msg: action.result,\n        status: 'msg received'\n      });\n    case _types.RECEIVE_ROOM_META:\n      return (0, _extends3.default)({}, state, {\n        status: 'receiving room meta'\n      });\n    case _types.RECEIVE_ROOM_META_FAIL:\n      return (0, _extends3.default)({}, state, {\n        status: 'room meta failed to receive'\n      });\n    case _types.RECEIVE_ROOM_META_SUCCESS:\n      return (0, _extends3.default)({}, state, {\n        pictureSrc: action.result,\n        status: 'room meta received'\n      });\n    case _types.SEND_AUDIO_BLOB:\n      return (0, _extends3.default)({}, state, {\n        status: 'sending audio file'\n      });\n    case _types.SEND_AUDIO_BLOB_FAIL:\n      return (0, _extends3.default)({}, state, {\n        status: 'audio failed to send'\n      });\n    case _types.SEND_AUDIO_BLOB_SUCCESS:\n      return (0, _extends3.default)({}, state, {\n        blob: action.result,\n        status: 'audio file sent'\n      });\n    case _types.SEND_FILE:\n      return (0, _extends3.default)({}, state, { status: 'sending file' });\n    case _types.SEND_FILE_FAIL:\n      return (0, _extends3.default)({}, state, { status: 'file failed to send' });\n    case _types.SEND_FILE_SUCCESS:\n      return (0, _extends3.default)({}, state, { status: 'file sent' });\n    case _types.SEND_MSG:\n      return (0, _extends3.default)({}, state, { status: 'sending msg' });\n    case _types.SEND_MSG_FAIL:\n      return (0, _extends3.default)({}, state, { status: 'msg failed to send' });\n    case _types.SEND_MSG_SUCCESS:\n      return (0, _extends3.default)({}, state, {\n        msg: action.result,\n        status: 'msg sent'\n      });\n    case _types.SEND_ROOM_META:\n      return (0, _extends3.default)({}, state, { status: 'sending room meta' });\n    case _types.SEND_ROOM_META_FAIL:\n      return (0, _extends3.default)({}, state, { status: 'sending room meta failed to send' });\n    case _types.SEND_ROOM_META_SUCCESS:\n      return (0, _extends3.default)({}, state, {\n        status: 'room meta sent'\n      });\n    default:\n      return state;\n  }\n};\n\nexports.default = _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/var/www/html/utter/client/src/services/socketio/reducer.js');\n}();\n\n;\n\n ;(function register() { /* react-hot-loader/webpack */ if (process.env.NODE_ENV !== 'production') { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : module.exports; /* eslint-enable camelcase, no-undef */ if (typeof webpackExports === 'function') { __REACT_HOT_LOADER__.register(webpackExports, 'module.exports', \"/var/www/html/utter/client/src/services/socketio/reducer.js\"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, \"/var/www/html/utter/client/src/services/socketio/reducer.js\"); } } })();","{\"version\":3,\"sources\":[\"/var/www/html/utter/client/src/services/socketio/reducer.js\"],\"names\":[\"state\",\"nsp\",\"action\",\"type\",\"status\",\"console\",\"log\",\"created_room\",\"result\",\"audioBlob\",\"list\",\"joined_room\",\"blob\",\"socket\",\"received_blob\",\"received_msg\",\"pictureSrc\",\"msg\"],\"mappings\":\"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\",\"sourcesContent\":[\"import {\\n  CREATE_ROOM,\\n  CREATE_ROOM_FAIL,\\n  CREATE_ROOM_SUCCESS,\\n  DELETE_AUDIO_BLOB,\\n  GET_ROOMS,\\n  GET_ROOMS_FAIL,\\n  GET_ROOMS_SUCCESS,\\n  JOIN_ROOM,\\n  JOIN_ROOM_FAIL,\\n  JOIN_ROOM_SUCCESS,\\n  LOAD_AUDIO_BLOB,\\n  LOAD_SOCKET_NSPS,\\n  LOAD_SOCKET_NSPS_SUCCESS,\\n  LOAD_SOCKET_NSPS_FAIL,\\n  RECEIVE_AUDIO_BLOB,\\n  RECEIVE_AUDIO_BLOB_FAIL,\\n  RECEIVE_AUDIO_BLOB_SUCCESS,\\n  RECEIVE_MSG,\\n  RECEIVE_MSG_FAIL,\\n  RECEIVE_MSG_SUCCESS,\\n  RECEIVE_ROOM_META,\\n  RECEIVE_ROOM_META_FAIL,\\n  RECEIVE_ROOM_META_SUCCESS,\\n  SEND_AUDIO_BLOB,\\n  SEND_AUDIO_BLOB_FAIL,\\n  SEND_AUDIO_BLOB_SUCCESS,\\n  SEND_FILE,\\n  SEND_FILE_FAIL,\\n  SEND_FILE_SUCCESS,\\n  SEND_MSG,\\n  SEND_MSG_SUCCESS,\\n  SEND_MSG_FAIL,\\n  SEND_ROOM_META,\\n  SEND_ROOM_META_FAIL,\\n  SEND_ROOM_META_SUCCESS,\\n  NSP_CONNECT,\\n  NSP_CONNECT_FAIL,\\n  NSP_CONNECT_SUCCESS\\n} from './types.js'\\n\\nimport _ from 'lodash'\\n\\nexport default (state = {nsp: []}, action) => {\\n  switch (action.type) {\\n    case CREATE_ROOM:\\n      return {\\n        ...state,\\n        status: 'creating a room'\\n      }\\n    case CREATE_ROOM_FAIL:\\n      return {\\n        ...state,\\n        status: 'failed to create a room'\\n      }\\n    case CREATE_ROOM_SUCCESS:\\n      console.log('action: ', action)\\n      return {\\n        ...state,\\n        created_room: action.result,\\n        status: 'created a room'\\n      }\\n    case DELETE_AUDIO_BLOB:\\n      return {\\n        ...state,\\n        audioBlob: null\\n      }\\n    case GET_ROOMS:\\n      return {...state, status: 'getting a list of room'}\\n    case GET_ROOMS_FAIL:\\n      return {...state, status: 'failed to get a list of rooms'}\\n    case GET_ROOMS_SUCCESS:\\n      console.log('get rooms success: ', action)\\n      return {\\n        ...state,\\n        status: 'got a list of rooms',\\n        list: action.result\\n      }\\n    case JOIN_ROOM:\\n      return {\\n        ...state,\\n        status: 'joining a room'\\n      }\\n    case JOIN_ROOM_FAIL:\\n      return {\\n        ...state,\\n        status: 'failed to join a room'\\n      }\\n    case JOIN_ROOM_SUCCESS:\\n      return {\\n        ...state,\\n        status: 'joined a room',\\n        joined_room: action.result\\n      }\\n    case LOAD_AUDIO_BLOB:\\n      return {\\n        ...state,\\n        audioBlob: action.blob\\n      }\\n    case LOAD_SOCKET_NSPS:\\n      return {...state, status: 'loading nsp socket pending'}\\n    case LOAD_SOCKET_NSPS_FAIL:\\n      return {...state, status: 'loading nsp socket failed'}\\n    case LOAD_SOCKET_NSPS_SUCCESS:\\n      const socket = action.result.socket\\n      return {\\n        ...state,\\n        socket,\\n        status: 'connected to a namespace'\\n      }\\n    case NSP_CONNECT:\\n      return {...state, status: 'nsp connecting'}\\n    case NSP_CONNECT_FAIL:\\n      return {...state, status: 'failed to connect to nsp'}\\n    case NSP_CONNECT_SUCCESS:\\n      return {\\n        ...state,\\n        status: 'connected to nsp'\\n      }\\n    case RECEIVE_AUDIO_BLOB:\\n      return {\\n        ...state,\\n        status: 'receiving audio file'\\n      }\\n    case RECEIVE_AUDIO_BLOB_FAIL:\\n      return {\\n        ...state,\\n        status: 'audio file failed to receive'\\n      }\\n    case RECEIVE_AUDIO_BLOB_SUCCESS:\\n      return {\\n        ...state,\\n        received_blob: action.result,\\n        status: 'audio file received'\\n      }\\n    case RECEIVE_MSG:\\n      return {\\n        ...state,\\n        status: 'receiving msg'\\n      }\\n    case RECEIVE_MSG_FAIL:\\n      return {...state, status: 'msg failed to receive'}\\n    case RECEIVE_MSG_SUCCESS:\\n      return {\\n        ...state,\\n        received_msg: action.result,\\n        status: 'msg received'\\n      }\\n    case RECEIVE_ROOM_META:\\n      return {\\n        ...state,\\n        status: 'receiving room meta'\\n      }\\n    case RECEIVE_ROOM_META_FAIL:\\n      return {\\n        ...state,\\n        status: 'room meta failed to receive'\\n      }\\n    case RECEIVE_ROOM_META_SUCCESS:\\n      return {\\n        ...state,\\n        pictureSrc: action.result,\\n        status: 'room meta received'\\n      }\\n    case SEND_AUDIO_BLOB:\\n      return {\\n        ...state,\\n        status: 'sending audio file'\\n      }\\n    case SEND_AUDIO_BLOB_FAIL:\\n      return {\\n        ...state,\\n        status: 'audio failed to send'\\n      }\\n    case SEND_AUDIO_BLOB_SUCCESS:\\n      return {\\n        ...state,\\n        blob: action.result,\\n        status: 'audio file sent'\\n      }\\n    case SEND_FILE:\\n      return {...state, status: 'sending file'}\\n    case SEND_FILE_FAIL:\\n      return {...state, status: 'file failed to send'}\\n    case SEND_FILE_SUCCESS:\\n      return {...state, status: 'file sent'}\\n    case SEND_MSG:\\n      return {...state, status: 'sending msg'}\\n    case SEND_MSG_FAIL:\\n      return {...state, status: 'msg failed to send'}\\n    case SEND_MSG_SUCCESS:\\n      return {\\n        ...state,\\n        msg: action.result,\\n        status: 'msg sent'\\n      }\\n    case SEND_ROOM_META:\\n      return {...state, status: 'sending room meta'}\\n    case SEND_ROOM_META_FAIL:\\n      return {...state, status: 'sending room meta failed to send'}\\n    case SEND_ROOM_META_SUCCESS:\\n      return {\\n        ...state,\\n        status: 'room meta sent'\\n      }\\n    default:\\n      return state\\n  }\\n}\\n\"]}"]}