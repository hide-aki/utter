{"remainingRequest":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js!/var/www/html/utter/node_modules/babel-loader/lib/index.js!/var/www/html/utter/client/src/containers/Pictures/index.js","dependencies":[{"path":"/var/www/html/utter/client/src/containers/Pictures/index.js","mtime":1516039860886},{"path":"/var/www/html/utter/.babelrc","mtime":1518822814526},{"path":"/var/www/html/utter/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js","mtime":1510167650000},{"path":"/var/www/html/utter/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = require('react-redux');\n\nvar _redux = require('redux');\n\nvar _styledComponents = require('styled-components');\n\nvar _styledComponents2 = _interopRequireDefault(_styledComponents);\n\nvar _secrets = require('../../config/secrets.js');\n\nvar _secrets2 = _interopRequireDefault(_secrets);\n\nvar _superagent = require('superagent');\n\nvar _superagent2 = _interopRequireDefault(_superagent);\n\nvar _randomGenerator = require('../../utils/randomGenerator.js');\n\nvar _randomGenerator2 = _interopRequireDefault(_randomGenerator);\n\nvar _PicturesMgr = require('../../utils/PicturesMgr.js');\n\nvar _PicturesMgr2 = _interopRequireDefault(_PicturesMgr);\n\nvar _components = require('../../components');\n\nvar _play = require('../../assets/images/play.svg');\n\nvar _play2 = _interopRequireDefault(_play);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _speech = require('../../services/speech');\n\nvar _actions = require('./actions.js');\n\nvar _actions2 = require('../ChatPanel/actions.js');\n\nvar _actions3 = require('../../services/socketio/actions.js');\n\nvar _secrets3 = require('../../../src/config/secrets.js');\n\nvar _secrets4 = _interopRequireDefault(_secrets3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar cdn = _secrets4.default.cdn;\n// import {loadQuestion} from '../../containers/Challenge/actions.js'\n\n// audio\n\n\nvar Wrap = /*#__PURE__*/_styledComponents2.default.section.withConfig({\n  displayName: 'Pictures__Wrap'\n})(['align-items:', ';background:', ';box-sizing:border-box;display:', ';flex-direction:', ';height:', ';li{font-size:3rem;}justify-content:', ';margin:', ';max-width:', ';opacity:', ';padding:', ';position:', ';width:', ';@media(min-width:768px){}@media(min-width:960px){flex-direction:', ';max-width:960px;}'], function (props) {\n  return props.alignitems;\n}, function (props) {\n  return props.background;\n}, function (props) {\n  return props.display;\n}, function (props) {\n  return props.flexdirection;\n}, function (props) {\n  return props.height;\n}, function (props) {\n  return props.justyifycontent;\n}, function (props) {\n  return props.margin;\n}, function (props) {\n  return props.maxwidth;\n}, function (props) {\n  return props.opacity;\n}, function (props) {\n  return props.padding;\n}, function (props) {\n  return props.position;\n}, function (props) {\n  return props.width;\n}, function (props) {\n  return props.flexdirection960;\n});\nWrap.defaultProps = {\n  alignitems: 'center',\n  background: 'transparent',\n  color: 'black',\n  display: 'flex',\n  flexdirection: 'column',\n  justifycontent: 'center',\n  position: 'relative',\n  width: '100%'\n};\n\nvar Pictures = function (_Component) {\n  (0, _inherits3.default)(Pictures, _Component);\n\n  function Pictures(props) {\n    (0, _classCallCheck3.default)(this, Pictures);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Pictures.__proto__ || Object.getPrototypeOf(Pictures)).call(this, props));\n\n    _this.roomLevel = _this.props.roomReducer.roomLevel;\n    _this.changePicture = _this.changePicture.bind(_this);\n    _this.onPlay = _this.onPlay.bind(_this);\n    return _this;\n  }\n\n  (0, _createClass3.default)(Pictures, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // MOVED LOGIC TO ROOMCREATOR\n      // const roomLevel = this.props.roomReducer.roomLevel\n      // const roomLanguage = this.props.roomReducer.language\n      // const listObj = require(`../../data/${roomLanguage}/level${roomLevel}/query.js`)\n      // this.originalWordList = listObj.default\n      // this.props.actions.loadOriginalWordList(this.originalWordList)\n      // Put list in redux\n      // this.props.actions.loadWordList(listObj.default)\n    }\n  }, {\n    key: 'onPlay',\n    value: function onPlay(e) {\n      e.preventDefault();\n      document.getElementById(e.target.name).play();\n    }\n  }, {\n    key: 'changePicture',\n    value: function changePicture() {\n      var _this2 = this;\n\n      // load challenge\n      var lang = this.props.roomReducer.language;\n      var roomLevel = this.props.roomReducer.roomLevel;\n      var questions = require('../../data/' + lang + '/level' + roomLevel + '/questions').default.questions;\n      var questions = new _randomGenerator2.default(questions);\n      var question = questions.word;\n      this.props.actions.loadQuestion(question);\n\n      var list = this.props.pictureReducer.wordList;\n      var review = this.props.pictureReducer.reviewList;\n      var randList = new _randomGenerator2.default(list);\n      var randObj = randList.word;\n      this.props.actions.loadAudioUrl(randObj.audioUrl);\n      var updatedList = this.props.pictureReducer.updatedList;\n\n      // get room language\n      var language = this.props.roomReducer.language;\n      var translated = randObj.word;\n      this.props.actions.sendTranslated(translated);\n\n      var query = randObj.word;\n      var romanizedQuery = randObj.roman;\n      this.props.actions.sendRomanized(romanizedQuery);\n\n      this.props.actions.loadQuery(query);\n\n      if (this.props.roomReducer.listType === 'words') {\n        _superagent2.default.get('http://pixabay.com/api').query({\n          key: _secrets2.default.pixabay,\n          q: query,\n          safesearch: true,\n          image_type: 'photo'\n        }).set('Accept', 'application/json').end(function (err, res) {\n          if (err) {\n            console.log('error : ' + err);\n            return;\n          }\n\n          var max = res.body.hits.length - 1;\n          var min = 0;\n\n          var getRandIntInclusive = function getRandIntInclusive(min, max) {\n            min = Math.ceil(min);\n            max = Math.floor(max);\n            return Math.floor(Math.random() * (max - min + 1)) + min; // The maximum is inclusive and the minimum is inclusive\n          };\n\n          var num = getRandIntInclusive(min, max);\n\n          var results = res.body.hits[num].previewURL;\n          _this2.props.actions.loadQuery(query);\n\n          // update local picture\n          _this2.props.actions.updatePicture(results);\n\n          // Send socket room info\n          _this2.props.actions.sendRoomMeta({\n            question: question,\n            room: _this2.props.socketReducer.created_room,\n            listType: _this2.props.roomReducer.listType,\n            translation: translated,\n            query: _this2.props.pictureReducer.query,\n            src: results\n          });\n\n          // Remove query from wordList and review\n          // let updatedList = _.omit(list, query)\n          var updatedList = list.filter(function (o) {\n            return o.word !== query;\n          });\n          _this2.props.actions.updateWordList(updatedList);\n\n          //TODO: review feature\n          // if (review) {\n          //   let updatedReviewList = _.omit(review, query)\n          //   this.props.actions.updateReviewList(updatedReviewList)\n          // }\n        });\n      } else {\n        // Remove query from wordList and review\n        var _updatedList = list.filter(function (o) {\n          return o.word !== query;\n        });\n        this.props.actions.updateWordList(_updatedList);\n\n        if (list.length === 1 && (_lodash2.default.isEmpty(review) || !review)) {\n          alert('YOU JUST FINISHED ALL OF YOUR WORDS.  ALL WORD LISTS WILL NOW BE RESET.');\n          this.props.actions.updateWordList(this.props.pictureReducer.originalList);\n        } else if (list.length === 1) {\n          alert(\"YOU HAVE JUST FINISHED YOUR WORD LIST.  YOU WILL NOW REVIEW WORDS YOU DON'T KNOW.\");\n          // TODO: review cont.\n          // this.props.actions.updateWordList(this.props.pictureReducer.reviewList)\n        }\n\n        //TODO: review cont.\n        // if (review) {\n        //   console.log('review: ', review)\n        //   let updatedReviewList = review.filter(o => o.word !== query)\n        //   this.props.actions.updateReviewList(updatedReviewList)\n        // }\n\n        this.props.actions.sendRoomMeta({\n          question: question,\n          room: this.props.socketReducer.created_room,\n          listType: this.props.roomReducer.listType,\n          translation: translated\n          // query: this.props.pictureReducer.query\n        });\n      }\n\n      // speechStart()\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var picture = _react2.default.createElement(_components.Ad, null);\n      if (this.props.roomReducer.listType === 'words') {\n        picture = _react2.default.createElement(_components.Img, { src: this.props.pictureReducer.pictureSrc });\n      } else if (this.props.roomReducer.listType === 'letters') {\n        picture = _react2.default.createElement(\n          _components.Text,\n          { fontsize: '7rem' },\n          this.props.pictureReducer.translation\n        );\n      }\n\n      var wordSound = this.props.query;\n      var language = this.props.roomReducer.language;\n      if (typeof wordSound !== 'undefined') {\n        var audioUrl = this.props.pictureReducer.audioUrl;\n        var wordAudio = audioUrl;\n      } else {\n        var wordAudio = '';\n      }\n      if (this.props.roomReducer.creator) {\n        //show controls\n        var controls = _react2.default.createElement(\n          _components.Box,\n          null,\n          _react2.default.createElement(\n            _components.Button,\n            { color: 'black', margin: '20px', onClick: this.changePicture },\n            'Change Picture'\n          ),\n          _react2.default.createElement('audio', { id: this.props.query, src: '' + (cdn + wordAudio) }),\n          _react2.default.createElement(_components.Img, {\n            display: 'inline',\n            name: this.props.query,\n            onClick: this.onPlay,\n            cursor: 'pointer',\n            src: '' + _play2.default,\n            verticalalign: 'middle',\n            width: '30px',\n            height: '40px'\n          }),\n          _react2.default.createElement(\n            _components.Box,\n            {\n              margin: '20px',\n              width: '400px',\n              flexdirection: 'row',\n              justifycontent: 'space-around' },\n            _react2.default.createElement(\n              _components.Text,\n              { fontsize: '1.2rem', color: '#aaa' },\n              'query: ',\n              this.props.query\n            ),\n            _react2.default.createElement(\n              _components.Text,\n              { fontsize: '1.2rem', color: '#aaa' },\n              'romanized: ',\n              this.props.romanized\n            ),\n            _react2.default.createElement(\n              _components.Text,\n              { fontsize: '1.2rem', color: '#aaa' },\n              'translation: ',\n              this.props.pictureReducer.translation\n            )\n          )\n        );\n      } else {\n        // no controls\n        var controls = _react2.default.createElement('div', null);\n      }\n\n      return _react2.default.createElement(\n        Wrap,\n        null,\n        _react2.default.createElement(\n          _components.Box,\n          { minwidth: '640px', minheight: '340px', margin: '20px' },\n          picture\n        ),\n        controls\n      );\n    }\n  }]);\n  return Pictures;\n}(_react.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    pictureReducer: state.pictureReducer,\n    message: state.speakerReducer,\n    query: state.pictureReducer.query,\n    romanized: state.pictureReducer.romanized,\n    roomReducer: state.roomReducer,\n    socketReducer: state.socketReducer\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    actions: (0, _redux.bindActionCreators)({\n      loadAudioUrl: _actions.loadAudioUrl,\n      loadQuery: _actions.loadQuery,\n      loadQuestion: _actions.loadQuestion,\n      // loadOriginalWordList,\n      // loadWordList,\n      sendRomanized: _actions.sendRomanized,\n      sendRoomMeta: _actions3.sendRoomMeta,\n      sendTranslated: _actions.sendTranslated,\n      setFinalTranscript: _actions2.setFinalTranscript,\n      setInterimScript: _actions2.setInterimScript,\n      updatePicture: _actions.updatePicture,\n      updateWordList: _actions.updateWordList,\n      updateReviewList: _actions.updateReviewList\n    }, dispatch)\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Pictures);\n\nexports.default = _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(cdn, 'cdn', '/var/www/html/utter/client/src/containers/Pictures/index.js');\n\n  __REACT_HOT_LOADER__.register(Wrap, 'Wrap', '/var/www/html/utter/client/src/containers/Pictures/index.js');\n\n  __REACT_HOT_LOADER__.register(Pictures, 'Pictures', '/var/www/html/utter/client/src/containers/Pictures/index.js');\n\n  __REACT_HOT_LOADER__.register(mapStateToProps, 'mapStateToProps', '/var/www/html/utter/client/src/containers/Pictures/index.js');\n\n  __REACT_HOT_LOADER__.register(mapDispatchToProps, 'mapDispatchToProps', '/var/www/html/utter/client/src/containers/Pictures/index.js');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/var/www/html/utter/client/src/containers/Pictures/index.js');\n}();\n\n;\n\n ;(function register() { /* react-hot-loader/webpack */ if (process.env.NODE_ENV !== 'production') { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : module.exports; /* eslint-enable camelcase, no-undef */ if (typeof webpackExports === 'function') { __REACT_HOT_LOADER__.register(webpackExports, 'module.exports', \"/var/www/html/utter/client/src/containers/Pictures/index.js\"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, \"/var/www/html/utter/client/src/containers/Pictures/index.js\"); } } })();","{\"version\":3,\"sources\":[\"/var/www/html/utter/client/src/containers/Pictures/index.js\"],\"names\":[\"cdn\",\"Wrap\",\"section\",\"props\",\"alignitems\",\"background\",\"display\",\"flexdirection\",\"height\",\"justyifycontent\",\"margin\",\"maxwidth\",\"opacity\",\"padding\",\"position\",\"width\",\"flexdirection960\",\"defaultProps\",\"color\",\"justifycontent\",\"Pictures\",\"roomLevel\",\"roomReducer\",\"changePicture\",\"bind\",\"onPlay\",\"e\",\"preventDefault\",\"document\",\"getElementById\",\"target\",\"name\",\"play\",\"lang\",\"language\",\"questions\",\"require\",\"default\",\"question\",\"word\",\"actions\",\"loadQuestion\",\"list\",\"pictureReducer\",\"wordList\",\"review\",\"reviewList\",\"randList\",\"randObj\",\"loadAudioUrl\",\"audioUrl\",\"updatedList\",\"translated\",\"sendTranslated\",\"query\",\"romanizedQuery\",\"roman\",\"sendRomanized\",\"loadQuery\",\"listType\",\"get\",\"key\",\"pixabay\",\"q\",\"safesearch\",\"image_type\",\"set\",\"end\",\"err\",\"res\",\"console\",\"log\",\"max\",\"body\",\"hits\",\"length\",\"min\",\"getRandIntInclusive\",\"Math\",\"ceil\",\"floor\",\"random\",\"num\",\"results\",\"previewURL\",\"updatePicture\",\"sendRoomMeta\",\"room\",\"socketReducer\",\"created_room\",\"translation\",\"src\",\"filter\",\"o\",\"updateWordList\",\"isEmpty\",\"alert\",\"originalList\",\"picture\",\"pictureSrc\",\"wordSound\",\"wordAudio\",\"creator\",\"controls\",\"romanized\",\"mapStateToProps\",\"state\",\"message\",\"speakerReducer\",\"mapDispatchToProps\",\"setFinalTranscript\",\"setInterimScript\",\"updateReviewList\",\"dispatch\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, {Component} from 'react'\\nimport {connect} from 'react-redux'\\nimport {bindActionCreators} from 'redux'\\nimport styled from 'styled-components'\\nimport secrets from '../../config/secrets.js'\\nimport superagent from 'superagent'\\nimport Rand from '../../utils/randomGenerator.js'\\nimport PicturesMgr from '../../utils/PicturesMgr.js'\\nimport {Ad, Box, Button, Img, Text} from '../../components'\\nimport PlayImg from '../../assets/images/play.svg'\\nimport _ from 'lodash'\\nimport {speechStart} from '../../services/speech'\\n\\nimport {\\n  loadAudioUrl,\\n  loadQuery,\\n  loadQuestion,\\n  // loadOriginalWordList,\\n  // loadWordList,\\n  updatePicture,\\n  updateWordList,\\n  updateReviewList,\\n  sendRomanized,\\n  sendTranslated\\n} from './actions.js'\\n\\nimport {setInterimScript, setFinalTranscript} from '../ChatPanel/actions.js'\\nimport {sendRoomMeta} from '../../services/socketio/actions.js'\\n// import {loadQuestion} from '../../containers/Challenge/actions.js'\\n\\n// audio\\nimport cdnUrl from '../../../src/config/secrets.js'\\nconst cdn = cdnUrl.cdn\\n\\nconst Wrap = styled.section`\\n  align-items: ${props => props.alignitems};\\n  background: ${props => props.background};\\n  box-sizing: border-box;\\n  display: ${props => props.display};\\n  flex-direction: ${props => props.flexdirection};\\n  height: ${props => props.height};\\n  li {\\n    font-size: 3rem;\\n  }\\n  justify-content: ${props => props.justyifycontent};\\n  margin: ${props => props.margin};\\n  max-width: ${props => props.maxwidth};\\n  opacity: ${props => props.opacity};\\n  padding: ${props => props.padding};\\n  position: ${props => props.position};\\n  width: ${props => props.width};\\n\\n  @media(min-width: 768px) {\\n  }\\n\\n  @media(min-width: 960px) {\\n    flex-direction: ${props => props.flexdirection960};\\n    max-width: 960px;\\n  }\\n`\\nWrap.defaultProps = {\\n  alignitems: 'center',\\n  background: 'transparent',\\n  color: 'black',\\n  display: 'flex',\\n  flexdirection: 'column',\\n  justifycontent: 'center',\\n  position: 'relative',\\n  width: '100%'\\n}\\n\\nclass Pictures extends Component {\\n  constructor(props) {\\n    super(props)\\n\\n    this.roomLevel = this.props.roomReducer.roomLevel\\n    this.changePicture = this.changePicture.bind(this)\\n    this.onPlay = this.onPlay.bind(this)\\n  }\\n\\n  componentDidMount() {\\n    // MOVED LOGIC TO ROOMCREATOR\\n    // const roomLevel = this.props.roomReducer.roomLevel\\n    // const roomLanguage = this.props.roomReducer.language\\n    // const listObj = require(`../../data/${roomLanguage}/level${roomLevel}/query.js`)\\n    // this.originalWordList = listObj.default\\n    // this.props.actions.loadOriginalWordList(this.originalWordList)\\n    // Put list in redux\\n    // this.props.actions.loadWordList(listObj.default)\\n  }\\n\\n  onPlay(e) {\\n    e.preventDefault()\\n    document.getElementById(e.target.name).play()\\n  }\\n\\n  changePicture() {\\n    // load challenge\\n    const lang = this.props.roomReducer.language\\n    const roomLevel = this.props.roomReducer.roomLevel\\n    var questions = require(`../../data/${lang}/level${roomLevel}/questions`)\\n      .default.questions\\n    var questions = new Rand(questions)\\n    const question = questions.word\\n    this.props.actions.loadQuestion(question)\\n\\n    let list = this.props.pictureReducer.wordList\\n    const review = this.props.pictureReducer.reviewList\\n    let randList = new Rand(list)\\n    let randObj = randList.word\\n    this.props.actions.loadAudioUrl(randObj.audioUrl)\\n    let updatedList = this.props.pictureReducer.updatedList\\n\\n    // get room language\\n    const language = this.props.roomReducer.language\\n    let translated = randObj.word\\n    this.props.actions.sendTranslated(translated)\\n\\n    let query = randObj.word\\n    let romanizedQuery = randObj.roman\\n    this.props.actions.sendRomanized(romanizedQuery)\\n\\n    this.props.actions.loadQuery(query)\\n\\n    if (this.props.roomReducer.listType === 'words') {\\n      superagent\\n        .get('http://pixabay.com/api')\\n        .query({\\n          key: secrets.pixabay,\\n          q: query,\\n          safesearch: true,\\n          image_type: 'photo'\\n        })\\n        .set('Accept', 'application/json')\\n        .end((err, res) => {\\n          if (err) {\\n            console.log('error : ' + err)\\n            return\\n          }\\n\\n          const max = res.body.hits.length - 1\\n          const min = 0\\n\\n          const getRandIntInclusive = (min, max) => {\\n            min = Math.ceil(min)\\n            max = Math.floor(max)\\n            return Math.floor(Math.random() * (max - min + 1)) + min // The maximum is inclusive and the minimum is inclusive\\n          }\\n\\n          let num = getRandIntInclusive(min, max)\\n\\n          const results = res.body.hits[num].previewURL\\n          this.props.actions.loadQuery(query)\\n\\n          // update local picture\\n          this.props.actions.updatePicture(results)\\n\\n          // Send socket room info\\n          this.props.actions.sendRoomMeta({\\n            question,\\n            room: this.props.socketReducer.created_room,\\n            listType: this.props.roomReducer.listType,\\n            translation: translated,\\n            query: this.props.pictureReducer.query,\\n            src: results\\n          })\\n\\n          // Remove query from wordList and review\\n          // let updatedList = _.omit(list, query)\\n          let updatedList = list.filter(o => o.word !== query)\\n          this.props.actions.updateWordList(updatedList)\\n\\n          //TODO: review feature\\n          // if (review) {\\n          //   let updatedReviewList = _.omit(review, query)\\n          //   this.props.actions.updateReviewList(updatedReviewList)\\n          // }\\n        })\\n    } else {\\n      // Remove query from wordList and review\\n      let updatedList = list.filter(o => o.word !== query)\\n      this.props.actions.updateWordList(updatedList)\\n\\n      if (list.length === 1 && (_.isEmpty(review) || !review)) {\\n        alert(\\n          'YOU JUST FINISHED ALL OF YOUR WORDS.  ALL WORD LISTS WILL NOW BE RESET.'\\n        )\\n        this.props.actions.updateWordList(\\n          this.props.pictureReducer.originalList\\n        )\\n      } else if (list.length === 1) {\\n        alert(\\n          \\\"YOU HAVE JUST FINISHED YOUR WORD LIST.  YOU WILL NOW REVIEW WORDS YOU DON'T KNOW.\\\"\\n        )\\n        // TODO: review cont.\\n        // this.props.actions.updateWordList(this.props.pictureReducer.reviewList)\\n      }\\n\\n      //TODO: review cont.\\n      // if (review) {\\n      //   console.log('review: ', review)\\n      //   let updatedReviewList = review.filter(o => o.word !== query)\\n      //   this.props.actions.updateReviewList(updatedReviewList)\\n      // }\\n\\n      this.props.actions.sendRoomMeta({\\n        question,\\n        room: this.props.socketReducer.created_room,\\n        listType: this.props.roomReducer.listType,\\n        translation: translated\\n        // query: this.props.pictureReducer.query\\n      })\\n    }\\n\\n    // speechStart()\\n  }\\n\\n  render() {\\n    var picture = <Ad />\\n    if (this.props.roomReducer.listType === 'words') {\\n      picture = <Img src={this.props.pictureReducer.pictureSrc} />\\n    } else if (this.props.roomReducer.listType === 'letters') {\\n      picture = (\\n        <Text fontsize=\\\"7rem\\\">{this.props.pictureReducer.translation}</Text>\\n      )\\n    }\\n\\n    const wordSound = this.props.query\\n    const language = this.props.roomReducer.language\\n    if (typeof wordSound !== 'undefined') {\\n      let audioUrl = this.props.pictureReducer.audioUrl\\n      var wordAudio = audioUrl\\n    } else {\\n      var wordAudio = ''\\n    }\\n    if (this.props.roomReducer.creator) {\\n      //show controls\\n      var controls = (\\n        <Box>\\n          <Button color=\\\"black\\\" margin=\\\"20px\\\" onClick={this.changePicture}>\\n            Change Picture\\n          </Button>\\n          <audio id={this.props.query} src={`${cdn + wordAudio}`} />\\n          <Img\\n            display=\\\"inline\\\"\\n            name={this.props.query}\\n            onClick={this.onPlay}\\n            cursor=\\\"pointer\\\"\\n            src={`${PlayImg}`}\\n            verticalalign=\\\"middle\\\"\\n            width=\\\"30px\\\"\\n            height=\\\"40px\\\"\\n          />\\n          <Box\\n            margin=\\\"20px\\\"\\n            width=\\\"400px\\\"\\n            flexdirection=\\\"row\\\"\\n            justifycontent=\\\"space-around\\\">\\n            <Text fontsize=\\\"1.2rem\\\" color=\\\"#aaa\\\">\\n              query: {this.props.query}\\n            </Text>\\n            <Text fontsize=\\\"1.2rem\\\" color=\\\"#aaa\\\">\\n              romanized: {this.props.romanized}\\n            </Text>\\n            <Text fontsize=\\\"1.2rem\\\" color=\\\"#aaa\\\">\\n              translation: {this.props.pictureReducer.translation}\\n            </Text>\\n          </Box>\\n        </Box>\\n      )\\n    } else {\\n      // no controls\\n      var controls = <div />\\n    }\\n\\n    return (\\n      <Wrap>\\n        <Box minwidth=\\\"640px\\\" minheight=\\\"340px\\\" margin=\\\"20px\\\">\\n          {picture}\\n        </Box>\\n        {controls}\\n      </Wrap>\\n    )\\n  }\\n}\\n\\nconst mapStateToProps = state => {\\n  return {\\n    pictureReducer: state.pictureReducer,\\n    message: state.speakerReducer,\\n    query: state.pictureReducer.query,\\n    romanized: state.pictureReducer.romanized,\\n    roomReducer: state.roomReducer,\\n    socketReducer: state.socketReducer\\n  }\\n}\\n\\nconst mapDispatchToProps = dispatch => {\\n  return {\\n    actions: bindActionCreators(\\n      {\\n        loadAudioUrl,\\n        loadQuery,\\n        loadQuestion,\\n        // loadOriginalWordList,\\n        // loadWordList,\\n        sendRomanized,\\n        sendRoomMeta,\\n        sendTranslated,\\n        setFinalTranscript,\\n        setInterimScript,\\n        updatePicture,\\n        updateWordList,\\n        updateReviewList\\n      },\\n      dispatch\\n    )\\n  }\\n}\\n\\nexport default connect(mapStateToProps, mapDispatchToProps)(Pictures)\\n\"]}"]}