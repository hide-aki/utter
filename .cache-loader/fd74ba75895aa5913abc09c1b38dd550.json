{"remainingRequest":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js!/var/www/html/utter/node_modules/babel-loader/lib/index.js!/var/www/html/utter/client/src/containers/Channels/actions.js","dependencies":[{"path":"/var/www/html/utter/client/src/containers/Channels/actions.js","mtime":1513097416682},{"path":"/var/www/html/utter/.babelrc","mtime":1518822814526},{"path":"/var/www/html/utter/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js","mtime":1510167650000},{"path":"/var/www/html/utter/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sortChannels = exports.setChannelSocket = exports.setChannelId = exports.loadChannels = exports.channelSelect = undefined;\n\nvar _types = require('./types.js');\n\nvar channelSelect = function channelSelect(id) {\n  return {\n    type: _types.CHANNEL_SELECT,\n    payload: new Promise(function (resolve, reject) {\n      resolve(id);\n    })\n  };\n};\n\nvar loadChannels = function loadChannels(channels) {\n  return {\n    type: _types.LOAD,\n    payload: new Promise(function (resolve, reject) {\n      resolve(channels);\n    })\n  };\n};\n\nvar setChannelId = function setChannelId(id) {\n  return {\n    type: _types.SET_CHANNEL_ID,\n    payload: new Promise(function (resolve, reject) {\n      resolve(id);\n    })\n  };\n};\n\nvar sortChannels = function sortChannels(channels) {\n  return {\n    type: _types.SORT,\n    payload: new Promise(function (resolve, reject) {\n      resolve(channels);\n    })\n  };\n};\n\nvar setChannelSocket = function setChannelSocket(socket) {\n  return {\n    type: _types.SET_CHANNEL_SOCKET,\n    payload: new Promise(function (resolve, reject) {\n      resolve(socket);\n    })\n  };\n};\n\nexports.channelSelect = channelSelect;\nexports.loadChannels = loadChannels;\nexports.setChannelId = setChannelId;\nexports.setChannelSocket = setChannelSocket;\nexports.sortChannels = sortChannels;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(channelSelect, 'channelSelect', '/var/www/html/utter/client/src/containers/Channels/actions.js');\n\n  __REACT_HOT_LOADER__.register(loadChannels, 'loadChannels', '/var/www/html/utter/client/src/containers/Channels/actions.js');\n\n  __REACT_HOT_LOADER__.register(setChannelId, 'setChannelId', '/var/www/html/utter/client/src/containers/Channels/actions.js');\n\n  __REACT_HOT_LOADER__.register(sortChannels, 'sortChannels', '/var/www/html/utter/client/src/containers/Channels/actions.js');\n\n  __REACT_HOT_LOADER__.register(setChannelSocket, 'setChannelSocket', '/var/www/html/utter/client/src/containers/Channels/actions.js');\n}();\n\n;\n\n ;(function register() { /* react-hot-loader/webpack */ if (process.env.NODE_ENV !== 'production') { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : module.exports; /* eslint-enable camelcase, no-undef */ if (typeof webpackExports === 'function') { __REACT_HOT_LOADER__.register(webpackExports, 'module.exports', \"/var/www/html/utter/client/src/containers/Channels/actions.js\"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, \"/var/www/html/utter/client/src/containers/Channels/actions.js\"); } } })();","{\"version\":3,\"sources\":[\"/var/www/html/utter/client/src/containers/Channels/actions.js\"],\"names\":[\"channelSelect\",\"type\",\"payload\",\"Promise\",\"resolve\",\"reject\",\"id\",\"loadChannels\",\"channels\",\"setChannelId\",\"sortChannels\",\"setChannelSocket\",\"socket\"],\"mappings\":\";;;;;;;AAAA;;AAQA,IAAMA,gBAAgB,SAAhBA,aAAgB,KAAM;AAC1B,SAAO;AACLC,+BADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQE,EAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMC,eAAe,SAAfA,YAAe,WAAY;AAC/B,SAAO;AACLN,qBADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQI,QAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMC,eAAe,SAAfA,YAAe,KAAM;AACzB,SAAO;AACLR,+BADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQE,EAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMI,eAAe,SAAfA,YAAe,WAAY;AAC/B,SAAO;AACLT,qBADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQI,QAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMG,mBAAmB,SAAnBA,gBAAmB,SAAU;AACjC,SAAO;AACLV,mCADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQQ,MAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;QAUEZ,a,GAAAA,a;QACAO,Y,GAAAA,Y;QACAE,Y,GAAAA,Y;QACAE,gB,GAAAA,gB;QACAD,Y,GAAAA,Y;;;;;;;;gCAlDIV,a;;gCASAO,Y;;gCASAE,Y;;gCASAC,Y;;gCASAC,gB\",\"sourcesContent\":[\"import {\\n  CHANNEL_SELECT,\\n  SET_CHANNEL_SOCKET,\\n  LOAD,\\n  SET_CHANNEL_ID,\\n  SORT\\n} from './types.js'\\n\\nconst channelSelect = id => {\\n  return {\\n    type: CHANNEL_SELECT,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(id)\\n    })\\n  }\\n}\\n\\nconst loadChannels = channels => {\\n  return {\\n    type: LOAD,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(channels)\\n    })\\n  }\\n}\\n\\nconst setChannelId = id => {\\n  return {\\n    type: SET_CHANNEL_ID,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(id)\\n    })\\n  }\\n}\\n\\nconst sortChannels = channels => {\\n  return {\\n    type: SORT,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(channels)\\n    })\\n  }\\n}\\n\\nconst setChannelSocket = socket => {\\n  return {\\n    type: SET_CHANNEL_SOCKET,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(socket)\\n    })\\n  }\\n}\\n\\nexport {\\n  channelSelect,\\n  loadChannels,\\n  setChannelId,\\n  setChannelSocket,\\n  sortChannels\\n}\\n\"]}"]}