{"remainingRequest":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js!/var/www/html/utter/node_modules/babel-loader/lib/index.js!/var/www/html/utter/client/src/layouts/Admin/Phrases/index.js","dependencies":[{"path":"/var/www/html/utter/client/src/layouts/Admin/Phrases/index.js","mtime":1517345659207},{"path":"/var/www/html/utter/.babelrc","mtime":1518822814526},{"path":"/var/www/html/utter/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js","mtime":1510167650000},{"path":"/var/www/html/utter/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends8 = require('babel-runtime/helpers/extends');\n\nvar _extends9 = _interopRequireDefault(_extends8);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _containers = require('../../../containers');\n\nvar _redux = require('redux');\n\nvar _reactRedux = require('react-redux');\n\nvar _styledComponents = require('styled-components');\n\nvar _styledComponents2 = _interopRequireDefault(_styledComponents);\n\nvar _components = require('../../../components');\n\nvar _actions = require('./actions.js');\n\nvar _actions2 = _interopRequireDefault(_actions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DictGrid = /*#__PURE__*/(0, _styledComponents2.default)(_components.Grid).withConfig({\n  displayName: 'Phrases__DictGrid'\n})(['grid-auto-rows:', ';grid-template-columns:', ';grid-template-rows:', ';max-height:', ';max-width:', ';overflow-x:', ';overflow-y:', ';width:', ';'], function (props) {\n  return props.gridautorows;\n}, function (props) {\n  return props.gridtemplatecolumns;\n}, function (props) {\n  return props.gridtemplaterows;\n}, function (props) {\n  return props.maxheight;\n}, function (props) {\n  return props.maxwidth;\n}, function (props) {\n  return props.overflowx;\n}, function (props) {\n  return props.overflowy;\n}, function (props) {\n  return props.width;\n});\n\nvar Delete = /*#__PURE__*/(0, _styledComponents2.default)(_components.Button).withConfig({\n  displayName: 'Phrases__Delete'\n})(['&:hover{background:red;}']);\n\nDictGrid.defaultProps = {\n  gridtemplatecolumns: '.05fr .05fr .05fr .05fr'\n};\n\nvar DictInput = /*#__PURE__*/(0, _styledComponents2.default)(_components.Input).withConfig({\n  displayName: 'Phrases__DictInput'\n})(['width:100%;']);\n\nvar DictBox = /*#__PURE__*/(0, _styledComponents2.default)(_components.Box).withConfig({\n  displayName: 'Phrases__DictBox'\n})(['display:flex;flex-direction:row;height:', ';padding:', ';'], function (props) {\n  return props.height;\n}, function (props) {\n  return props.padding;\n});\nDictBox.defaultProps = {\n  padding: '0 5px 0 0 '\n};\n\nvar Phrase = function (_Component) {\n  (0, _inherits3.default)(Phrase, _Component);\n\n  function Phrase(props) {\n    (0, _classCallCheck3.default)(this, Phrase);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Phrase.__proto__ || Object.getPrototypeOf(Phrase)).call(this, props));\n\n    _this.state = {\n      search: {\n        level: '1'\n      },\n      change: '',\n      deletePhrase: false,\n      counter: 0,\n      newPhrase: {\n        level: '1',\n        category: 'phrase',\n        englishInformalTranslation: {\n          phrases: [],\n          audioUrl: '/audio/english/'\n        },\n        englishFormalTranslation: {\n          phrases: [],\n          audioUrl: '/audio/english/'\n        },\n        spanishInformalTranslation: {\n          phrases: [],\n          audioUrl: '/audio/spanish/'\n        },\n        spanishFormalTranslation: {\n          phrases: [],\n          audioUrl: '/audio/spanish/'\n        },\n        frenchInformalTranslation: {\n          phrases: [],\n          audioUrl: '/audio/french/'\n        },\n        frenchFormalTranslation: {\n          phrases: [],\n          audioUrl: '/audio/french/'\n        }\n      },\n      updatedPhrase: {\n        level: '1',\n        category: 'phrase',\n        englishInformalTranslation: {\n          phrases: [],\n          audioUrl: '/audio/english/'\n        },\n        englishFormalTranslation: {\n          phrases: [],\n          audioUrl: '/audio/english/'\n        },\n        spanishInformalTranslation: {\n          phrases: [],\n          audioUrl: '/audio/spanish/'\n        },\n        spanishFormalTranslation: {\n          phrases: [],\n          audioUrl: '/audio/spanish/'\n        },\n        frenchInformalTranslation: {\n          phrases: [],\n          audioUrl: '/audio/french/'\n        },\n        frenchFormalTranslation: {\n          phrases: [],\n          audioUrl: '/audio/french/'\n        }\n      }\n    };\n\n    _this.thing = _this.thing.bind(_this);\n    _this.fetchPhrases = _this.fetchPhrases.bind(_this);\n    _this.createPhrase = _this.createPhrase.bind(_this);\n    _this.onAudioLangChg = _this.onAudioLangChg.bind(_this);\n    _this.onAudioCategoryChg = _this.onAudioCategoryChg.bind(_this);\n    _this.selectSearchChange = _this.selectSearchChange.bind(_this);\n    _this.selectnewPhraseChange = _this.selectnewPhraseChange.bind(_this);\n    _this.selectnewAudioChange = _this.selectnewAudioChange.bind(_this);\n    _this.selectnewTranslationChange = _this.selectnewTranslationChange.bind(_this);\n    _this.selectUpdatedPhraseChange = _this.selectUpdatedPhraseChange.bind(_this);\n    _this.updatePhraseChange = _this.updatePhraseChange.bind(_this);\n    _this.onChange = _this.onChange.bind(_this);\n    return _this;\n  }\n\n  (0, _createClass3.default)(Phrase, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {}\n  }, {\n    key: 'thing',\n    value: function thing() {\n      console.log('state: ', this.state);\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(e) {\n      this.setState({\n        change: e.target.value\n      });\n    }\n  }, {\n    key: 'onAudioLangChg',\n    value: function onAudioLangChg(e) {\n      this.setState({\n        newPhrase: (0, _extends9.default)({}, this.state.newPhrase, {\n          audioUel: '/audio/' + e.target.value + '/' + this.state.newPhrase.category + '/'\n        })\n      });\n    }\n  }, {\n    key: 'onAudioCategoryChg',\n    value: function onAudioCategoryChg(e) {\n      this.setState({\n        newPhrase: (0, _extends9.default)({}, this.state.newPhrase, {\n          audioUrl: '/audio/' + this.state.newPhrase.language + '/' + e.target.value + '/'\n        })\n      });\n    }\n  }, {\n    key: 'selectSearchChange',\n    value: function selectSearchChange(e) {\n      this.setState({\n        search: (0, _extends9.default)({}, this.state.search, (0, _defineProperty3.default)({}, e.target.name, e.target.value))\n      });\n    }\n  }, {\n    key: 'selectnewAudioChange',\n    value: function selectnewAudioChange(e) {\n      this.setState({\n        newPhrase: (0, _extends9.default)({}, this.state.newPhrase, (0, _defineProperty3.default)({}, e.target.name, {\n          audioUrl: e.target.value\n        }))\n      });\n    }\n  }, {\n    key: 'selectnewTranslationChange',\n    value: function selectnewTranslationChange(e) {\n      var lang = e.target.name;\n      lang = lang.replace(/InformalTranslation|FormalTranslation/g, '');\n      var filename = e.target.value.replace(/\\s/g, '').replace(/\\,/g, '_');\n      var arr = e.target.value.replace(/\\s/g, '').split();\n      this.setState({\n        newPhrase: (0, _extends9.default)({}, this.state.newPhrase, (0, _defineProperty3.default)({}, e.target.name, {\n          phrases: arr,\n          audioUrl: '/audio/' + lang + '/' + filename + '.mp3'\n        }))\n      });\n    }\n  }, {\n    key: 'selectnewPhraseChange',\n    value: function selectnewPhraseChange(e) {\n      this.setState({\n        newPhrase: (0, _extends9.default)({}, this.state.newPhrase, (0, _defineProperty3.default)({}, e.target.name, e.target.value))\n      });\n    }\n  }, {\n    key: 'selectUpdatedPhraseChange',\n    value: function selectUpdatedPhraseChange(e) {\n      this.setState({\n        updatedPhrase: (0, _extends9.default)({}, this.state.updatedPhrase, (0, _defineProperty3.default)({}, e.target.name, e.target.value))\n      });\n    }\n  }, {\n    key: 'updatePhraseChange',\n    value: function updatePhraseChange(e) {\n      var lang = e.target.name;\n      lang = lang.replace(/InformalTranslation|FormalTranslation/g, '');\n      var filename = e.target.value.replace(/\\s/g, '').replace(/\\,/g, '_');\n      var arr = e.target.value.replace(/\\s/g, '').split();\n      this.setState({\n        updatedPhrase: (0, _extends9.default)({}, this.state.updatedPhrase, (0, _defineProperty3.default)({}, e.target.name, {\n          phrases: arr,\n          audioUrl: '/audio/' + lang + '/' + filename + '.mp3'\n        }))\n      });\n    }\n  }, {\n    key: 'fetchPhrases',\n    value: function fetchPhrases() {\n      var level = this.state.search.level;\n      this.props.actions.fetchPhrases(level);\n      //TODO: populate updatePhrase from redux\n    }\n  }, {\n    key: 'createPhrase',\n    value: function createPhrase(e) {\n      e.preventDefault();\n      var newPhrase = this.state.newPhrase;\n      // confirm('Confirm Creation')\n      this.props.actions.createPhrase(newPhrase);\n      // TODO: clear the props after creating a word\n    }\n  }, {\n    key: 'updatePhrase',\n    value: function updatePhrase(gotPhrase, e) {\n      var _this2 = this;\n\n      console.log('got: ', gotPhrase);\n      var id = gotPhrase.id,\n          _id = gotPhrase._id,\n          level = gotPhrase.level,\n          category = gotPhrase.category,\n          englishInformalTranslation = gotPhrase.englishInformalTranslation,\n          englishFormalTranslation = gotPhrase.englishFormalTranslation,\n          spanishInformalTranslation = gotPhrase.spanishInformalTranslation,\n          spanishFormalTranslation = gotPhrase.spanishFormalTranslation,\n          frenchInformalTranslation = gotPhrase.frenchInformalTranslation,\n          frenchFormalTranslation = gotPhrase.frenchFormalTranslation;\n\n      this.setState({\n        updatedPhrase: (0, _extends9.default)({\n          id: id,\n          _id: _id,\n          level: level,\n          category: category,\n          englishInformalTranslation: englishInformalTranslation,\n          englishFormalTranslation: englishFormalTranslation,\n          spanishInformalTranslation: spanishInformalTranslation,\n          spanishFormalTranslation: spanishFormalTranslation,\n          frenchInformalTranslation: frenchInformalTranslation,\n          frenchFormalTranslation: frenchFormalTranslation\n        }, this.state.updatedPhrase)\n      }, function () {\n        console.log('updated state: ', _this2.state.updatedPhrase);\n        _this2.props.actions.updatePhrase(_this2.state.updatedPhrase);\n      });\n      e.preventDefault();\n      // confirm('Confirm Creation')\n    }\n  }, {\n    key: 'deletePhrase',\n    value: function deletePhrase(word, e) {\n      e.preventDefault();\n      // confirm('Confirm Creation')\n      this.props.actions.deletePhrase(word);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var dict = this.props.phraseReducer[Object.keys(this.props.phraseReducer)[0]];\n      if (dict) {\n        var phrases = dict.phrases;\n      }\n      var counter = 0;\n      return _react2.default.createElement(\n        _containers.Container,\n        { gridtemplatecolumns: '1fr' },\n        _react2.default.createElement(\n          _components.Section,\n          null,\n          _react2.default.createElement(\n            'button',\n            { onClick: this.thing },\n            'state'\n          ),\n          _react2.default.createElement(\n            _components.Title,\n            null,\n            'Phrases'\n          ),\n          _react2.default.createElement(_components.Line, { color: 'black', width: '100%' }),\n          _react2.default.createElement(\n            _components.Title,\n            null,\n            'Builder'\n          ),\n          _react2.default.createElement(\n            'p',\n            null,\n            'For Inputs that require arrays(eg. englishInformalTranslation, spanishInformalTranslation) use a string of words(eg. hello, hi, hey)'\n          ),\n          _react2.default.createElement(_components.Line, { color: 'black', width: '100%' }),\n          _react2.default.createElement(\n            DictGrid,\n            {\n              gridtemplatecolumns: '70px 200px repeat(12, 400px) 200px',\n              maxwidth: '1240px',\n              overflowx: 'scroll' },\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'flex-start' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'level'\n              )\n            ),\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'flex-start' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'category'\n              )\n            ),\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'flex-start' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'englishInformalTranslation'\n              )\n            ),\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'flex-start' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'englishInFormal audio url'\n              )\n            ),\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'flex-start' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'englishFormalTranslation'\n              )\n            ),\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'flex-start' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'englishFormal audio url'\n              )\n            ),\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'flex-start' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'spanishInformalTranslation'\n              )\n            ),\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'flex-start' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'spanishInhFormal audio url'\n              )\n            ),\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'flex-start' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'spanishFormalTranslation'\n              )\n            ),\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'flex-start' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'spanishFormal audio url'\n              )\n            ),\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'flex-start' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'frenchInformalTranslation'\n              )\n            ),\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'flex-start' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'frenchInFormal audio url'\n              )\n            ),\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'flex-start' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'frenchFormalTranslation'\n              )\n            ),\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'flex-start' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'frenchFormal audio url'\n              )\n            ),\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'center' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'edit'\n              )\n            ),\n            _react2.default.createElement(\n              DictBox,\n              null,\n              _react2.default.createElement(\n                _components.Select,\n                {\n                  name: 'level',\n                  onChange: this.selectnewPhraseChange,\n                  width: '100%',\n                  height: '40px' },\n                _react2.default.createElement(\n                  'option',\n                  { value: '1' },\n                  '1'\n                ),\n                _react2.default.createElement(\n                  'option',\n                  { value: '2' },\n                  '2'\n                ),\n                _react2.default.createElement(\n                  'option',\n                  { value: '3' },\n                  '3'\n                ),\n                _react2.default.createElement(\n                  'option',\n                  { value: '4' },\n                  '4'\n                ),\n                _react2.default.createElement(\n                  'option',\n                  { value: '5' },\n                  '5'\n                ),\n                _react2.default.createElement(\n                  'option',\n                  { value: '6' },\n                  '6'\n                ),\n                _react2.default.createElement(\n                  'option',\n                  { value: '7' },\n                  '7'\n                )\n              )\n            ),\n            _react2.default.createElement(\n              DictBox,\n              null,\n              _react2.default.createElement(\n                _components.Select,\n                {\n                  name: 'category',\n                  onChange: this.selectnewPhraseChange,\n                  onClick: this.onAudioCategoryChg,\n                  width: '100%',\n                  height: '40px' },\n                _react2.default.createElement(\n                  'option',\n                  { value: 'phrase' },\n                  'phrase'\n                )\n              )\n            ),\n            _react2.default.createElement(\n              DictBox,\n              null,\n              _react2.default.createElement(DictInput, {\n                name: 'englishInformalTranslation',\n                onChange: this.selectnewTranslationChange\n              })\n            ),\n            _react2.default.createElement(\n              DictBox,\n              null,\n              _react2.default.createElement(DictInput, {\n                name: 'englishInformalTranslation',\n                value: this.state.newPhrase.englishInformalTranslation.audioUrl,\n                onChange: this.selectnewAudioChange\n              })\n            ),\n            _react2.default.createElement(\n              DictBox,\n              null,\n              _react2.default.createElement(DictInput, {\n                name: 'englishFormalTranslation',\n                onChange: this.selectnewTranslationChange\n              })\n            ),\n            _react2.default.createElement(\n              DictBox,\n              null,\n              _react2.default.createElement(DictInput, {\n                name: 'englishFormalTranslation',\n                value: this.state.newPhrase.englishFormalTranslation.audioUrl,\n                onChange: this.selectnewAudioChange\n              })\n            ),\n            _react2.default.createElement(\n              DictBox,\n              null,\n              _react2.default.createElement(DictInput, {\n                name: 'spanishInformalTranslation',\n                onChange: this.selectnewTranslationChange\n              })\n            ),\n            _react2.default.createElement(\n              DictBox,\n              null,\n              _react2.default.createElement(DictInput, {\n                name: 'spanishInformalTranslation',\n                value: this.state.newPhrase.spanishInformalTranslation.audioUrl,\n                onChange: this.selectnewAudioChange\n              })\n            ),\n            _react2.default.createElement(\n              DictBox,\n              null,\n              _react2.default.createElement(DictInput, {\n                name: 'spanishFormalTranslation',\n                onChange: this.selectnewTranslationChange\n              })\n            ),\n            _react2.default.createElement(\n              DictBox,\n              null,\n              _react2.default.createElement(DictInput, {\n                name: 'spanishFormalTranslation',\n                value: this.state.newPhrase.spanishFormalTranslation.audioUrl,\n                onChange: this.selectnewAudioChange\n              })\n            ),\n            _react2.default.createElement(\n              DictBox,\n              null,\n              _react2.default.createElement(DictInput, {\n                name: 'frenchInformalTranslation',\n                onChange: this.selectnewTranslationChange\n              })\n            ),\n            _react2.default.createElement(\n              DictBox,\n              null,\n              _react2.default.createElement(DictInput, {\n                name: 'frenchInformalTranslation',\n                value: this.state.newPhrase.frenchInformalTranslation.audioUrl,\n                onChange: this.selectnewAudioChange\n              })\n            ),\n            _react2.default.createElement(\n              DictBox,\n              null,\n              _react2.default.createElement(DictInput, {\n                name: 'frenchFormalTranslation',\n                onChange: this.selectnewTranslationChange\n              })\n            ),\n            _react2.default.createElement(\n              DictBox,\n              null,\n              _react2.default.createElement(DictInput, {\n                name: 'frenchFormalTranslation',\n                value: this.state.newPhrase.frenchFormalTranslation.audioUrl,\n                onChange: this.selectnewAudioChange\n              })\n            ),\n            _react2.default.createElement(\n              DictBox,\n              null,\n              _react2.default.createElement(\n                _components.Button,\n                { width: '120px', height: '24px', onClick: this.createPhrase },\n                'Create Phrase',\n                ' '\n              )\n            )\n          ),\n          _react2.default.createElement(\n            _components.Title,\n            null,\n            'Search'\n          ),\n          _react2.default.createElement(_components.Line, { color: 'black', width: '100%' }),\n          _react2.default.createElement(\n            DictGrid,\n            {\n              gridtemplatecolumns: '70px 200px 200px',\n              maxwidth: '1240px',\n              overflowx: 'scroll' },\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'flex-start' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'level'\n              )\n            ),\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'flex-start' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'phrase'\n              )\n            ),\n            _react2.default.createElement(\n              _components.Column,\n              { alignitems: 'center' },\n              _react2.default.createElement(\n                _components.Text,\n                { fontsize: '1.4rem' },\n                'edit'\n              )\n            ),\n            _react2.default.createElement(\n              DictBox,\n              null,\n              _react2.default.createElement(\n                _components.Select,\n                {\n                  name: 'level',\n                  onChange: this.selectSearchChange,\n                  width: '100%',\n                  height: '40px' },\n                _react2.default.createElement(\n                  'option',\n                  { value: '1' },\n                  '1'\n                ),\n                _react2.default.createElement(\n                  'option',\n                  { value: '2' },\n                  '2'\n                ),\n                _react2.default.createElement(\n                  'option',\n                  { value: '3' },\n                  '3'\n                ),\n                _react2.default.createElement(\n                  'option',\n                  { value: '4' },\n                  '4'\n                ),\n                _react2.default.createElement(\n                  'option',\n                  { value: '5' },\n                  '5'\n                ),\n                _react2.default.createElement(\n                  'option',\n                  { value: '6' },\n                  '6'\n                ),\n                _react2.default.createElement(\n                  'option',\n                  { value: '7' },\n                  '7'\n                )\n              )\n            ),\n            _react2.default.createElement(\n              DictBox,\n              null,\n              _react2.default.createElement(DictInput, { name: 'phrase', onChange: this.selectSearchChange })\n            ),\n            _react2.default.createElement(\n              DictBox,\n              { display: 'flex', flexdirection: 'row' },\n              _react2.default.createElement(\n                _components.Button,\n                { width: '65px', height: '24px', onClick: this.fetchPhrases },\n                'Search'\n              )\n            )\n          )\n        ),\n        _react2.default.createElement(\n          _components.Section,\n          { width: '100%' },\n          _react2.default.createElement(\n            _components.Title,\n            null,\n            'Results ',\n            _react2.default.createElement(\n              'span',\n              null,\n              '(Total: ?)'\n            )\n          ),\n          _react2.default.createElement(\n            'p',\n            null,\n            'NEVER change audio fields directly. Use the Tranlation fields to the left to change them.'\n          ),\n          _react2.default.createElement(\n            'p',\n            null,\n            'NEVER hit update without changes. This will empty all fields on the record'\n          ),\n          _react2.default.createElement(\n            'p',\n            null,\n            'Refresh page to see updated list after updating or deleting a record.'\n          ),\n          _react2.default.createElement(_components.Line, { color: 'black', width: '100%' }),\n          _react2.default.createElement(\n            _components.Box,\n            {\n              display: 'block',\n              height: '600px',\n              maxwidth: '1240px',\n              overflow: 'scroll' },\n            _react2.default.createElement(\n              DictGrid,\n              {\n                gridtemplatecolumns: '70px 400px 400px 70px 100px repeat(12, 400px) 200px 200px',\n                width: '7000px' },\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'flex-start' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  'count'\n                )\n              ),\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'center' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  '_id'\n                )\n              ),\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'center' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  'id'\n                )\n              ),\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'flex-start' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  'level'\n                )\n              ),\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'flex-start' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  'category'\n                )\n              ),\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'flex-start' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  'englishInformalTranslation'\n                )\n              ),\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'flex-start' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  'englishInformal audio'\n                )\n              ),\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'flex-start' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  'englishFormalTranslation'\n                )\n              ),\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'flex-start' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  'englishFormal audio'\n                )\n              ),\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'flex-start' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  'spanishInformalTranslation'\n                )\n              ),\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'flex-start' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  'spanishInformal audio'\n                )\n              ),\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'flex-start' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  'spanishFormalTranslation'\n                )\n              ),\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'flex-start' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  'spanishFormal audio'\n                )\n              ),\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'flex-start' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  'frenchInformalTranslation'\n                )\n              ),\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'flex-start' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  'frenchInformal audio'\n                )\n              ),\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'flex-start' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  'frenchFormalTranslation'\n                )\n              ),\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'flex-start' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  'frenchFormal audio'\n                )\n              ),\n              _react2.default.createElement(\n                _components.Column,\n                { alignitems: 'center' },\n                _react2.default.createElement(\n                  _components.Text,\n                  { fontsize: '1.4rem' },\n                  'Edit'\n                )\n              )\n            ),\n            phrases ? phrases.map(function (item, i) {\n              counter++;\n              return _react2.default.createElement(\n                DictGrid,\n                {\n                  gridtemplatecolumns: '70px 400px 400px 70px 100px repeat(12, 400px) 200px 200px',\n                  width: '7000px' },\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(\n                    'span',\n                    null,\n                    counter\n                  )\n                ),\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(DictInput, {\n                    name: 'id',\n                    onChange: _this3.selectUpdatedPhraseChange,\n                    placeholder: item.id\n                  })\n                ),\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(DictInput, {\n                    name: '_id',\n                    onChange: _this3.selectUpdatedPhraseChange,\n                    placeholder: item._id\n                  })\n                ),\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(DictInput, {\n                    name: 'level',\n                    onChange: _this3.selectUpdatedPhraseChange,\n                    placeholder: item.level\n                  })\n                ),\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(DictInput, {\n                    name: 'category',\n                    onChange: _this3.selectUpdatedPhraseChange,\n                    placeholder: item.category\n                  })\n                ),\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(DictInput, {\n                    name: 'englishInformalTranslation',\n                    onChange: _this3.updatePhraseChange,\n                    placeholder: item.englishInformalTranslation.phrases[0]\n                  })\n                ),\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(DictInput, {\n                    name: 'englishInformalTranslation',\n                    value: _this3.state.updatedPhrase.englishInformalTranslation.audioUrl\n                  })\n                ),\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(DictInput, {\n                    name: 'englishFormalTranslation',\n                    onChange: _this3.updatePhraseChange,\n                    placeholder: item.englishFormalTranslation.phrases[0]\n                  })\n                ),\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(DictInput, {\n                    name: 'englishFormalTranslation',\n                    value: _this3.state.updatedPhrase.englishFormalTranslation.audioUrl\n                  })\n                ),\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(DictInput, {\n                    name: 'spanishInformalTranslation',\n                    onChange: _this3.updatePhraseChange,\n                    placeholder: item.spanishInformalTranslation.phrases[0]\n                  })\n                ),\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(DictInput, {\n                    name: 'spanishInformalTranslation',\n                    value: _this3.state.updatedPhrase.spanishInformalTranslation.audioUrl\n                  })\n                ),\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(DictInput, {\n                    name: 'spanishFormalTranslation',\n                    onChange: _this3.updatePhraseChange,\n                    placeholder: item.spanishFormalTranslation.phrases[0]\n                  })\n                ),\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(DictInput, {\n                    name: 'spanishFormalTranslation',\n                    value: _this3.state.updatedPhrase.spanishFormalTranslation.audioUrl\n                  })\n                ),\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(DictInput, {\n                    name: 'frenchInformalTranslation',\n                    onChange: _this3.updatePhraseChange,\n                    placeholder: item.frenchInformalTranslation.phrases[0]\n                  })\n                ),\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(DictInput, {\n                    name: 'frenchInformalTranslation',\n                    value: _this3.state.updatedPhrase.frenchInformalTranslation.audioUrl\n                  })\n                ),\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(DictInput, {\n                    name: 'frenchFormalTranslation',\n                    onChange: _this3.updatePhraseChange,\n                    placeholder: item.frenchFormalTranslation.phrases[0]\n                  })\n                ),\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(DictInput, {\n                    name: 'frenchFormalTranslation',\n                    value: _this3.state.updatedPhrase.frenchFormalTranslation.audioUrl\n                  })\n                ),\n                _react2.default.createElement(\n                  DictBox,\n                  null,\n                  _react2.default.createElement(\n                    'div',\n                    null,\n                    _react2.default.createElement(\n                      _components.Button,\n                      {\n                        hovercolor: 'white',\n                        hoverbackground: 'blue',\n                        onClick: function onClick(e) {\n                          return _this3.updatePhrase(item, e);\n                        } },\n                      'update'\n                    ),\n                    '|',\n                    ' ',\n                    _react2.default.createElement(\n                      _components.Button,\n                      {\n                        hovercolor: 'white',\n                        hoverbackground: 'blue',\n                        onClick: function onClick(e) {\n                          return _this3.deletePhrase(item, e);\n                        } },\n                      'delete'\n                    )\n                  )\n                )\n              );\n            }) : null\n          )\n        )\n      );\n    }\n  }]);\n  return Phrase;\n}(_react.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    phraseReducer: state.phraseReducer\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  var fetchPhrases = _actions2.default.fetch;\n  var createPhrase = _actions2.default.create;\n  var deletePhrase = _actions2.default.delete;\n  var updatePhrase = _actions2.default.update;\n  return {\n    actions: (0, _redux.bindActionCreators)({\n      fetchPhrases: fetchPhrases,\n      createPhrase: createPhrase,\n      deletePhrase: deletePhrase,\n      updatePhrase: updatePhrase\n    }, dispatch)\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Phrase);\n\nexports.default = _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(DictGrid, 'DictGrid', '/var/www/html/utter/client/src/layouts/Admin/Phrases/index.js');\n\n  __REACT_HOT_LOADER__.register(Delete, 'Delete', '/var/www/html/utter/client/src/layouts/Admin/Phrases/index.js');\n\n  __REACT_HOT_LOADER__.register(DictInput, 'DictInput', '/var/www/html/utter/client/src/layouts/Admin/Phrases/index.js');\n\n  __REACT_HOT_LOADER__.register(DictBox, 'DictBox', '/var/www/html/utter/client/src/layouts/Admin/Phrases/index.js');\n\n  __REACT_HOT_LOADER__.register(Phrase, 'Phrase', '/var/www/html/utter/client/src/layouts/Admin/Phrases/index.js');\n\n  __REACT_HOT_LOADER__.register(mapStateToProps, 'mapStateToProps', '/var/www/html/utter/client/src/layouts/Admin/Phrases/index.js');\n\n  __REACT_HOT_LOADER__.register(mapDispatchToProps, 'mapDispatchToProps', '/var/www/html/utter/client/src/layouts/Admin/Phrases/index.js');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/var/www/html/utter/client/src/layouts/Admin/Phrases/index.js');\n}();\n\n;\n\n ;(function register() { /* react-hot-loader/webpack */ if (process.env.NODE_ENV !== 'production') { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : module.exports; /* eslint-enable camelcase, no-undef */ if (typeof webpackExports === 'function') { __REACT_HOT_LOADER__.register(webpackExports, 'module.exports', \"/var/www/html/utter/client/src/layouts/Admin/Phrases/index.js\"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, \"/var/www/html/utter/client/src/layouts/Admin/Phrases/index.js\"); } } })();","{\"version\":3,\"sources\":[\"/var/www/html/utter/client/src/layouts/Admin/Phrases/index.js\"],\"names\":[\"DictGrid\",\"props\",\"gridautorows\",\"gridtemplatecolumns\",\"gridtemplaterows\",\"maxheight\",\"maxwidth\",\"overflowx\",\"overflowy\",\"width\",\"Delete\",\"defaultProps\",\"DictInput\",\"DictBox\",\"height\",\"padding\",\"Phrase\",\"state\",\"search\",\"level\",\"change\",\"deletePhrase\",\"counter\",\"newPhrase\",\"category\",\"englishInformalTranslation\",\"phrases\",\"audioUrl\",\"englishFormalTranslation\",\"spanishInformalTranslation\",\"spanishFormalTranslation\",\"frenchInformalTranslation\",\"frenchFormalTranslation\",\"updatedPhrase\",\"thing\",\"bind\",\"fetchPhrases\",\"createPhrase\",\"onAudioLangChg\",\"onAudioCategoryChg\",\"selectSearchChange\",\"selectnewPhraseChange\",\"selectnewAudioChange\",\"selectnewTranslationChange\",\"selectUpdatedPhraseChange\",\"updatePhraseChange\",\"onChange\",\"console\",\"log\",\"e\",\"setState\",\"target\",\"value\",\"audioUel\",\"language\",\"name\",\"lang\",\"replace\",\"filename\",\"arr\",\"split\",\"actions\",\"preventDefault\",\"gotPhrase\",\"id\",\"_id\",\"updatePhrase\",\"word\",\"dict\",\"phraseReducer\",\"Object\",\"keys\",\"map\",\"item\",\"i\",\"mapStateToProps\",\"mapDispatchToProps\",\"fetch\",\"create\",\"delete\",\"update\",\"dispatch\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, {Component} from 'react'\\nimport {Container} from '../../../containers'\\nimport {bindActionCreators} from 'redux'\\nimport {connect} from 'react-redux'\\nimport styled from 'styled-components'\\n\\nimport {\\n  Box,\\n  Button,\\n  Column,\\n  Grid,\\n  Input,\\n  Label,\\n  Line,\\n  Section,\\n  Select,\\n  Text,\\n  Title\\n} from '../../../components'\\n\\nimport actionCreators from './actions.js'\\n\\nconst DictGrid = styled(Grid)`\\n  grid-auto-rows: ${props => props.gridautorows};\\n  grid-template-columns: ${props => props.gridtemplatecolumns};\\n  grid-template-rows: ${props => props.gridtemplaterows};\\n  max-height: ${props => props.maxheight};\\n  max-width: ${props => props.maxwidth};\\n  overflow-x: ${props => props.overflowx};\\n  overflow-y: ${props => props.overflowy};\\n  width: ${props => props.width};\\n`\\n\\nconst Delete = styled(Button)`\\n  &:hover {\\n    background: red;\\n  }\\n`\\n\\nDictGrid.defaultProps = {\\n  gridtemplatecolumns: '.05fr .05fr .05fr .05fr'\\n}\\n\\nconst DictInput = styled(Input)`\\n  width: 100%;\\n`\\n\\nconst DictBox = styled(Box)`\\n  display:flex;\\n  flex-direction:row;\\n  height: ${props => props.height};\\n  padding: ${props => props.padding};\\n`\\nDictBox.defaultProps = {\\n  padding: '0 5px 0 0 '\\n}\\n\\nclass Phrase extends Component {\\n  constructor(props) {\\n    super(props)\\n    this.state = {\\n      search: {\\n        level: '1'\\n      },\\n      change: '',\\n      deletePhrase: false,\\n      counter: 0,\\n      newPhrase: {\\n        level: '1',\\n        category: 'phrase',\\n        englishInformalTranslation: {\\n          phrases: [],\\n          audioUrl: '/audio/english/'\\n        },\\n        englishFormalTranslation: {\\n          phrases: [],\\n          audioUrl: '/audio/english/'\\n        },\\n        spanishInformalTranslation: {\\n          phrases: [],\\n          audioUrl: '/audio/spanish/'\\n        },\\n        spanishFormalTranslation: {\\n          phrases: [],\\n          audioUrl: '/audio/spanish/'\\n        },\\n        frenchInformalTranslation: {\\n          phrases: [],\\n          audioUrl: '/audio/french/'\\n        },\\n        frenchFormalTranslation: {\\n          phrases: [],\\n          audioUrl: '/audio/french/'\\n        }\\n      },\\n      updatedPhrase: {\\n        level: '1',\\n        category: 'phrase',\\n        englishInformalTranslation: {\\n          phrases: [],\\n          audioUrl: '/audio/english/'\\n        },\\n        englishFormalTranslation: {\\n          phrases: [],\\n          audioUrl: '/audio/english/'\\n        },\\n        spanishInformalTranslation: {\\n          phrases: [],\\n          audioUrl: '/audio/spanish/'\\n        },\\n        spanishFormalTranslation: {\\n          phrases: [],\\n          audioUrl: '/audio/spanish/'\\n        },\\n        frenchInformalTranslation: {\\n          phrases: [],\\n          audioUrl: '/audio/french/'\\n        },\\n        frenchFormalTranslation: {\\n          phrases: [],\\n          audioUrl: '/audio/french/'\\n        }\\n      }\\n    }\\n\\n    this.thing = this.thing.bind(this)\\n    this.fetchPhrases = this.fetchPhrases.bind(this)\\n    this.createPhrase = this.createPhrase.bind(this)\\n    this.onAudioLangChg = this.onAudioLangChg.bind(this)\\n    this.onAudioCategoryChg = this.onAudioCategoryChg.bind(this)\\n    this.selectSearchChange = this.selectSearchChange.bind(this)\\n    this.selectnewPhraseChange = this.selectnewPhraseChange.bind(this)\\n    this.selectnewAudioChange = this.selectnewAudioChange.bind(this)\\n    this.selectnewTranslationChange = this.selectnewTranslationChange.bind(this)\\n    this.selectUpdatedPhraseChange = this.selectUpdatedPhraseChange.bind(this)\\n    this.updatePhraseChange = this.updatePhraseChange.bind(this)\\n    this.onChange = this.onChange.bind(this)\\n  }\\n\\n  componentDidMount() {}\\n\\n  thing() {\\n    console.log('state: ', this.state)\\n  }\\n\\n  onChange(e) {\\n    this.setState({\\n      change: e.target.value\\n    })\\n  }\\n\\n  onAudioLangChg(e) {\\n    this.setState({\\n      newPhrase: {\\n        ...this.state.newPhrase,\\n        audioUel: `/audio/${e.target.value}/${this.state.newPhrase.category}/`\\n      }\\n    })\\n  }\\n\\n  onAudioCategoryChg(e) {\\n    this.setState({\\n      newPhrase: {\\n        ...this.state.newPhrase,\\n        audioUrl: `/audio/${this.state.newPhrase.language}/${e.target.value}/`\\n      }\\n    })\\n  }\\n\\n  selectSearchChange(e) {\\n    this.setState({\\n      search: {\\n        ...this.state.search,\\n        [e.target.name]: e.target.value\\n      }\\n    })\\n  }\\n\\n  selectnewAudioChange(e) {\\n    this.setState({\\n      newPhrase: {\\n        ...this.state.newPhrase,\\n        [e.target.name]: {\\n          audioUrl: e.target.value\\n        }\\n      }\\n    })\\n  }\\n\\n  selectnewTranslationChange(e) {\\n    let lang = e.target.name\\n    lang = lang.replace(/InformalTranslation|FormalTranslation/g, '')\\n    let filename = e.target.value.replace(/\\\\s/g, '').replace(/\\\\,/g, '_')\\n    let arr = e.target.value.replace(/\\\\s/g, '').split()\\n    this.setState({\\n      newPhrase: {\\n        ...this.state.newPhrase,\\n        [e.target.name]: {\\n          phrases: arr,\\n          audioUrl: '/audio/' + lang + '/' + filename + '.mp3'\\n        }\\n      }\\n    })\\n  }\\n\\n  selectnewPhraseChange(e) {\\n    this.setState({\\n      newPhrase: {\\n        ...this.state.newPhrase,\\n        [e.target.name]: e.target.value\\n      }\\n    })\\n  }\\n\\n  selectUpdatedPhraseChange(e) {\\n    this.setState({\\n      updatedPhrase: {\\n        ...this.state.updatedPhrase,\\n        [e.target.name]: e.target.value\\n      }\\n    })\\n  }\\n\\n  updatePhraseChange(e) {\\n    let lang = e.target.name\\n    lang = lang.replace(/InformalTranslation|FormalTranslation/g, '')\\n    let filename = e.target.value.replace(/\\\\s/g, '').replace(/\\\\,/g, '_')\\n    let arr = e.target.value.replace(/\\\\s/g, '').split()\\n    this.setState({\\n      updatedPhrase: {\\n        ...this.state.updatedPhrase,\\n        [e.target.name]: {\\n          phrases: arr,\\n          audioUrl: '/audio/' + lang + '/' + filename + '.mp3'\\n        }\\n      }\\n    })\\n  }\\n\\n  fetchPhrases() {\\n    const level = this.state.search.level\\n    this.props.actions.fetchPhrases(level)\\n    //TODO: populate updatePhrase from redux\\n  }\\n\\n  createPhrase(e) {\\n    e.preventDefault()\\n    let newPhrase = this.state.newPhrase\\n    // confirm('Confirm Creation')\\n    this.props.actions.createPhrase(newPhrase)\\n    // TODO: clear the props after creating a word\\n  }\\n\\n  updatePhrase(gotPhrase, e) {\\n    console.log('got: ', gotPhrase)\\n    const {\\n      id,\\n      _id,\\n      level,\\n      category,\\n      englishInformalTranslation,\\n      englishFormalTranslation,\\n      spanishInformalTranslation,\\n      spanishFormalTranslation,\\n      frenchInformalTranslation,\\n      frenchFormalTranslation\\n    } = gotPhrase\\n    this.setState(\\n      {\\n        updatedPhrase: {\\n          id,\\n          _id,\\n          level,\\n          category,\\n          englishInformalTranslation,\\n          englishFormalTranslation,\\n          spanishInformalTranslation,\\n          spanishFormalTranslation,\\n          frenchInformalTranslation,\\n          frenchFormalTranslation,\\n          ...this.state.updatedPhrase\\n        }\\n      },\\n      () => {\\n        console.log('updated state: ', this.state.updatedPhrase)\\n        this.props.actions.updatePhrase(this.state.updatedPhrase)\\n      }\\n    )\\n    e.preventDefault()\\n    // confirm('Confirm Creation')\\n  }\\n\\n  deletePhrase(word, e) {\\n    e.preventDefault()\\n    // confirm('Confirm Creation')\\n    this.props.actions.deletePhrase(word)\\n  }\\n\\n  render() {\\n    let dict = this.props.phraseReducer[\\n      Object.keys(this.props.phraseReducer)[0]\\n    ]\\n    if (dict) {\\n      var phrases = dict.phrases\\n    }\\n    let counter = 0\\n    return (\\n      <Container gridtemplatecolumns=\\\"1fr\\\">\\n        <Section>\\n          <button onClick={this.thing}>state</button>\\n          <Title>Phrases</Title>\\n          <Line color=\\\"black\\\" width=\\\"100%\\\" />\\n          <Title>Builder</Title>\\n          <p>\\n            For Inputs that require arrays(eg. englishInformalTranslation,\\n            spanishInformalTranslation) use a string of words(eg. hello, hi,\\n            hey)\\n          </p>\\n          <Line color=\\\"black\\\" width=\\\"100%\\\" />\\n          <DictGrid\\n            gridtemplatecolumns=\\\"70px 200px repeat(12, 400px) 200px\\\"\\n            maxwidth=\\\"1240px\\\"\\n            overflowx=\\\"scroll\\\">\\n            <Column alignitems=\\\"flex-start\\\">\\n              <Text fontsize=\\\"1.4rem\\\">level</Text>\\n            </Column>\\n            <Column alignitems=\\\"flex-start\\\">\\n              <Text fontsize=\\\"1.4rem\\\">category</Text>\\n            </Column>\\n            <Column alignitems=\\\"flex-start\\\">\\n              <Text fontsize=\\\"1.4rem\\\">englishInformalTranslation</Text>\\n            </Column>\\n            <Column alignitems=\\\"flex-start\\\">\\n              <Text fontsize=\\\"1.4rem\\\">englishInFormal audio url</Text>\\n            </Column>\\n            <Column alignitems=\\\"flex-start\\\">\\n              <Text fontsize=\\\"1.4rem\\\">englishFormalTranslation</Text>\\n            </Column>\\n            <Column alignitems=\\\"flex-start\\\">\\n              <Text fontsize=\\\"1.4rem\\\">englishFormal audio url</Text>\\n            </Column>\\n            <Column alignitems=\\\"flex-start\\\">\\n              <Text fontsize=\\\"1.4rem\\\">spanishInformalTranslation</Text>\\n            </Column>\\n            <Column alignitems=\\\"flex-start\\\">\\n              <Text fontsize=\\\"1.4rem\\\">spanishInhFormal audio url</Text>\\n            </Column>\\n            <Column alignitems=\\\"flex-start\\\">\\n              <Text fontsize=\\\"1.4rem\\\">spanishFormalTranslation</Text>\\n            </Column>\\n            <Column alignitems=\\\"flex-start\\\">\\n              <Text fontsize=\\\"1.4rem\\\">spanishFormal audio url</Text>\\n            </Column>\\n            <Column alignitems=\\\"flex-start\\\">\\n              <Text fontsize=\\\"1.4rem\\\">frenchInformalTranslation</Text>\\n            </Column>\\n            <Column alignitems=\\\"flex-start\\\">\\n              <Text fontsize=\\\"1.4rem\\\">frenchInFormal audio url</Text>\\n            </Column>\\n            <Column alignitems=\\\"flex-start\\\">\\n              <Text fontsize=\\\"1.4rem\\\">frenchFormalTranslation</Text>\\n            </Column>\\n            <Column alignitems=\\\"flex-start\\\">\\n              <Text fontsize=\\\"1.4rem\\\">frenchFormal audio url</Text>\\n            </Column>\\n            <Column alignitems=\\\"center\\\">\\n              <Text fontsize=\\\"1.4rem\\\">edit</Text>\\n            </Column>\\n            <DictBox>\\n              <Select\\n                name=\\\"level\\\"\\n                onChange={this.selectnewPhraseChange}\\n                width=\\\"100%\\\"\\n                height=\\\"40px\\\">\\n                <option value=\\\"1\\\">1</option>\\n                <option value=\\\"2\\\">2</option>\\n                <option value=\\\"3\\\">3</option>\\n                <option value=\\\"4\\\">4</option>\\n                <option value=\\\"5\\\">5</option>\\n                <option value=\\\"6\\\">6</option>\\n                <option value=\\\"7\\\">7</option>\\n              </Select>\\n            </DictBox>\\n            <DictBox>\\n              <Select\\n                name=\\\"category\\\"\\n                onChange={this.selectnewPhraseChange}\\n                onClick={this.onAudioCategoryChg}\\n                width=\\\"100%\\\"\\n                height=\\\"40px\\\">\\n                <option value=\\\"phrase\\\">phrase</option>\\n              </Select>\\n            </DictBox>\\n            <DictBox>\\n              <DictInput\\n                name=\\\"englishInformalTranslation\\\"\\n                onChange={this.selectnewTranslationChange}\\n              />\\n            </DictBox>\\n            <DictBox>\\n              <DictInput\\n                name=\\\"englishInformalTranslation\\\"\\n                value={this.state.newPhrase.englishInformalTranslation.audioUrl}\\n                onChange={this.selectnewAudioChange}\\n              />\\n            </DictBox>\\n            <DictBox>\\n              <DictInput\\n                name=\\\"englishFormalTranslation\\\"\\n                onChange={this.selectnewTranslationChange}\\n              />\\n            </DictBox>\\n            <DictBox>\\n              <DictInput\\n                name=\\\"englishFormalTranslation\\\"\\n                value={this.state.newPhrase.englishFormalTranslation.audioUrl}\\n                onChange={this.selectnewAudioChange}\\n              />\\n            </DictBox>\\n            <DictBox>\\n              <DictInput\\n                name=\\\"spanishInformalTranslation\\\"\\n                onChange={this.selectnewTranslationChange}\\n              />\\n            </DictBox>\\n            <DictBox>\\n              <DictInput\\n                name=\\\"spanishInformalTranslation\\\"\\n                value={this.state.newPhrase.spanishInformalTranslation.audioUrl}\\n                onChange={this.selectnewAudioChange}\\n              />\\n            </DictBox>\\n            <DictBox>\\n              <DictInput\\n                name=\\\"spanishFormalTranslation\\\"\\n                onChange={this.selectnewTranslationChange}\\n              />\\n            </DictBox>\\n            <DictBox>\\n              <DictInput\\n                name=\\\"spanishFormalTranslation\\\"\\n                value={this.state.newPhrase.spanishFormalTranslation.audioUrl}\\n                onChange={this.selectnewAudioChange}\\n              />\\n            </DictBox>\\n            <DictBox>\\n              <DictInput\\n                name=\\\"frenchInformalTranslation\\\"\\n                onChange={this.selectnewTranslationChange}\\n              />\\n            </DictBox>\\n            <DictBox>\\n              <DictInput\\n                name=\\\"frenchInformalTranslation\\\"\\n                value={this.state.newPhrase.frenchInformalTranslation.audioUrl}\\n                onChange={this.selectnewAudioChange}\\n              />\\n            </DictBox>\\n            <DictBox>\\n              <DictInput\\n                name=\\\"frenchFormalTranslation\\\"\\n                onChange={this.selectnewTranslationChange}\\n              />\\n            </DictBox>\\n            <DictBox>\\n              <DictInput\\n                name=\\\"frenchFormalTranslation\\\"\\n                value={this.state.newPhrase.frenchFormalTranslation.audioUrl}\\n                onChange={this.selectnewAudioChange}\\n              />\\n            </DictBox>\\n            <DictBox>\\n              <Button width=\\\"120px\\\" height=\\\"24px\\\" onClick={this.createPhrase}>\\n                Create Phrase{' '}\\n              </Button>\\n            </DictBox>\\n          </DictGrid>\\n          <Title>Search</Title>\\n          <Line color=\\\"black\\\" width=\\\"100%\\\" />\\n          <DictGrid\\n            gridtemplatecolumns=\\\"70px 200px 200px\\\"\\n            maxwidth=\\\"1240px\\\"\\n            overflowx=\\\"scroll\\\">\\n            <Column alignitems=\\\"flex-start\\\">\\n              <Text fontsize=\\\"1.4rem\\\">level</Text>\\n            </Column>\\n            <Column alignitems=\\\"flex-start\\\">\\n              <Text fontsize=\\\"1.4rem\\\">phrase</Text>\\n            </Column>\\n            <Column alignitems=\\\"center\\\">\\n              <Text fontsize=\\\"1.4rem\\\">edit</Text>\\n            </Column>\\n            <DictBox>\\n              <Select\\n                name=\\\"level\\\"\\n                onChange={this.selectSearchChange}\\n                width=\\\"100%\\\"\\n                height=\\\"40px\\\">\\n                <option value=\\\"1\\\">1</option>\\n                <option value=\\\"2\\\">2</option>\\n                <option value=\\\"3\\\">3</option>\\n                <option value=\\\"4\\\">4</option>\\n                <option value=\\\"5\\\">5</option>\\n                <option value=\\\"6\\\">6</option>\\n                <option value=\\\"7\\\">7</option>\\n              </Select>\\n            </DictBox>\\n            <DictBox>\\n              <DictInput name=\\\"phrase\\\" onChange={this.selectSearchChange} />\\n            </DictBox>\\n            <DictBox display=\\\"flex\\\" flexdirection=\\\"row\\\">\\n              <Button width=\\\"65px\\\" height=\\\"24px\\\" onClick={this.fetchPhrases}>\\n                Search\\n              </Button>\\n            </DictBox>\\n          </DictGrid>\\n        </Section>\\n        <Section width=\\\"100%\\\">\\n          <Title>Results <span>(Total: ?)</span></Title>\\n          <p>\\n            NEVER change audio fields directly. Use the Tranlation fields to the\\n            left to change them.\\n          </p>\\n          <p>\\n            NEVER hit update without changes. This will empty all fields on the\\n            record\\n          </p>\\n          <p>\\n            Refresh page to see updated list after updating or deleting a\\n            record.\\n          </p>\\n          <Line color=\\\"black\\\" width=\\\"100%\\\" />\\n          <Box\\n            display=\\\"block\\\"\\n            height=\\\"600px\\\"\\n            maxwidth=\\\"1240px\\\"\\n            overflow=\\\"scroll\\\">\\n            <DictGrid\\n              gridtemplatecolumns=\\\"70px 400px 400px 70px 100px repeat(12, 400px) 200px 200px\\\"\\n              width=\\\"7000px\\\">\\n              <Column alignitems=\\\"flex-start\\\">\\n                <Text fontsize=\\\"1.4rem\\\">count</Text>\\n              </Column>\\n              <Column alignitems=\\\"center\\\">\\n                <Text fontsize=\\\"1.4rem\\\">_id</Text>\\n              </Column>\\n              <Column alignitems=\\\"center\\\">\\n                <Text fontsize=\\\"1.4rem\\\">id</Text>\\n              </Column>\\n              <Column alignitems=\\\"flex-start\\\">\\n                <Text fontsize=\\\"1.4rem\\\">level</Text>\\n              </Column>\\n              <Column alignitems=\\\"flex-start\\\">\\n                <Text fontsize=\\\"1.4rem\\\">category</Text>\\n              </Column>\\n              <Column alignitems=\\\"flex-start\\\">\\n                <Text fontsize=\\\"1.4rem\\\">englishInformalTranslation</Text>\\n              </Column>\\n              <Column alignitems=\\\"flex-start\\\">\\n                <Text fontsize=\\\"1.4rem\\\">englishInformal audio</Text>\\n              </Column>\\n              <Column alignitems=\\\"flex-start\\\">\\n                <Text fontsize=\\\"1.4rem\\\">englishFormalTranslation</Text>\\n              </Column>\\n              <Column alignitems=\\\"flex-start\\\">\\n                <Text fontsize=\\\"1.4rem\\\">englishFormal audio</Text>\\n              </Column>\\n              <Column alignitems=\\\"flex-start\\\">\\n                <Text fontsize=\\\"1.4rem\\\">spanishInformalTranslation</Text>\\n              </Column>\\n              <Column alignitems=\\\"flex-start\\\">\\n                <Text fontsize=\\\"1.4rem\\\">spanishInformal audio</Text>\\n              </Column>\\n              <Column alignitems=\\\"flex-start\\\">\\n                <Text fontsize=\\\"1.4rem\\\">spanishFormalTranslation</Text>\\n              </Column>\\n              <Column alignitems=\\\"flex-start\\\">\\n                <Text fontsize=\\\"1.4rem\\\">spanishFormal audio</Text>\\n              </Column>\\n              <Column alignitems=\\\"flex-start\\\">\\n                <Text fontsize=\\\"1.4rem\\\">frenchInformalTranslation</Text>\\n              </Column>\\n              <Column alignitems=\\\"flex-start\\\">\\n                <Text fontsize=\\\"1.4rem\\\">frenchInformal audio</Text>\\n              </Column>\\n              <Column alignitems=\\\"flex-start\\\">\\n                <Text fontsize=\\\"1.4rem\\\">frenchFormalTranslation</Text>\\n              </Column>\\n              <Column alignitems=\\\"flex-start\\\">\\n                <Text fontsize=\\\"1.4rem\\\">frenchFormal audio</Text>\\n              </Column>\\n              <Column alignitems=\\\"center\\\">\\n                <Text fontsize=\\\"1.4rem\\\">Edit</Text>\\n              </Column>\\n            </DictGrid>\\n            {phrases\\n              ? phrases.map((item, i) => {\\n                  counter++\\n                  return (\\n                    <DictGrid\\n                      gridtemplatecolumns=\\\"70px 400px 400px 70px 100px repeat(12, 400px) 200px 200px\\\"\\n                      width=\\\"7000px\\\">\\n                      <DictBox>\\n                        <span>{counter}</span>\\n                      </DictBox>\\n                      <DictBox>\\n                        <DictInput\\n                          name=\\\"id\\\"\\n                          onChange={this.selectUpdatedPhraseChange}\\n                          placeholder={item.id}\\n                        />\\n                      </DictBox>\\n                      <DictBox>\\n                        <DictInput\\n                          name=\\\"_id\\\"\\n                          onChange={this.selectUpdatedPhraseChange}\\n                          placeholder={item._id}\\n                        />\\n                      </DictBox>\\n                      <DictBox>\\n                        <DictInput\\n                          name=\\\"level\\\"\\n                          onChange={this.selectUpdatedPhraseChange}\\n                          placeholder={item.level}\\n                        />\\n                      </DictBox>\\n                      <DictBox>\\n                        <DictInput\\n                          name=\\\"category\\\"\\n                          onChange={this.selectUpdatedPhraseChange}\\n                          placeholder={item.category}\\n                        />\\n                      </DictBox>\\n                      <DictBox>\\n                        <DictInput\\n                          name=\\\"englishInformalTranslation\\\"\\n                          onChange={this.updatePhraseChange}\\n                          placeholder={\\n                            item.englishInformalTranslation.phrases[0]\\n                          }\\n                        />\\n                      </DictBox>\\n                      <DictBox>\\n                        <DictInput\\n                          name=\\\"englishInformalTranslation\\\"\\n                          value={\\n                            this.state.updatedPhrase.englishInformalTranslation\\n                              .audioUrl\\n                          }\\n                        />\\n                      </DictBox>\\n                      <DictBox>\\n                        <DictInput\\n                          name=\\\"englishFormalTranslation\\\"\\n                          onChange={this.updatePhraseChange}\\n                          placeholder={item.englishFormalTranslation.phrases[0]}\\n                        />\\n                      </DictBox>\\n                      <DictBox>\\n                        <DictInput\\n                          name=\\\"englishFormalTranslation\\\"\\n                          value={\\n                            this.state.updatedPhrase.englishFormalTranslation\\n                              .audioUrl\\n                          }\\n                        />\\n                      </DictBox>\\n                      <DictBox>\\n                        <DictInput\\n                          name=\\\"spanishInformalTranslation\\\"\\n                          onChange={this.updatePhraseChange}\\n                          placeholder={\\n                            item.spanishInformalTranslation.phrases[0]\\n                          }\\n                        />\\n                      </DictBox>\\n                      <DictBox>\\n                        <DictInput\\n                          name=\\\"spanishInformalTranslation\\\"\\n                          value={\\n                            this.state.updatedPhrase.spanishInformalTranslation\\n                              .audioUrl\\n                          }\\n                        />\\n                      </DictBox>\\n                      <DictBox>\\n                        <DictInput\\n                          name=\\\"spanishFormalTranslation\\\"\\n                          onChange={this.updatePhraseChange}\\n                          placeholder={item.spanishFormalTranslation.phrases[0]}\\n                        />\\n                      </DictBox>\\n                      <DictBox>\\n                        <DictInput\\n                          name=\\\"spanishFormalTranslation\\\"\\n                          value={\\n                            this.state.updatedPhrase.spanishFormalTranslation\\n                              .audioUrl\\n                          }\\n                        />\\n                      </DictBox>\\n                      <DictBox>\\n                        <DictInput\\n                          name=\\\"frenchInformalTranslation\\\"\\n                          onChange={this.updatePhraseChange}\\n                          placeholder={\\n                            item.frenchInformalTranslation.phrases[0]\\n                          }\\n                        />\\n                      </DictBox>\\n                      <DictBox>\\n                        <DictInput\\n                          name=\\\"frenchInformalTranslation\\\"\\n                          value={\\n                            this.state.updatedPhrase.frenchInformalTranslation\\n                              .audioUrl\\n                          }\\n                        />\\n                      </DictBox>\\n                      <DictBox>\\n                        <DictInput\\n                          name=\\\"frenchFormalTranslation\\\"\\n                          onChange={this.updatePhraseChange}\\n                          placeholder={item.frenchFormalTranslation.phrases[0]}\\n                        />\\n                      </DictBox>\\n                      <DictBox>\\n                        <DictInput\\n                          name=\\\"frenchFormalTranslation\\\"\\n                          value={\\n                            this.state.updatedPhrase.frenchFormalTranslation\\n                              .audioUrl\\n                          }\\n                        />\\n                      </DictBox>\\n                      <DictBox>\\n                        <div>\\n                          <Button\\n                            hovercolor=\\\"white\\\"\\n                            hoverbackground=\\\"blue\\\"\\n                            onClick={e => this.updatePhrase(item, e)}>\\n                            update\\n                          </Button>\\n                          |{' '}\\n                          <Button\\n                            hovercolor=\\\"white\\\"\\n                            hoverbackground=\\\"blue\\\"\\n                            onClick={e => this.deletePhrase(item, e)}>\\n                            delete\\n                          </Button>\\n                        </div>\\n                      </DictBox>\\n                    </DictGrid>\\n                  )\\n                })\\n              : null}\\n          </Box>\\n        </Section>\\n      </Container>\\n    )\\n  }\\n}\\n\\nconst mapStateToProps = state => {\\n  return {\\n    phraseReducer: state.phraseReducer\\n  }\\n}\\n\\nconst mapDispatchToProps = dispatch => {\\n  let fetchPhrases = actionCreators.fetch\\n  let createPhrase = actionCreators.create\\n  let deletePhrase = actionCreators.delete\\n  let updatePhrase = actionCreators.update\\n  return {\\n    actions: bindActionCreators(\\n      {\\n        fetchPhrases,\\n        createPhrase,\\n        deletePhrase,\\n        updatePhrase\\n      },\\n      dispatch\\n    )\\n  }\\n}\\n\\nexport default connect(mapStateToProps, mapDispatchToProps)(Phrase)\\n\"]}"]}