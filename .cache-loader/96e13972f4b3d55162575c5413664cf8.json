{"remainingRequest":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js!/var/www/html/utter/node_modules/babel-loader/lib/index.js!/var/www/html/utter/client/src/containers/Chat/index.js","dependencies":[{"path":"/var/www/html/utter/client/src/containers/Chat/index.js","mtime":1519430450852},{"path":"/var/www/html/utter/.babelrc","mtime":1518822814526},{"path":"/var/www/html/utter/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js","mtime":1510167650000},{"path":"/var/www/html/utter/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRouterDom = require('react-router-dom');\n\nvar _redux = require('redux');\n\nvar _reactRedux = require('react-redux');\n\nvar _components = require('../../components');\n\nvar _styledComponents = require('styled-components');\n\nvar _styledComponents2 = _interopRequireDefault(_styledComponents);\n\nvar _cuid = require('cuid');\n\nvar _cuid2 = _interopRequireDefault(_cuid);\n\nvar _socket = require('socket.io-client');\n\nvar _socket2 = _interopRequireDefault(_socket);\n\nvar _recordrtc = require('recordrtc');\n\nvar _recordrtc2 = _interopRequireDefault(_recordrtc);\n\nvar _play = require('../../assets/images/play.svg');\n\nvar _play2 = _interopRequireDefault(_play);\n\nvar _actions = require('../Pictures/actions.js');\n\nvar _actions2 = require('./actions.js');\n\nvar _actions3 = require('../../services/socketio/actions.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Msg = function Msg(_ref) {\n  var author = _ref.author,\n      audio = _ref.audio,\n      msg = _ref.msg;\n  return _react2.default.createElement(\n    _components.ListItem,\n    { alignitems: 'center', display: 'flex', padding: '10px 0' },\n    author,\n    ': ',\n    audio ? _react2.default.createElement('audio', { src: audio, controls: true }) : null,\n    ' ',\n    msg\n  );\n};\n\n// actions\n\nvar MsgList = function (_Component) {\n  (0, _inherits3.default)(MsgList, _Component);\n\n  function MsgList() {\n    (0, _classCallCheck3.default)(this, MsgList);\n    return (0, _possibleConstructorReturn3.default)(this, (MsgList.__proto__ || Object.getPrototypeOf(MsgList)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(MsgList, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          list = _props.list,\n          onMsgClick = _props.onMsgClick;\n\n      return _react2.default.createElement(\n        _components.Box,\n        {\n          id: 'chatList',\n          alignitems: 'flex-start',\n          height: '600px',\n          justifycontent: 'flex-start',\n          margin: '0 0 20px 0',\n          overflowy: 'scroll' },\n        _react2.default.createElement(\n          _components.List,\n          { className: 'Message', style: { textAlign: 'left', fontSize: '1rem' } },\n          list.map(function (item) {\n            return _react2.default.createElement(Msg, {\n              key: item.id,\n              author: item.author,\n              audio: item.dataUrl,\n              msg: item.msg,\n              onClick: function onClick() {\n                return onMsgClick(id);\n              }\n            });\n          })\n        )\n      );\n    }\n  }]);\n  return MsgList;\n}(_react.Component);\n\nvar MsgBox = function (_Component2) {\n  (0, _inherits3.default)(MsgBox, _Component2);\n\n  function MsgBox(props) {\n    (0, _classCallCheck3.default)(this, MsgBox);\n    return (0, _possibleConstructorReturn3.default)(this, (MsgBox.__proto__ || Object.getPrototypeOf(MsgBox)).call(this, props));\n  }\n\n  (0, _createClass3.default)(MsgBox, [{\n    key: 'onChange',\n    value: function onChange(e) {\n      // set the current message\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          current_msg = _props2.current_msg,\n          onKeyUp = _props2.onKeyUp;\n\n      return _react2.default.createElement(_components.TextArea, {\n        id: 'inputMessageBox',\n        placeholder: 'enter a message',\n        value: current_msg,\n        onChange: this.onChange,\n        onKeyUp: onKeyUp,\n        width: '90%'\n      });\n    }\n  }]);\n  return MsgBox;\n}(_react.Component);\n\nvar Article = /*#__PURE__*/_styledComponents2.default.article.withConfig({\n  displayName: 'Chat__Article'\n})(['display:flex;flex-direction:column;']);\n\nvar ChatContainer = function (_Component3) {\n  (0, _inherits3.default)(ChatContainer, _Component3);\n\n  function ChatContainer(props) {\n    (0, _classCallCheck3.default)(this, ChatContainer);\n\n    var _this3 = (0, _possibleConstructorReturn3.default)(this, (ChatContainer.__proto__ || Object.getPrototypeOf(ChatContainer)).call(this, props));\n\n    _this3.state = { msg: '' };\n\n    _this3.filteredMessages = _this3.filteredMessages.bind(_this3);\n    _this3.onKeyUp = _this3.onKeyUp.bind(_this3);\n    _this3.onSend = _this3.onSend.bind(_this3);\n    _this3.updateReview = _this3.updateReview.bind(_this3);\n    return _this3;\n  }\n\n  (0, _createClass3.default)(ChatContainer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var fileCounter = 0;\n      var props = this.props;\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        console.log('getUserMedia supported.');\n        navigator.mediaDevices.getUserMedia({ audio: true })\n        // Success callback\n        .then(function (stream) {\n          var recorder = (0, _recordrtc2.default)(stream, { type: 'audio' });\n          var record = document.querySelector('.record');\n          var stop = document.querySelector('.stop');\n          var soundClips = document.querySelector('.sound-clips');\n          record.onclick = function () {\n            if (soundClips.childNodes.length === 1) {\n              record.disabled = true;\n              alert('You can only record 1 audio clip at a time.  Delete your audio clip to record another.');\n            } else {\n              recorder.startRecording();\n              console.log('recorder started');\n              record.style.background = 'red';\n              record.style.color = 'black';\n            }\n          };\n\n          stop.onclick = function () {\n            var audio = document.createElement('audio');\n            var clipContainer = document.createElement('Article');\n            var deleteButton = document.createElement('button');\n\n            recorder.stopRecording(function (audioURL) {\n              audio.src = audioURL;\n\n              var recordedBlob = recorder.getBlob();\n              recorder.getDataURL(function (dataUrl) {\n                var files = {\n                  audio: {\n                    author: props.userReducer.userProfile.username,\n                    room: props.socketReducer.joined_room,\n                    name: 'file' + fileCounter++ + '.wav',\n                    type: 'audio/wav',\n                    dataUrl: dataUrl\n                  }\n                  // add blob to redux\n                };props.actions.loadAudioBlob(files);\n              });\n            });\n            console.log('recorder stopped');\n            record.style.background = '';\n            record.style.color = '';\n\n            clipContainer.classList.add('clip');\n            clipContainer.setAttribute('style', 'display: flex; justify-content: center');\n            audio.setAttribute('controls', '');\n            deleteButton.innerHTML = 'Delete';\n\n            clipContainer.appendChild(audio);\n            clipContainer.appendChild(deleteButton);\n            soundClips.appendChild(clipContainer);\n\n            deleteButton.onclick = function (e) {\n              var evtTgt = e.target;\n              evtTgt.parentNode.parentNode.removeChild(evtTgt.parentNode);\n              record.disabled = false;\n            };\n          };\n        })\n        // Error callback\n        .catch(function (err) {\n          console.log('The following gUM error occured: ' + err);\n        });\n      } else {\n        console.log('getUserMedia not supported on your browser!');\n      }\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate() {\n      // scroll ref: http://blog.vjeux.com/2013/javascript/scroll-position-with-react.html\n      var node = document.getElementById('chatList');\n\n      if (node) {\n        this.shouldScrollBottom = node.scrollTop + node.offsetHeight === node.scrollHeight;\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      var node = document.getElementById('chatList');\n      console.log('yep its here: ', this.shouldScrollBottom);\n      console.log('top: ', node.scrollTop);\n      console.log('offset: ', node.offsetHeight);\n      if (this.shouldScrollBottom) {\n        var node = document.getElementById('chatList');\n        node.scrollTop = node.scrollHeight;\n      }\n    }\n  }, {\n    key: 'updateReview',\n    value: function updateReview(e) {\n      e.preventDefault();\n      var wordList = this.props.pictureReducer.wordList;\n      var reviewList = this.props.pictureReducer.reviewList;\n      var originalList = this.props.pictureReducer.originalList;\n      var query = this.props.pictureReducer.query;\n      var reviewObj = _.find(originalList, { word: query });\n\n      if (!this.props.pictureReducer.reviewList) {\n        this.props.actions.updateReviewList(reviewObj);\n        console.log('reviewlist \"', this.props.pictureReducer.reviewList);\n      } else {\n        reviewList;\n        this.props.actions.updateReviewList(reviewObj);\n      }\n    }\n  }, {\n    key: 'onSend',\n    value: function onSend(e) {\n      e.preventDefault();\n      var audio = this.props.socketReducer.audioBlob;\n      // send audio file\n      if (audio) {\n        this.props.actions.addAudio({\n          author: audio.audio.author,\n          dataUrl: audio.audio.dataUrl\n        });\n        this.props.actions.sendAudioBlob(audio);\n      }\n      // send typed messages\n      var body = {\n        id: (0, _cuid2.default)(),\n        msg: this.state.msg,\n        author: this.props.userReducer.userProfile.username,\n        room: this.props.socketReducer.joined_room\n      };\n      if (body.msg) {\n        this.props.actions.addMsg(body);\n        this.props.actions.sendMsg(body);\n        this.setState({ msg: null });\n      }\n\n      // clear input for messages\n      document.getElementById('inputMessageBox').value = '';\n      // remove the soundclips\n      var soundClips = document.querySelector('.sound-clips');\n      if (soundClips.firstChild) {\n        soundClips.removeChild(soundClips.firstChild);\n      }\n\n      // TODO: code below for uttered lists\n      // const obj = {\n      //   // author: this.props.authReducer.userProfile.username,\n      //   room_id: this.props.roomReducer.selected,\n      //   message: this.props.chatReducer.current_msg\n      // }\n\n      // if (obj.message) {\n      //   // update utteredList\n      //   let utteredArray = utteredString.split(' ')\n      //   let utteredMap = utteredArray.map(word => {\n      //     return {word: word, uttered: 1}\n      //   })\n      //   let newUtteredList = this.props.utteredList.concat(utteredMap)\n\n      //   // first, convert data into a Map with reduce\n      //   let counts = newUtteredList.reduce((prev, curr) => {\n      //     let count = prev.get(curr.word) || 0\n      //     prev.set(curr.word, curr.uttered + count)\n      //     return prev\n      //   }, new Map())\n\n      //   // then, map your counts object back to an array\n      //   let reducedObjArr = [...counts].map(([word, uttered]) => {\n      //     return {word, uttered}\n      //   })\n\n      //   // TODO: save utterlist to db (this feature to halted for now)\n      //   const userObjId = this.props.authReducer.userProfile._id\n      //   console.log('userObjId: ', userObjId)\n      //   superagent\n      //     .put(`/api/users/${userObjId}`)\n      //     .send({utteredList: reducedObjArr})\n      //     .end((err, res) => {\n      //       if (err) {\n      //         console.log(err)\n      //       } else {\n      //         this.props.actions.updateUtteredList(reducedObjArr)\n      //       }\n      //     })\n      // }\n\n      // delete the audio\n      this.props.actions.deleteAudioBlob();\n    }\n  }, {\n    key: 'filteredMessages',\n    value: function filteredMessages() {\n      var list = this.props.chatReducer.msgList;\n      // return list.filter(item => {\n      //   if (item.message.room_id === this.props.roomReducer.selected) return true\n      // })\n      return list;\n    }\n  }, {\n    key: 'onKeyUp',\n    value: function onKeyUp(e) {\n      var value = e.target.value;\n      this.setState({ msg: value });\n\n      if (e.keyCode === 13 && value) {\n        var body = {\n          id: _cuid2.default.generate(),\n          msg: value,\n          author: this.props.userReducer.userProfile.username,\n          room: this.props.socketReducer.joined_room\n        };\n\n        this.props.actions.addMsg(body);\n        this.props.actions.sendMsg(body);\n        e.target.value = '';\n      }\n    }\n  }, {\n    key: 'updateScroll',\n    value: function updateScroll() {\n      var element = document.getElementById('chatList');\n      element.scrollTop = element.scrollHeight;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      if (this.props.socketReducer.joined_room !== 'Lobby') {\n        var recordBtn = _react2.default.createElement(\n          _components.Box,\n          { flexdirection: 'row' },\n          _react2.default.createElement(\n            _components.Button,\n            {\n              className: 'record',\n              color: 'black',\n              fontsize: '1.2rem',\n              margin: '5px',\n              padding: '3px',\n              width: '100px' },\n            'rec'\n          ),\n          _react2.default.createElement(\n            _components.Button,\n            {\n              className: 'stop',\n              color: 'black',\n              fontsize: '1.2rem',\n              margin: '5px',\n              padding: '3px',\n              width: '100px' },\n            'stop',\n            ' '\n          )\n        );\n      }\n      if (!this.props.socketReducer.joined_room) {\n        return _react2.default.createElement(\n          'div',\n          null,\n          '\\'Join or create a room\\''\n        );\n      } else {\n        return _react2.default.createElement(\n          _components.Box,\n          null,\n          _react2.default.createElement(MsgList, { list: this.filteredMessages() }),\n          _react2.default.createElement(\n            _components.Box,\n            { style: { padding: '20px' } },\n            ' ',\n            _react2.default.createElement(Article, { className: 'sound-clips' })\n          ),\n          _react2.default.createElement(MsgBox, { onKeyUp: this.onKeyUp }),\n          _react2.default.createElement(\n            _components.Box,\n            { alignitems: 'flex-start', flexdirection: 'row', width: '200px' },\n            this.props.roomReducer.creator ? _react2.default.createElement(\n              _components.Button,\n              {\n                color: 'black',\n                fontsize: '1.2rem',\n                margin: '5px',\n                padding: '3px',\n                onClick: this.updateReview,\n                width: '50px' },\n              'review',\n              ' '\n            ) : null,\n            recordBtn,\n            _react2.default.createElement(\n              _components.Button,\n              {\n                color: 'black',\n                fontsize: '1.2rem',\n                margin: '5px',\n                padding: '3px',\n                onClick: this.onSend,\n                type: 'button',\n                width: '50px' },\n              'send'\n            )\n          )\n        );\n      }\n    }\n  }]);\n  return ChatContainer;\n}(_react.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    channelReducer: state.channelReducer,\n    chatReducer: state.chatReducer,\n    messages: state.messages,\n    pictureReducer: state.pictureReducer,\n    roomReducer: state.roomReducer,\n    socketReducer: state.socketReducer,\n    authReducer: state.authReducer,\n    userReducer: state.userReducer,\n    utteredList: state.utteredReducer.utteredList\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    actions: (0, _redux.bindActionCreators)({\n      addAudio: _actions2.addAudio,\n      addMsg: _actions2.addMsg,\n      deleteAudioBlob: _actions3.deleteAudioBlob,\n      loadAudioBlob: _actions3.loadAudioBlob,\n      sendAudioBlob: _actions3.sendAudioBlob,\n      sendMsg: _actions3.sendMsg,\n      setCurrentMsg: _actions2.setCurrentMsg,\n      updateMsg: _actions2.updateMsg,\n      updateReviewList: _actions.updateReviewList\n    }, dispatch)\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ChatContainer);\n\nexports.default = _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Msg, 'Msg', '/var/www/html/utter/client/src/containers/Chat/index.js');\n\n  __REACT_HOT_LOADER__.register(MsgList, 'MsgList', '/var/www/html/utter/client/src/containers/Chat/index.js');\n\n  __REACT_HOT_LOADER__.register(MsgBox, 'MsgBox', '/var/www/html/utter/client/src/containers/Chat/index.js');\n\n  __REACT_HOT_LOADER__.register(Article, 'Article', '/var/www/html/utter/client/src/containers/Chat/index.js');\n\n  __REACT_HOT_LOADER__.register(ChatContainer, 'ChatContainer', '/var/www/html/utter/client/src/containers/Chat/index.js');\n\n  __REACT_HOT_LOADER__.register(mapStateToProps, 'mapStateToProps', '/var/www/html/utter/client/src/containers/Chat/index.js');\n\n  __REACT_HOT_LOADER__.register(mapDispatchToProps, 'mapDispatchToProps', '/var/www/html/utter/client/src/containers/Chat/index.js');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/var/www/html/utter/client/src/containers/Chat/index.js');\n}();\n\n;\n\n ;(function register() { /* react-hot-loader/webpack */ if (process.env.NODE_ENV !== 'production') { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : module.exports; /* eslint-enable camelcase, no-undef */ if (typeof webpackExports === 'function') { __REACT_HOT_LOADER__.register(webpackExports, 'module.exports', \"/var/www/html/utter/client/src/containers/Chat/index.js\"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, \"/var/www/html/utter/client/src/containers/Chat/index.js\"); } } })();","{\"version\":3,\"sources\":[\"/var/www/html/utter/client/src/containers/Chat/index.js\"],\"names\":[\"Msg\",\"author\",\"audio\",\"msg\",\"MsgList\",\"props\",\"list\",\"onMsgClick\",\"textAlign\",\"fontSize\",\"map\",\"item\",\"id\",\"dataUrl\",\"MsgBox\",\"e\",\"current_msg\",\"onKeyUp\",\"onChange\",\"Article\",\"article\",\"ChatContainer\",\"state\",\"filteredMessages\",\"bind\",\"onSend\",\"updateReview\",\"fileCounter\",\"navigator\",\"mediaDevices\",\"getUserMedia\",\"console\",\"log\",\"then\",\"stream\",\"recorder\",\"type\",\"record\",\"document\",\"querySelector\",\"stop\",\"soundClips\",\"onclick\",\"childNodes\",\"length\",\"disabled\",\"alert\",\"startRecording\",\"style\",\"background\",\"color\",\"createElement\",\"clipContainer\",\"deleteButton\",\"stopRecording\",\"audioURL\",\"src\",\"recordedBlob\",\"getBlob\",\"getDataURL\",\"files\",\"userReducer\",\"userProfile\",\"username\",\"room\",\"socketReducer\",\"joined_room\",\"name\",\"actions\",\"loadAudioBlob\",\"classList\",\"add\",\"setAttribute\",\"innerHTML\",\"appendChild\",\"evtTgt\",\"target\",\"parentNode\",\"removeChild\",\"catch\",\"err\",\"node\",\"getElementById\",\"shouldScrollBottom\",\"scrollTop\",\"offsetHeight\",\"scrollHeight\",\"preventDefault\",\"wordList\",\"pictureReducer\",\"reviewList\",\"originalList\",\"query\",\"reviewObj\",\"_\",\"find\",\"word\",\"updateReviewList\",\"audioBlob\",\"addAudio\",\"sendAudioBlob\",\"body\",\"addMsg\",\"sendMsg\",\"setState\",\"value\",\"firstChild\",\"deleteAudioBlob\",\"chatReducer\",\"msgList\",\"keyCode\",\"generate\",\"element\",\"recordBtn\",\"padding\",\"roomReducer\",\"creator\",\"mapStateToProps\",\"channelReducer\",\"messages\",\"authReducer\",\"utteredList\",\"utteredReducer\",\"mapDispatchToProps\",\"setCurrentMsg\",\"updateMsg\",\"dispatch\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, {Component} from 'react'\\nimport {Link} from 'react-router-dom'\\nimport {bindActionCreators} from 'redux'\\nimport {connect} from 'react-redux'\\nimport {Button, Box, List, ListItem, TextArea} from '../../components'\\nimport styled from 'styled-components'\\nimport cuid from 'cuid'\\nimport io from 'socket.io-client'\\nimport RecordRTC from 'recordrtc'\\nimport filename from '../../assets/images/play.svg'\\n\\n// actions\\nimport {updateReviewList} from '../Pictures/actions.js'\\nimport {addAudio, addMsg, setCurrentMsg, updateMsg} from './actions.js'\\nimport {\\n  deleteAudioBlob,\\n  loadAudioBlob,\\n  sendAudioBlob,\\n  sendMsg\\n} from '../../services/socketio/actions.js'\\n\\nconst Msg = ({author, audio, msg}) => (\\n  <ListItem alignitems=\\\"center\\\" display=\\\"flex\\\" padding=\\\"10px 0\\\">\\n    {author}: {audio ? <audio src={audio} controls /> : null} {msg}\\n  </ListItem>\\n)\\n\\nclass MsgList extends Component {\\n  render() {\\n    const {list, onMsgClick} = this.props\\n    return (\\n      <Box\\n        id=\\\"chatList\\\"\\n        alignitems=\\\"flex-start\\\"\\n        height=\\\"600px\\\"\\n        justifycontent=\\\"flex-start\\\"\\n        margin=\\\"0 0 20px 0\\\"\\n        overflowy=\\\"scroll\\\">\\n        <List className=\\\"Message\\\" style={{textAlign: 'left', fontSize: '1rem'}}>\\n          {list.map(item => (\\n            <Msg\\n              key={item.id}\\n              author={item.author}\\n              audio={item.dataUrl}\\n              msg={item.msg}\\n              onClick={() => onMsgClick(id)}\\n            />\\n          ))}\\n        </List>\\n      </Box>\\n    )\\n  }\\n}\\n\\nclass MsgBox extends Component {\\n  constructor(props) {\\n    super(props)\\n  }\\n\\n  onChange(e) {\\n    // set the current message\\n  }\\n\\n  render() {\\n    const {current_msg, onKeyUp} = this.props\\n    return (\\n      <TextArea\\n        id=\\\"inputMessageBox\\\"\\n        placeholder=\\\"enter a message\\\"\\n        value={current_msg}\\n        onChange={this.onChange}\\n        onKeyUp={onKeyUp}\\n        width=\\\"90%\\\"\\n      />\\n    )\\n  }\\n}\\n\\nconst Article = styled.article`\\n  display: flex;\\n  flex-direction: column;\\n`\\n\\nclass ChatContainer extends Component {\\n  constructor(props) {\\n    super(props)\\n\\n    this.state = {msg: ''}\\n\\n    this.filteredMessages = this.filteredMessages.bind(this)\\n    this.onKeyUp = this.onKeyUp.bind(this)\\n    this.onSend = this.onSend.bind(this)\\n    this.updateReview = this.updateReview.bind(this)\\n  }\\n\\n  componentDidMount() {\\n    var fileCounter = 0\\n    var props = this.props\\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\\n      console.log('getUserMedia supported.')\\n      navigator.mediaDevices\\n        .getUserMedia({audio: true})\\n        // Success callback\\n        .then(function(stream) {\\n          const recorder = RecordRTC(stream, {type: 'audio'})\\n          var record = document.querySelector('.record')\\n          var stop = document.querySelector('.stop')\\n          var soundClips = document.querySelector('.sound-clips')\\n          record.onclick = function() {\\n            if (soundClips.childNodes.length === 1) {\\n              record.disabled = true\\n              alert(\\n                'You can only record 1 audio clip at a time.  Delete your audio clip to record another.'\\n              )\\n            } else {\\n              recorder.startRecording()\\n              console.log('recorder started')\\n              record.style.background = 'red'\\n              record.style.color = 'black'\\n            }\\n          }\\n\\n          stop.onclick = function() {\\n            var audio = document.createElement('audio')\\n            var clipContainer = document.createElement('Article')\\n            var deleteButton = document.createElement('button')\\n\\n            recorder.stopRecording(function(audioURL) {\\n              audio.src = audioURL\\n\\n              var recordedBlob = recorder.getBlob()\\n              recorder.getDataURL(function(dataUrl) {\\n                var files = {\\n                  audio: {\\n                    author: props.userReducer.userProfile.username,\\n                    room: props.socketReducer.joined_room,\\n                    name: 'file' + fileCounter++ + '.wav',\\n                    type: 'audio/wav',\\n                    dataUrl: dataUrl\\n                  }\\n                }\\n                // add blob to redux\\n                props.actions.loadAudioBlob(files)\\n              })\\n            })\\n            console.log('recorder stopped')\\n            record.style.background = ''\\n            record.style.color = ''\\n\\n            clipContainer.classList.add('clip')\\n            clipContainer.setAttribute(\\n              'style',\\n              'display: flex; justify-content: center'\\n            )\\n            audio.setAttribute('controls', '')\\n            deleteButton.innerHTML = 'Delete'\\n\\n            clipContainer.appendChild(audio)\\n            clipContainer.appendChild(deleteButton)\\n            soundClips.appendChild(clipContainer)\\n\\n            deleteButton.onclick = function(e) {\\n              var evtTgt = e.target\\n              evtTgt.parentNode.parentNode.removeChild(evtTgt.parentNode)\\n              record.disabled = false\\n            }\\n          }\\n        })\\n        // Error callback\\n        .catch(function(err) {\\n          console.log('The following gUM error occured: ' + err)\\n        })\\n    } else {\\n      console.log('getUserMedia not supported on your browser!')\\n    }\\n  }\\n\\n  componentWillUpdate() {\\n    // scroll ref: http://blog.vjeux.com/2013/javascript/scroll-position-with-react.html\\n    var node = document.getElementById('chatList')\\n\\n    if (node) {\\n      this.shouldScrollBottom =\\n        node.scrollTop + node.offsetHeight === node.scrollHeight\\n    }\\n  }\\n\\n  componentDidUpdate() {\\n    var node = document.getElementById('chatList')\\n    console.log('yep its here: ', this.shouldScrollBottom)\\n    console.log('top: ', node.scrollTop)\\n    console.log('offset: ', node.offsetHeight)\\n    if (this.shouldScrollBottom) {\\n      var node = document.getElementById('chatList')\\n      node.scrollTop = node.scrollHeight\\n    }\\n  }\\n\\n  updateReview(e) {\\n    e.preventDefault()\\n    const wordList = this.props.pictureReducer.wordList\\n    const reviewList = this.props.pictureReducer.reviewList\\n    const originalList = this.props.pictureReducer.originalList\\n    const query = this.props.pictureReducer.query\\n    const reviewObj = _.find(originalList, {word: query})\\n\\n    if (!this.props.pictureReducer.reviewList) {\\n      this.props.actions.updateReviewList(reviewObj)\\n      console.log('reviewlist \\\"', this.props.pictureReducer.reviewList)\\n    } else {\\n      reviewList\\n      this.props.actions.updateReviewList(reviewObj)\\n    }\\n  }\\n\\n  onSend(e) {\\n    e.preventDefault()\\n    const audio = this.props.socketReducer.audioBlob\\n    // send audio file\\n    if (audio) {\\n      this.props.actions.addAudio({\\n        author: audio.audio.author,\\n        dataUrl: audio.audio.dataUrl\\n      })\\n      this.props.actions.sendAudioBlob(audio)\\n    }\\n    // send typed messages\\n    const body = {\\n      id: cuid(),\\n      msg: this.state.msg,\\n      author: this.props.userReducer.userProfile.username,\\n      room: this.props.socketReducer.joined_room\\n    }\\n    if (body.msg) {\\n      this.props.actions.addMsg(body)\\n      this.props.actions.sendMsg(body)\\n      this.setState({msg: null})\\n    }\\n\\n    // clear input for messages\\n    document.getElementById('inputMessageBox').value = ''\\n    // remove the soundclips\\n    var soundClips = document.querySelector('.sound-clips')\\n    if (soundClips.firstChild) {\\n      soundClips.removeChild(soundClips.firstChild)\\n    }\\n\\n    // TODO: code below for uttered lists\\n    // const obj = {\\n    //   // author: this.props.authReducer.userProfile.username,\\n    //   room_id: this.props.roomReducer.selected,\\n    //   message: this.props.chatReducer.current_msg\\n    // }\\n\\n    // if (obj.message) {\\n    //   // update utteredList\\n    //   let utteredArray = utteredString.split(' ')\\n    //   let utteredMap = utteredArray.map(word => {\\n    //     return {word: word, uttered: 1}\\n    //   })\\n    //   let newUtteredList = this.props.utteredList.concat(utteredMap)\\n\\n    //   // first, convert data into a Map with reduce\\n    //   let counts = newUtteredList.reduce((prev, curr) => {\\n    //     let count = prev.get(curr.word) || 0\\n    //     prev.set(curr.word, curr.uttered + count)\\n    //     return prev\\n    //   }, new Map())\\n\\n    //   // then, map your counts object back to an array\\n    //   let reducedObjArr = [...counts].map(([word, uttered]) => {\\n    //     return {word, uttered}\\n    //   })\\n\\n    //   // TODO: save utterlist to db (this feature to halted for now)\\n    //   const userObjId = this.props.authReducer.userProfile._id\\n    //   console.log('userObjId: ', userObjId)\\n    //   superagent\\n    //     .put(`/api/users/${userObjId}`)\\n    //     .send({utteredList: reducedObjArr})\\n    //     .end((err, res) => {\\n    //       if (err) {\\n    //         console.log(err)\\n    //       } else {\\n    //         this.props.actions.updateUtteredList(reducedObjArr)\\n    //       }\\n    //     })\\n    // }\\n\\n    // delete the audio\\n    this.props.actions.deleteAudioBlob()\\n  }\\n\\n  filteredMessages() {\\n    let list = this.props.chatReducer.msgList\\n    // return list.filter(item => {\\n    //   if (item.message.room_id === this.props.roomReducer.selected) return true\\n    // })\\n    return list\\n  }\\n\\n  onKeyUp(e) {\\n    const value = e.target.value\\n    this.setState({msg: value})\\n\\n    if (e.keyCode === 13 && value) {\\n      const body = {\\n        id: cuid.generate(),\\n        msg: value,\\n        author: this.props.userReducer.userProfile.username,\\n        room: this.props.socketReducer.joined_room\\n      }\\n\\n      this.props.actions.addMsg(body)\\n      this.props.actions.sendMsg(body)\\n      e.target.value = ''\\n    }\\n  }\\n\\n  updateScroll() {\\n    var element = document.getElementById('chatList')\\n    element.scrollTop = element.scrollHeight\\n  }\\n\\n  render() {\\n    if (this.props.socketReducer.joined_room !== 'Lobby') {\\n      var recordBtn = (\\n        <Box flexdirection=\\\"row\\\">\\n          <Button\\n            className=\\\"record\\\"\\n            color=\\\"black\\\"\\n            fontsize=\\\"1.2rem\\\"\\n            margin=\\\"5px\\\"\\n            padding=\\\"3px\\\"\\n            width=\\\"100px\\\">\\n            rec\\n          </Button>\\n          <Button\\n            className=\\\"stop\\\"\\n            color=\\\"black\\\"\\n            fontsize=\\\"1.2rem\\\"\\n            margin=\\\"5px\\\"\\n            padding=\\\"3px\\\"\\n            width=\\\"100px\\\">\\n            stop{' '}\\n          </Button>\\n        </Box>\\n      )\\n    }\\n    if (!this.props.socketReducer.joined_room) {\\n      return <div>'Join or create a room'</div>\\n    } else {\\n      return (\\n        <Box>\\n          <MsgList list={this.filteredMessages()} />\\n          <Box style={{padding: '20px'}}>\\n            {' '}\\n            <Article className=\\\"sound-clips\\\" />\\n          </Box>\\n          <MsgBox onKeyUp={this.onKeyUp} />\\n          <Box alignitems=\\\"flex-start\\\" flexdirection=\\\"row\\\" width=\\\"200px\\\">\\n            {this.props.roomReducer.creator ? (\\n              <Button\\n                color=\\\"black\\\"\\n                fontsize=\\\"1.2rem\\\"\\n                margin=\\\"5px\\\"\\n                padding=\\\"3px\\\"\\n                onClick={this.updateReview}\\n                width=\\\"50px\\\">\\n                review{' '}\\n              </Button>\\n            ) : null}\\n            {recordBtn}\\n            <Button\\n              color=\\\"black\\\"\\n              fontsize=\\\"1.2rem\\\"\\n              margin=\\\"5px\\\"\\n              padding=\\\"3px\\\"\\n              onClick={this.onSend}\\n              type=\\\"button\\\"\\n              width=\\\"50px\\\">\\n              send\\n            </Button>\\n          </Box>\\n        </Box>\\n      )\\n    }\\n  }\\n}\\n\\nconst mapStateToProps = state => {\\n  return {\\n    channelReducer: state.channelReducer,\\n    chatReducer: state.chatReducer,\\n    messages: state.messages,\\n    pictureReducer: state.pictureReducer,\\n    roomReducer: state.roomReducer,\\n    socketReducer: state.socketReducer,\\n    authReducer: state.authReducer,\\n    userReducer: state.userReducer,\\n    utteredList: state.utteredReducer.utteredList\\n  }\\n}\\n\\nconst mapDispatchToProps = dispatch => {\\n  return {\\n    actions: bindActionCreators(\\n      {\\n        addAudio,\\n        addMsg,\\n        deleteAudioBlob,\\n        loadAudioBlob,\\n        sendAudioBlob,\\n        sendMsg,\\n        setCurrentMsg,\\n        updateMsg,\\n        updateReviewList\\n      },\\n      dispatch\\n    )\\n  }\\n}\\n\\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatContainer)\\n\"]}"]}