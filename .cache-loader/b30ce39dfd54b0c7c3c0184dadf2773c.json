{"remainingRequest":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js!/var/www/html/utter/node_modules/babel-loader/lib/index.js!/var/www/html/utter/client/src/containers/Pictures/actions.js","dependencies":[{"path":"/var/www/html/utter/client/src/containers/Pictures/actions.js","mtime":1515949088714},{"path":"/var/www/html/utter/.babelrc","mtime":1518822814526},{"path":"/var/www/html/utter/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js","mtime":1510167650000},{"path":"/var/www/html/utter/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendTranslated = exports.sendRomanized = exports.updateReviewList = exports.updateWordList = exports.updateTranslation = exports.updatePicture = exports.updateOriginalWordList = exports.loadWordList = exports.loadOriginalWordList = exports.loadQuestion = exports.loadQuery = exports.loadAudioUrl = undefined;\n\nvar _types = require('./types.js');\n\nvar loadOriginalWordList = function loadOriginalWordList(list) {\n  return {\n    type: _types.LOAD_ORIGINAL_WORD_LIST,\n    payload: new Promise(function (resolve, reject) {\n      resolve(list);\n    })\n  };\n};\n\nvar loadAudioUrl = function loadAudioUrl(url) {\n  return {\n    type: _types.LOAD_AUDIO_URL,\n    payload: new Promise(function (resolve, reject) {\n      resolve(url);\n    })\n  };\n};\n\nvar loadQuery = function loadQuery(query) {\n  return {\n    type: _types.LOAD_QUERY,\n    payload: new Promise(function (resolve, reject) {\n      resolve(query);\n    })\n  };\n};\n\nvar loadQuestion = function loadQuestion(question) {\n  return {\n    type: _types.LOAD_QUESTION,\n    payload: new Promise(function (resolve, reject) {\n      resolve(question);\n    })\n  };\n};\n\nvar loadWordList = function loadWordList(list) {\n  return {\n    type: _types.LOAD_WORD_LIST,\n    payload: new Promise(function (resolve, reject) {\n      resolve(list);\n    })\n  };\n};\n\nvar sendRomanized = function sendRomanized(word) {\n  return {\n    type: _types.SEND_ROMANIZED,\n    payload: new Promise(function (resolve, reject) {\n      resolve(word);\n    })\n  };\n};\n\nvar sendTranslated = function sendTranslated(query) {\n  return {\n    type: _types.SEND_TRANSLATED,\n    payload: new Promise(function (resolve, reject) {\n      resolve(query);\n    })\n  };\n};\n\nvar updateOriginalWordList = function updateOriginalWordList(list) {\n  return {\n    type: _types.UPDATE_ORIGINAL_WORD_LIST,\n    payload: new Promise(function (resolve, reject) {\n      resolve(list);\n    })\n  };\n};\n\nvar updatePicture = function updatePicture(src) {\n  return {\n    type: _types.UPDATE_PICTURE,\n    payload: new Promise(function (resolve, reject) {\n      resolve(src);\n    })\n  };\n};\n\n// const updateQuery = query => {\n//   return {\n//     type: UPDATE_QUERY,\n//     payload: new Promise((resolve, reject) => {\n//       resolve(query)\n//     })\n//   }\n// }\n\nvar updateReviewList = function updateReviewList(query) {\n  return {\n    type: _types.UPDATE_REVIEW_LIST,\n    payload: new Promise(function (resolve, reject) {\n      resolve(query);\n    })\n  };\n};\n\nvar updateTranslation = function updateTranslation(translation) {\n  return {\n    type: _types.UPDATE_TRANSLATION,\n    payload: new Promise(function (resolve, reject) {\n      resolve(translation);\n    })\n  };\n};\n\nvar updateWordList = function updateWordList(list) {\n  return {\n    type: _types.UPDATE_WORD_LIST,\n    payload: new Promise(function (resolve, reject) {\n      resolve(list);\n    })\n  };\n};\n\nexports.loadAudioUrl = loadAudioUrl;\nexports.loadQuery = loadQuery;\nexports.loadQuestion = loadQuestion;\nexports.loadOriginalWordList = loadOriginalWordList;\nexports.loadWordList = loadWordList;\nexports.updateOriginalWordList = updateOriginalWordList;\nexports.updatePicture = updatePicture;\nexports.updateTranslation = updateTranslation;\nexports.updateWordList = updateWordList;\nexports.updateReviewList = updateReviewList;\nexports.sendRomanized = sendRomanized;\nexports.sendTranslated = sendTranslated;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(loadOriginalWordList, 'loadOriginalWordList', '/var/www/html/utter/client/src/containers/Pictures/actions.js');\n\n  __REACT_HOT_LOADER__.register(loadAudioUrl, 'loadAudioUrl', '/var/www/html/utter/client/src/containers/Pictures/actions.js');\n\n  __REACT_HOT_LOADER__.register(loadQuery, 'loadQuery', '/var/www/html/utter/client/src/containers/Pictures/actions.js');\n\n  __REACT_HOT_LOADER__.register(loadQuestion, 'loadQuestion', '/var/www/html/utter/client/src/containers/Pictures/actions.js');\n\n  __REACT_HOT_LOADER__.register(loadWordList, 'loadWordList', '/var/www/html/utter/client/src/containers/Pictures/actions.js');\n\n  __REACT_HOT_LOADER__.register(sendRomanized, 'sendRomanized', '/var/www/html/utter/client/src/containers/Pictures/actions.js');\n\n  __REACT_HOT_LOADER__.register(sendTranslated, 'sendTranslated', '/var/www/html/utter/client/src/containers/Pictures/actions.js');\n\n  __REACT_HOT_LOADER__.register(updateOriginalWordList, 'updateOriginalWordList', '/var/www/html/utter/client/src/containers/Pictures/actions.js');\n\n  __REACT_HOT_LOADER__.register(updatePicture, 'updatePicture', '/var/www/html/utter/client/src/containers/Pictures/actions.js');\n\n  __REACT_HOT_LOADER__.register(updateReviewList, 'updateReviewList', '/var/www/html/utter/client/src/containers/Pictures/actions.js');\n\n  __REACT_HOT_LOADER__.register(updateTranslation, 'updateTranslation', '/var/www/html/utter/client/src/containers/Pictures/actions.js');\n\n  __REACT_HOT_LOADER__.register(updateWordList, 'updateWordList', '/var/www/html/utter/client/src/containers/Pictures/actions.js');\n}();\n\n;\n\n ;(function register() { /* react-hot-loader/webpack */ if (process.env.NODE_ENV !== 'production') { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : module.exports; /* eslint-enable camelcase, no-undef */ if (typeof webpackExports === 'function') { __REACT_HOT_LOADER__.register(webpackExports, 'module.exports', \"/var/www/html/utter/client/src/containers/Pictures/actions.js\"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, \"/var/www/html/utter/client/src/containers/Pictures/actions.js\"); } } })();","{\"version\":3,\"sources\":[\"/var/www/html/utter/client/src/containers/Pictures/actions.js\"],\"names\":[\"loadOriginalWordList\",\"type\",\"payload\",\"Promise\",\"resolve\",\"reject\",\"list\",\"loadAudioUrl\",\"url\",\"loadQuery\",\"query\",\"loadQuestion\",\"question\",\"loadWordList\",\"sendRomanized\",\"word\",\"sendTranslated\",\"updateOriginalWordList\",\"updatePicture\",\"src\",\"updateReviewList\",\"updateTranslation\",\"translation\",\"updateWordList\"],\"mappings\":\";;;;;;;AAAA;;AAgBA,IAAMA,uBAAuB,SAAvBA,oBAAuB,OAAQ;AACnC,SAAO;AACLC,wCADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQE,IAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMC,eAAe,SAAfA,YAAe,MAAO;AAC1B,SAAO;AACLN,+BADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQI,GAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMC,YAAY,SAAZA,SAAY,QAAS;AACzB,SAAO;AACLR,2BADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQM,KAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMC,eAAe,SAAfA,YAAe,WAAY;AAC/B,SAAO;AACLV,8BADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQQ,QAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMC,eAAe,SAAfA,YAAe,OAAQ;AAC3B,SAAO;AACLZ,+BADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQE,IAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMQ,gBAAgB,SAAhBA,aAAgB,OAAQ;AAC5B,SAAO;AACLb,+BADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQW,IAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMC,iBAAiB,SAAjBA,cAAiB,QAAS;AAC9B,SAAO;AACLf,gCADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQM,KAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMO,yBAAyB,SAAzBA,sBAAyB,OAAQ;AACrC,SAAO;AACLhB,0CADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQE,IAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMY,gBAAgB,SAAhBA,aAAgB,MAAO;AAC3B,SAAO;AACLjB,+BADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQe,GAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,mBAAmB,SAAnBA,gBAAmB,QAAS;AAChC,SAAO;AACLnB,mCADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQM,KAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMW,oBAAoB,SAApBA,iBAAoB,cAAe;AACvC,SAAO;AACLpB,mCADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQkB,WAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;AASA,IAAMC,iBAAiB,SAAjBA,cAAiB,OAAQ;AAC7B,SAAO;AACLtB,iCADK;AAELC,aAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxCD,cAAQE,IAAR;AACD,KAFQ;AAFJ,GAAP;AAMD,CAPD;;QAUEC,Y,GAAAA,Y;QACAE,S,GAAAA,S;QACAE,Y,GAAAA,Y;QACAX,oB,GAAAA,oB;QACAa,Y,GAAAA,Y;QACAI,sB,GAAAA,sB;QACAC,a,GAAAA,a;QAEAG,iB,GAAAA,iB;QACAE,c,GAAAA,c;QACAH,gB,GAAAA,gB;QACAN,a,GAAAA,a;QACAE,c,GAAAA,c;;;;;;;;gCAlIIhB,oB;;gCASAO,Y;;gCASAE,S;;gCASAE,Y;;gCASAE,Y;;gCASAC,a;;gCASAE,c;;gCASAC,sB;;gCASAC,a;;gCAkBAE,gB;;gCASAC,iB;;gCASAE,c\",\"sourcesContent\":[\"import {\\n  LOAD_AUDIO_URL,\\n  LOAD_QUERY,\\n  LOAD_QUESTION,\\n  LOAD_WORD_LIST,\\n  LOAD_ORIGINAL_WORD_LIST,\\n  SEND_ROMANIZED,\\n  SEND_TRANSLATED,\\n  UPDATE_ORIGINAL_WORD_LIST,\\n  UPDATE_PICTURE,\\n  // UDPATE_QUERY,\\n  UPDATE_TRANSLATION,\\n  UPDATE_WORD_LIST,\\n  UPDATE_REVIEW_LIST\\n} from './types.js'\\n\\nconst loadOriginalWordList = list => {\\n  return {\\n    type: LOAD_ORIGINAL_WORD_LIST,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(list)\\n    })\\n  }\\n}\\n\\nconst loadAudioUrl = url => {\\n  return {\\n    type: LOAD_AUDIO_URL,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(url)\\n    })\\n  }\\n}\\n\\nconst loadQuery = query => {\\n  return {\\n    type: LOAD_QUERY,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(query)\\n    })\\n  }\\n}\\n\\nconst loadQuestion = question => {\\n  return {\\n    type: LOAD_QUESTION,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(question)\\n    })\\n  }\\n}\\n\\nconst loadWordList = list => {\\n  return {\\n    type: LOAD_WORD_LIST,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(list)\\n    })\\n  }\\n}\\n\\nconst sendRomanized = word => {\\n  return {\\n    type: SEND_ROMANIZED,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(word)\\n    })\\n  }\\n}\\n\\nconst sendTranslated = query => {\\n  return {\\n    type: SEND_TRANSLATED,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(query)\\n    })\\n  }\\n}\\n\\nconst updateOriginalWordList = list => {\\n  return {\\n    type: UPDATE_ORIGINAL_WORD_LIST,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(list)\\n    })\\n  }\\n}\\n\\nconst updatePicture = src => {\\n  return {\\n    type: UPDATE_PICTURE,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(src)\\n    })\\n  }\\n}\\n\\n// const updateQuery = query => {\\n//   return {\\n//     type: UPDATE_QUERY,\\n//     payload: new Promise((resolve, reject) => {\\n//       resolve(query)\\n//     })\\n//   }\\n// }\\n\\nconst updateReviewList = query => {\\n  return {\\n    type: UPDATE_REVIEW_LIST,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(query)\\n    })\\n  }\\n}\\n\\nconst updateTranslation = translation => {\\n  return {\\n    type: UPDATE_TRANSLATION,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(translation)\\n    })\\n  }\\n}\\n\\nconst updateWordList = list => {\\n  return {\\n    type: UPDATE_WORD_LIST,\\n    payload: new Promise((resolve, reject) => {\\n      resolve(list)\\n    })\\n  }\\n}\\n\\nexport {\\n  loadAudioUrl,\\n  loadQuery,\\n  loadQuestion,\\n  loadOriginalWordList,\\n  loadWordList,\\n  updateOriginalWordList,\\n  updatePicture,\\n  // updateQuery,\\n  updateTranslation,\\n  updateWordList,\\n  updateReviewList,\\n  sendRomanized,\\n  sendTranslated\\n}\\n\"]}"]}