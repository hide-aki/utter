{"remainingRequest":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js!/var/www/html/utter/node_modules/babel-loader/lib/index.js!/var/www/html/utter/client/src/layouts/Admin/Phrases/actions.js","dependencies":[{"path":"/var/www/html/utter/client/src/layouts/Admin/Phrases/actions.js","mtime":1517345659176},{"path":"/var/www/html/utter/.babelrc","mtime":1518822814526},{"path":"/var/www/html/utter/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/var/www/html/utter/node_modules/react-hot-loader/webpack.js","mtime":1510167650000},{"path":"/var/www/html/utter/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _reduxCrud = require('redux-crud');\n\nvar _reduxCrud2 = _interopRequireDefault(_reduxCrud);\n\nvar _axios = require('axios');\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _cuid = require('cuid');\n\nvar _cuid2 = _interopRequireDefault(_cuid);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar cid = (0, _cuid2.default)();\n\nvar baseActionCreators = _reduxCrud2.default.actionCreatorsFor('phrase');\n\nvar actionCreators = {\n  fetch: function fetch(level) {\n    return function (dispatch, getState) {\n      var action = baseActionCreators.fetchStart();\n      dispatch(action);\n\n      // api request\n      var url = '/api/phrases';\n      if (!level) {\n        level = '1';\n      }\n      var promise = (0, _axios2.default)({\n        url: url,\n        params: {\n          level: level\n        },\n        headers: {\n          'Cache-Control': 'no-cache, no-store, must-revalidate',\n          Pragma: 'no-cache',\n          Expires: 0\n        }\n      });\n\n      promise.then(function (res) {\n        var returned = res.data;\n        returned.id = cid;\n        var successAction = baseActionCreators.fetchSuccess(returned);\n        dispatch(successAction);\n      }, function (res) {\n        // On rejection dispatch the error action\n        var errorAction = baseActionCreators.fetchError(res);\n        dispatch(errorAction);\n      }).catch(function (err) {\n        console.error(err.toString());\n      });\n\n      return promise;\n    };\n  },\n  create: function create(phrase) {\n    return function (dispatch, getState) {\n      // Generate a cid so we can match the records\n      var cid = (0, _cuid2.default)();\n      phrase = _lodash2.default.merge(phrase, { id: cid });\n\n      var action = baseActionCreators.createStart(phrase);\n      dispatch(action);\n\n      // api request\n      var url = '/api/phrases';\n      console.log('phrase: ', phrase);\n      var promise = (0, _axios2.default)({\n        url: url,\n        method: 'POST',\n        data: phrase\n      });\n\n      promise.then(function (res) {\n        var returned = res.data;\n        returned.id = cid;\n        var successAction = baseActionCreators.createSuccess(returned, cid);\n        dispatch(successAction);\n      }, function (res) {\n        // On rejection dispatch the error action\n        var errorAction = baseActionCreators.createError(res, phrase);\n        dispatch(errorAction);\n      }).catch(function (err) {\n        console.error(err.toString());\n      });\n\n      return promise;\n    };\n  },\n  update: function update(phrase) {\n    return function (dispatch) {\n      // optimistic update\n      console.log('phrase in actions: ', phrase);\n      var action = baseActionCreators.updateStart(phrase);\n      dispatch(action);\n\n      // api request\n      var url = '/api/phrases/' + phrase._id;\n      var promise = (0, _axios2.default)({\n        url: url,\n        method: 'PUT',\n        data: {\n          phrase: phrase\n        }\n      });\n\n      promise.then(function (response) {\n        var returnedPhrase = response.data.data;\n        var action = baseActionCreators.updateSuccess(returnedPhrase);\n        dispatch(action);\n      }, function (response) {\n        var action = baseActionCreators.updateError(response, phrase);\n        dispatch(action);\n      }).catch(function (err) {\n        console.error(err.toString());\n      });\n\n      return promise;\n    };\n  },\n  delete: function _delete(phrase) {\n    return function (dispatch) {\n      var optimisticAction = baseActionCreators.deleteStart(phrase);\n      dispatch(optimisticAction);\n\n      var url = '/api/phrases/' + phrase._id;\n      var promise = (0, _axios2.default)({\n        url: url,\n        method: 'DELETE'\n      });\n\n      promise.then(function (response) {\n        // dispatch the success action\n        var successAction = baseActionCreators.deleteSuccess(phrase);\n        dispatch(successAction);\n      }, function (response) {\n        // rejection\n        // dispatch the error action\n        var errorAction = baseActionCreators.deleteError(response, phrase);\n        dispatch(errorAction);\n      }).catch(function (err) {\n        console.error(err.toString());\n      });\n\n      return promise;\n    };\n  }\n};\n\nactionCreators = Object.assign(baseActionCreators, actionCreators);\n\nvar _default = actionCreators;\nexports.default = _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(cid, 'cid', '/var/www/html/utter/client/src/layouts/Admin/Phrases/actions.js');\n\n  __REACT_HOT_LOADER__.register(baseActionCreators, 'baseActionCreators', '/var/www/html/utter/client/src/layouts/Admin/Phrases/actions.js');\n\n  __REACT_HOT_LOADER__.register(actionCreators, 'actionCreators', '/var/www/html/utter/client/src/layouts/Admin/Phrases/actions.js');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/var/www/html/utter/client/src/layouts/Admin/Phrases/actions.js');\n}();\n\n;\n\n ;(function register() { /* react-hot-loader/webpack */ if (process.env.NODE_ENV !== 'production') { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : module.exports; /* eslint-enable camelcase, no-undef */ if (typeof webpackExports === 'function') { __REACT_HOT_LOADER__.register(webpackExports, 'module.exports', \"/var/www/html/utter/client/src/layouts/Admin/Phrases/actions.js\"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, \"/var/www/html/utter/client/src/layouts/Admin/Phrases/actions.js\"); } } })();","{\"version\":3,\"sources\":[\"/var/www/html/utter/client/src/layouts/Admin/Phrases/actions.js\"],\"names\":[\"cid\",\"baseActionCreators\",\"actionCreatorsFor\",\"actionCreators\",\"fetch\",\"level\",\"dispatch\",\"getState\",\"action\",\"fetchStart\",\"url\",\"promise\",\"params\",\"headers\",\"Pragma\",\"Expires\",\"then\",\"returned\",\"res\",\"data\",\"id\",\"successAction\",\"fetchSuccess\",\"errorAction\",\"fetchError\",\"catch\",\"err\",\"console\",\"error\",\"toString\",\"create\",\"phrase\",\"merge\",\"createStart\",\"log\",\"method\",\"createSuccess\",\"createError\",\"update\",\"updateStart\",\"_id\",\"response\",\"returnedPhrase\",\"updateSuccess\",\"updateError\",\"delete\",\"optimisticAction\",\"deleteStart\",\"deleteSuccess\",\"deleteError\",\"Object\",\"assign\"],\"mappings\":\"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\",\"sourcesContent\":[\"import reduxCrud from 'redux-crud'\\nimport axios from 'axios'\\nimport _ from 'lodash'\\nimport cuid from 'cuid'\\nconst cid = cuid()\\n\\nconst baseActionCreators = reduxCrud.actionCreatorsFor('phrase')\\n\\nlet actionCreators = {\\n  fetch(level) {\\n    return (dispatch, getState) => {\\n      const action = baseActionCreators.fetchStart()\\n      dispatch(action)\\n\\n      // api request\\n      const url = '/api/phrases'\\n      if (!level) {\\n        level = '1'\\n      }\\n      const promise = axios({\\n        url,\\n        params: {\\n          level: level\\n        },\\n        headers: {\\n          'Cache-Control': 'no-cache, no-store, must-revalidate',\\n          Pragma: 'no-cache',\\n          Expires: 0\\n        }\\n      })\\n\\n      promise\\n        .then(\\n          res => {\\n            const returned = res.data\\n            returned.id = cid\\n            const successAction = baseActionCreators.fetchSuccess(returned)\\n            dispatch(successAction)\\n          },\\n          function(res) {\\n            // On rejection dispatch the error action\\n            const errorAction = baseActionCreators.fetchError(res)\\n            dispatch(errorAction)\\n          }\\n        )\\n        .catch(function(err) {\\n          console.error(err.toString())\\n        })\\n\\n      return promise\\n    }\\n  },\\n  create(phrase) {\\n    return (dispatch, getState) => {\\n      // Generate a cid so we can match the records\\n      var cid = cuid()\\n      phrase = _.merge(phrase, {id: cid})\\n\\n      const action = baseActionCreators.createStart(phrase)\\n      dispatch(action)\\n\\n      // api request\\n      const url = '/api/phrases'\\n      console.log('phrase: ', phrase)\\n      const promise = axios({\\n        url,\\n        method: 'POST',\\n        data: phrase\\n      })\\n\\n      promise\\n        .then(\\n          res => {\\n            const returned = res.data\\n            returned.id = cid\\n            const successAction = baseActionCreators.createSuccess(\\n              returned,\\n              cid\\n            )\\n            dispatch(successAction)\\n          },\\n          function(res) {\\n            // On rejection dispatch the error action\\n            const errorAction = baseActionCreators.createError(res, phrase)\\n            dispatch(errorAction)\\n          }\\n        )\\n        .catch(function(err) {\\n          console.error(err.toString())\\n        })\\n\\n      return promise\\n    }\\n  },\\n\\n  update(phrase) {\\n    return function(dispatch) {\\n      // optimistic update\\n      console.log('phrase in actions: ', phrase)\\n      const action = baseActionCreators.updateStart(phrase)\\n      dispatch(action)\\n\\n      // api request\\n      const url = `/api/phrases/${phrase._id}`\\n      const promise = axios({\\n        url,\\n        method: 'PUT',\\n        data: {\\n          phrase\\n        }\\n      })\\n\\n      promise\\n        .then(\\n          function(response) {\\n            const returnedPhrase = response.data.data\\n            const action = baseActionCreators.updateSuccess(returnedPhrase)\\n            dispatch(action)\\n          },\\n          function(response) {\\n            const action = baseActionCreators.updateError(response, phrase)\\n            dispatch(action)\\n          }\\n        )\\n        .catch(function(err) {\\n          console.error(err.toString())\\n        })\\n\\n      return promise\\n    }\\n  },\\n\\n  delete(phrase) {\\n    return function(dispatch) {\\n      const optimisticAction = baseActionCreators.deleteStart(phrase)\\n      dispatch(optimisticAction)\\n\\n      const url = `/api/phrases/${phrase._id}`\\n      const promise = axios({\\n        url,\\n        method: 'DELETE'\\n      })\\n\\n      promise\\n        .then(\\n          function(response) {\\n            // dispatch the success action\\n            const successAction = baseActionCreators.deleteSuccess(phrase)\\n            dispatch(successAction)\\n          },\\n          function(response) {\\n            // rejection\\n            // dispatch the error action\\n            const errorAction = baseActionCreators.deleteError(response, phrase)\\n            dispatch(errorAction)\\n          }\\n        )\\n        .catch(function(err) {\\n          console.error(err.toString())\\n        })\\n\\n      return promise\\n    }\\n  }\\n}\\n\\nactionCreators = Object.assign(baseActionCreators, actionCreators)\\n\\nexport default actionCreators\\n\"]}"]}